set cut_paste_input [stack 0]
version 13.1 v2
BackdropNode {
 inputs 0
 name BackdropNode6
 tile_color 0x28253fff
 label "midComp Stamp\nPrecomp\nmerged with Plate"
 note_font_size 51
 note_font_color 0xffffffff
 selected true
 xpos 6509
 ypos 5413
 bdwidth 844
 bdheight 379
 z_order -10
}
BackdropNode {
 inputs 0
 name BackdropNode12
 tile_color 0x335e5eff
 label plate
 note_font_size 42
 note_font_color 0xffffffff
 selected true
 xpos 5573
 ypos 5420
 appearance Border
 border_width 10
 bdwidth 467
 bdheight 485
}
BackdropNode {
 inputs 0
 name BackdropNode13
 tile_color 0x8f442300
 label REGRAIN
 note_font_size 42
 selected true
 xpos 4931
 ypos 15643
 appearance Border
 bdwidth 618
 bdheight 431
}
BackdropNode {
 inputs 0
 name BackdropNode14
 tile_color 0x335e5eff
 gl_color 0xf4aaffff
 label "ALEMBIC GEOS"
 note_font_size 42
 note_font_color 0xffffffff
 selected true
 xpos 1973
 ypos 5406
 appearance Border
 border_width 10
 bdwidth 610
 bdheight 457
}
BackdropNode {
 inputs 0
 name BackdropNode16
 tile_color 0xab901e00
 label "ROTO MATTES!"
 note_font_size 150
 note_font_color 0xffffffff
 selected true
 xpos 39
 ypos 3131
 appearance Border
 bdwidth 3385
 bdheight 1584
}
BackdropNode {
 inputs 0
 name BackdropNode17
 tile_color 0x335e5eff
 gl_color 0xf4aaffff
 label precomp
 note_font_size 42
 note_font_color 0xffffffff
 selected true
 xpos 3524
 ypos 5401
 appearance Border
 border_width 10
 bdwidth 610
 bdheight 457
}
BackdropNode {
 inputs 0
 name BackdropNode18
 tile_color 0x335e5eff
 gl_color 0xf4aaffff
 label CAMERA
 note_font_size 42
 note_font_color 0xffffffff
 selected true
 xpos 2685
 ypos 5414
 appearance Border
 border_width 10
 bdwidth 610
 bdheight 457
}
BackdropNode {
 inputs 0
 name BackdropNode19
 tile_color 0x335e5eff
 label "DNS plate"
 note_font_size 42
 note_font_color 0xffffffff
 selected true
 xpos 5094
 ypos 5414
 appearance Border
 border_width 10
 bdwidth 366
 bdheight 465
}
BackdropNode {
 inputs 0
 name exr1
 tile_color 0x335e5eff
 gl_color 0x6a55ffff
 label "review (mov)"
 note_font_size 42
 note_font_color 0xffffffff
 selected true
 xpos 4927
 ypos 17951
 appearance Border
 border_width 10
 bdwidth 643
 bdheight 559
}
BackdropNode {
 inputs 0
 name exr2
 tile_color 0x335e5eff
 gl_color 0x6a55ffff
 label "review (EXRs)"
 note_font_size 42
 note_font_color 0xffffffff
 selected true
 xpos 5044
 ypos 17105
 appearance Border
 border_width 10
 bdwidth 443
 bdheight 302
}
BackdropNode {
 inputs 0
 name exr7
 tile_color 0x335e5eff
 gl_color 0x6a55ffff
 label "review (rendered)"
 note_font_size 42
 note_font_color 0xffffffff
 selected true
 xpos 5038
 ypos 17469
 appearance Border
 border_width 10
 bdwidth 443
 bdheight 302
}
BackdropNode {
 inputs 0
 name exr8
 tile_color 0x335e5eff
 label "nr cleanup element ONLY\nexr"
 note_font_size 42
 selected true
 xpos -1206
 ypos 15644
 appearance Border
 border_width 10
 bdwidth 657
 bdheight 312
}
BackdropNode {
 inputs 0
 name BackdropNode20
 tile_color 0x47726100
 label "preview merge!"
 note_font_size 42
 note_font_color 0xffffffff
 selected true
 xpos 5031
 ypos 15174
 appearance Border
 bdwidth 335
 bdheight 251
 z_order 1
}
push $cut_paste_input
Shuffle2 {
 fromInput1 {{0} B}
 fromInput2 {{0} B}
 mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 white -1 -1 rgba.alpha 0 3"
 name Shuffle14
 selected true
 xpos 5174
 ypos 5579
}
TimeOffset {
 time_offset 1001
 time ""
 name TimeOffset1
 selected true
 xpos 5174
 ypos 5605
}
Dot {
 name Dot32
 selected true
 xpos 5208
 ypos 5740
}
NoOp {
 name Anchor_30cdcd2d8c1
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.anchorOnCreate()\n    except:\n        pass"
 knobChanged stamps.anchorKnobChanged()
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0xffffff01
 note_font_size 20
 selected true
 xpos 5174
 ypos 5804
 addUserKnob {20 anchor_tab l "Anchor Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T anchor}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title denoise
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T DENOISE}
 addUserKnob {26 prev_name l "" +STARTLINE +HIDDEN T Anchor_30cdcd2d8c1}
 addUserKnob {3 showing l "" +STARTLINE +HIDDEN}
 addUserKnob {1 tags l Tags t "Comma-separated tags you can define for each Anchor, that will help you find it when invoking the Stamp Selector by pressing the Stamps shortkey with nothing selected."}
 tags 2D
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 createStamp l new t "Create a new Stamp for this Anchor." -STARTLINE T stamps.stampCreateWired(nuke.thisNode())}
 addUserKnob {22 selectStamps l select t "Reconnect all of this Anchor's Stamps." -STARTLINE T stamps.wiredSelectSimilar(nuke.thisNode().name())}
 addUserKnob {22 reconnectStamps l reconnect -STARTLINE T stamps.anchorReconnectWired()}
 addUserKnob {22 zoomNext l "zoom next" t "Navigate to this Anchor's next Stamp on the Node Graph." -STARTLINE T stamps.wiredZoomNext(nuke.thisNode().name())}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
}
set N33e7b200 [stack 0]
PostageStamp {
 name Stamp17
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
 knobChanged "import stamps; stamps.wiredKnobChanged()"
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0x1000001
 note_font "Bitstream Vera Sans"
 note_font_size 20
 selected true
 xpos 5290
 ypos 5845
 hide_input true
 addUserKnob {20 wired_tab l "Wired Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
 addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
 addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title denoise
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T denoise}
 addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
 addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." +HIDDEN T " "}
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
 addUserKnob {26 anchor_label l Anchor: T " "}
 addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
 addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
 addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
 addUserKnob {26 space_1 l "" +STARTLINE T " "}
 addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
 addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
 addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
 addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
 addUserKnob {26 space_2 l "" +STARTLINE T " "}
 addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
 addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
 addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
 addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
 addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
 addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
 addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
 addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
 addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
 addUserKnob {1 anchor l Anchor}
 anchor Anchor_30cdcd2d8c1
 addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
}
TimeOffset {
 inputs 0
 time_offset 1001
 time ""
 name TimeOffset9
 selected true
 xpos 3625
 ypos 5612
}
Dot {
 name Dot33
 selected true
 xpos 3659
 ypos 5712
}
set N33e79d00 [stack 0]
NoOp {
 name Anchor_30cdcd2d8c8
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.anchorOnCreate()\n    except:\n        pass"
 knobChanged stamps.anchorKnobChanged()
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0xffffff01
 note_font_size 20
 selected true
 xpos 3625
 ypos 5780
 addUserKnob {20 anchor_tab l "Anchor Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T anchor}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title precomp
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T DENOISE}
 addUserKnob {26 prev_name l "" +STARTLINE +HIDDEN T Anchor_30cdcd2d8c8}
 addUserKnob {3 showing l "" +STARTLINE +HIDDEN}
 addUserKnob {1 tags l Tags t "Comma-separated tags you can define for each Anchor, that will help you find it when invoking the Stamp Selector by pressing the Stamps shortkey with nothing selected."}
 tags 2D
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 createStamp l new t "Create a new Stamp for this Anchor." -STARTLINE T stamps.stampCreateWired(nuke.thisNode())}
 addUserKnob {22 selectStamps l select t "Reconnect all of this Anchor's Stamps." -STARTLINE T stamps.wiredSelectSimilar(nuke.thisNode().name())}
 addUserKnob {22 reconnectStamps l reconnect -STARTLINE T stamps.anchorReconnectWired()}
 addUserKnob {22 zoomNext l "zoom next" t "Navigate to this Anchor's next Stamp on the Node Graph." -STARTLINE T stamps.wiredZoomNext(nuke.thisNode().name())}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
}
set N33e79600 [stack 0]
PostageStamp {
 name Stamp18
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
 knobChanged "import stamps; stamps.wiredKnobChanged()"
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0x1000001
 note_font "Bitstream Vera Sans"
 note_font_size 20
 selected true
 xpos 3735
 ypos 5836
 hide_input true
 addUserKnob {20 wired_tab l "Wired Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
 addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
 addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title precomp
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T precomp}
 addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
 addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." +HIDDEN T " "}
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
 addUserKnob {26 anchor_label l Anchor: T " "}
 addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
 addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
 addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
 addUserKnob {26 space_1 l "" +STARTLINE T " "}
 addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
 addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
 addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
 addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
 addUserKnob {26 space_2 l "" +STARTLINE T " "}
 addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
 addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
 addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
 addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
 addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
 addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
 addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
 addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
 addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
 addUserKnob {1 anchor l Anchor}
 anchor Anchor_30cdcd2d8c8
 addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
}
Dot {
 inputs 0
 name Dot34
 selected true
 xpos 2014
 ypos 3713
}
Dot {
 inputs 0
 name Dot36
 selected true
 xpos 2027
 ypos 3610
}
Dot {
 inputs 0
 name Dot45
 selected true
 xpos 2033
 ypos 3516
}
Constant {
 inputs 0
 name Constant3
 selected true
 xpos 2081
 ypos 3368
}
Shuffle2 {
 inputs 2
 fromInput1 {{0} B A}
 fromInput2 {{1} B A}
 in2 rgba
 mappings "4 rgba.blue 0 2 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3 rgba.green 0 1 rgba.green 0 1 rgba.alpha 1 3 rgba.red 0 0"
 name Shuffle15
 label "A ALPHA to RED"
 selected true
 xpos 2081
 ypos 3506
}
Shuffle2 {
 inputs 2
 fromInput1 {{0} B A}
 fromInput2 {{1} B A}
 in2 rgba
 mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.alpha 0 3 rgba.alpha 0 3 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 1 3 rgba.green 0 1"
 name Shuffle16
 label "A ALPHA to GREEN"
 selected true
 xpos 2081
 ypos 3600
}
Shuffle2 {
 inputs 2
 fromInput1 {{0} B A}
 fromInput2 {{1} B A}
 in2 rgba
 mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 black -1 -1 rgba.alpha 0 3 rgba.alpha 1 3 rgba.blue 0 2"
 name Shuffle18
 label "A ALPHA to BLUE"
 selected true
 xpos 2081
 ypos 3703
 disable true
}
Dot {
 name Dot46
 selected true
 xpos 2115
 ypos 3913
}
Dot {
 name Dot47
 selected true
 xpos 1808
 ypos 3913
}
Dot {
 inputs 0
 name Dot48
 selected true
 xpos 1611
 ypos 3703
}
Dot {
 inputs 0
 name Dot49
 selected true
 xpos 1624
 ypos 3600
}
Dot {
 inputs 0
 name Dot50
 selected true
 xpos 1630
 ypos 3524
}
Constant {
 inputs 0
 name Constant4
 selected true
 xpos 1678
 ypos 3360
}
Shuffle2 {
 inputs 2
 fromInput1 {{0} B A}
 fromInput2 {{1} B A}
 in2 rgba
 mappings "4 rgba.blue 0 2 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3 rgba.green 0 1 rgba.green 0 1 rgba.alpha 1 3 rgba.red 0 0"
 name Shuffle23
 label "A ALPHA to RED"
 selected true
 xpos 1678
 ypos 3514
}
Shuffle2 {
 inputs 2
 fromInput1 {{0} B A}
 fromInput2 {{1} B A}
 in2 rgba
 mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.alpha 0 3 rgba.alpha 0 3 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 1 3 rgba.green 0 1"
 name Shuffle24
 label "A ALPHA to GREEN"
 selected true
 xpos 1678
 ypos 3590
}
Shuffle2 {
 inputs 2
 fromInput1 {{0} B A}
 fromInput2 {{1} B A}
 in2 rgba
 mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 black -1 -1 rgba.alpha 0 3 rgba.alpha 1 3 rgba.blue 0 2"
 name Shuffle25
 label "A ALPHA to BLUE"
 selected true
 xpos 1678
 ypos 3693
}
Dot {
 name Dot51
 selected true
 xpos 1712
 ypos 3827
}
Dot {
 name Dot52
 selected true
 xpos 1290
 ypos 3827
}
Dot {
 inputs 0
 name Dot53
 selected true
 xpos 1054
 ypos 3704
}
Dot {
 inputs 0
 name Dot54
 selected true
 xpos 1067
 ypos 3601
}
Dot {
 inputs 0
 name Dot55
 selected true
 xpos 1073
 ypos 3525
}
Constant {
 inputs 0
 name Constant5
 selected true
 xpos 1121
 ypos 3361
}
Shuffle2 {
 inputs 2
 fromInput1 {{0} B A}
 fromInput2 {{1} B A}
 in2 rgba
 mappings "4 rgba.blue 0 2 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3 rgba.green 0 1 rgba.green 0 1 rgba.alpha 1 3 rgba.red 0 0"
 name Shuffle26
 label "A ALPHA to RED"
 selected true
 xpos 1121
 ypos 3515
}
Shuffle2 {
 inputs 2
 fromInput1 {{0} B A}
 fromInput2 {{1} B A}
 in2 rgba
 mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.alpha 0 3 rgba.alpha 0 3 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 1 3 rgba.green 0 1"
 name Shuffle27
 label "A ALPHA to GREEN"
 selected true
 xpos 1121
 ypos 3591
}
Shuffle2 {
 inputs 2
 fromInput1 {{0} B A}
 fromInput2 {{1} B A}
 in2 rgba
 mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 black -1 -1 rgba.alpha 0 3 rgba.alpha 1 3 rgba.blue 0 2"
 name Shuffle28
 label "A ALPHA to BLUE"
 selected true
 xpos 1121
 ypos 3694
}
add_layer {lips_mblur lips_mblur.red lips_mblur.green lips_mblur.blue lips_mblur.alpha}
Shuffle2 {
 inputs 2
 fromInput1 {{1} B A}
 out1 lips_mblur
 fromInput2 {{0} B A}
 mappings "4 rgba.red 0 0 lips_mblur.red 0 0 rgba.green 0 1 lips_mblur.green 0 1 rgba.blue 0 2 lips_mblur.blue 0 2 rgba.alpha 0 3 lips_mblur.alpha 0 3"
 name Shuffle29
 label "\[value out1]"
 selected true
 xpos 1121
 ypos 3817
}
add_layer {lips_extra lips_extra.red lips_extra.green lips_extra.blue lips_extra.alpha}
Shuffle2 {
 inputs 2
 fromInput1 {{1} B A}
 out1 lips_extra
 fromInput2 {{0} B A}
 mappings "4 rgba.red 0 0 lips_extra.red 0 0 rgba.green 0 1 lips_extra.green 0 1 rgba.blue 0 2 lips_extra.blue 0 2 rgba.alpha 0 3 lips_extra.alpha 0 3"
 name Shuffle30
 label "\[value out1]"
 selected true
 xpos 1121
 ypos 3903
}
Dot {
 name Dot56
 selected true
 xpos 1155
 ypos 4155
}
set N33de7200 [stack 0]
LayerContactSheet {
 width 3840
 height 2160
 showLayerNames true
 name LayerContactSheet1
 selected true
 xpos 1265
 ypos 4151
}
Shuffle2 {
 inputs 0
 fromInput1 {{0} B}
 fromInput2 {{0} B}
 mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 white -1 -1 rgba.alpha 0 3"
 name Shuffle31
 selected true
 xpos 5773
 ypos 5545
}
TimeOffset {
 time_offset 1001
 time ""
 name TimeOffset10
 selected true
 xpos 5773
 ypos 5611
}
Dot {
 name Dot57
 selected true
 xpos 5807
 ypos 5756
}
NoOp {
 name Anchor_30cdcd2d8c9
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.anchorOnCreate()\n    except:\n        pass"
 knobChanged stamps.anchorKnobChanged()
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0xffffff01
 note_font_size 20
 selected true
 xpos 5773
 ypos 5790
 addUserKnob {20 anchor_tab l "Anchor Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T anchor}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title plate
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T DENOISE}
 addUserKnob {26 prev_name l "" +STARTLINE +HIDDEN T Anchor_30cdcd2d8c9}
 addUserKnob {3 showing l "" +STARTLINE +HIDDEN}
 addUserKnob {1 tags l Tags t "Comma-separated tags you can define for each Anchor, that will help you find it when invoking the Stamp Selector by pressing the Stamps shortkey with nothing selected."}
 tags 2D
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 createStamp l new t "Create a new Stamp for this Anchor." -STARTLINE T stamps.stampCreateWired(nuke.thisNode())}
 addUserKnob {22 selectStamps l select t "Reconnect all of this Anchor's Stamps." -STARTLINE T stamps.wiredSelectSimilar(nuke.thisNode().name())}
 addUserKnob {22 reconnectStamps l reconnect -STARTLINE T stamps.anchorReconnectWired()}
 addUserKnob {22 zoomNext l "zoom next" t "Navigate to this Anchor's next Stamp on the Node Graph." -STARTLINE T stamps.wiredZoomNext(nuke.thisNode().name())}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
}
set N33de4f00 [stack 0]
Dot {
 name Dot58
 selected true
 xpos 5807
 ypos 5884
}
StickyNote {
 inputs 0
 name StickyNote14
 label "top lip\nmblur off"
 selected true
 xpos 1218
 ypos 3516
}
StickyNote {
 inputs 0
 name StickyNote15
 label "bot lip\nmblur off"
 selected true
 xpos 1228
 ypos 3583
}
StickyNote {
 inputs 0
 name StickyNote16
 label "lip gmatte\nmblur off"
 selected true
 xpos 1205
 ypos 3688
}
StickyNote {
 inputs 0
 name StickyNote18
 label "top lip\nmblur on"
 selected true
 xpos 1780
 ypos 3513
}
StickyNote {
 inputs 0
 name StickyNote19
 label "bot lip\nmblur on"
 selected true
 xpos 1790
 ypos 3580
}
StickyNote {
 inputs 0
 name StickyNote20
 label "lip gmatte\nmblur on"
 selected true
 xpos 1767
 ypos 3685
}
Roto {
 inputs 0
 cliptype none
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 0}
    {t x44f00000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}}}}}
 toolbox {createBezier {
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1920 1080}
 name Roto9
 selected true
 xpos 2596
 ypos 3510
}
Dot {
 name Dot59
 selected true
 xpos 2630
 ypos 3605
}
push $N33e79600
PostageStamp {
 name Stamp19
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
 knobChanged "import stamps; stamps.wiredKnobChanged()"
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0x1000001
 note_font "Bitstream Vera Sans"
 note_font_size 20
 selected true
 xpos 2384
 ypos 3525
 hide_input true
 addUserKnob {20 wired_tab l "Wired Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
 addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
 addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title precomp
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T precomp}
 addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
 addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." +HIDDEN T " "}
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
 addUserKnob {26 anchor_label l Anchor: T " "}
 addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
 addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
 addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
 addUserKnob {26 space_1 l "" +STARTLINE T " "}
 addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
 addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
 addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
 addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
 addUserKnob {26 space_2 l "" +STARTLINE T " "}
 addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
 addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
 addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
 addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
 addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
 addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
 addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
 addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
 addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
 addUserKnob {1 anchor l Anchor}
 anchor Anchor_30cdcd2d8c8
 addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
}
Dot {
 name Dot60
 selected true
 xpos 2418
 ypos 3681
}
Grade {
 inputs 1+1
 white {1.4 1 1 1}
 black_clamp false
 name Grade4
 selected true
 xpos 2596
 ypos 3677
}
Dot {
 inputs 0
 name Dot61
 selected true
 xpos 2953
 ypos 5654
}
NoOp {
 name Anchor_30cdcd2d8c10
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.anchorOnCreate()\n    except:\n        pass"
 knobChanged stamps.anchorKnobChanged()
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0xffffff01
 note_font_size 20
 selected true
 xpos 2919
 ypos 5717
 addUserKnob {20 anchor_tab l "Anchor Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T anchor}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title CAMERA
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T DENOISE}
 addUserKnob {26 prev_name l "" +STARTLINE +HIDDEN T Anchor_30cdcd2d8c10}
 addUserKnob {3 showing l "" +STARTLINE +HIDDEN}
 addUserKnob {1 tags l Tags t "Comma-separated tags you can define for each Anchor, that will help you find it when invoking the Stamp Selector by pressing the Stamps shortkey with nothing selected."}
 tags camera
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 createStamp l new t "Create a new Stamp for this Anchor." -STARTLINE T stamps.stampCreateWired(nuke.thisNode())}
 addUserKnob {22 selectStamps l select t "Reconnect all of this Anchor's Stamps." -STARTLINE T stamps.wiredSelectSimilar(nuke.thisNode().name())}
 addUserKnob {22 reconnectStamps l reconnect -STARTLINE T stamps.anchorReconnectWired()}
 addUserKnob {22 zoomNext l "zoom next" t "Navigate to this Anchor's next Stamp on the Node Graph." -STARTLINE T stamps.wiredZoomNext(nuke.thisNode().name())}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
}
NoOp {
 name Stamp21
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
 knobChanged "import stamps; stamps.wiredKnobChanged()"
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0x33000001
 note_font "Bitstream Vera Sans"
 note_font_size 20
 selected true
 xpos 2919
 ypos 5773
 hide_input true
 addUserKnob {20 wired_tab l "Wired Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
 addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
 addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title CAMERA
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T CAMERA}
 addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>camera</i>}
 addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T <i>KT_Track</i>}
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +HIDDEN +STARTLINE}
 addUserKnob {26 anchor_label l Anchor: T " "}
 addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
 addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
 addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
 addUserKnob {26 space_1 l "" +STARTLINE T " "}
 addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
 addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
 addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
 addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
 addUserKnob {26 space_2 l "" +STARTLINE T " "}
 addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
 addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
 addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
 addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
 addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
 addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
 addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
 addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
 addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
 addUserKnob {1 anchor l Anchor}
 anchor Anchor_30cdcd2d8c10
 addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
}
push $N33e79600
PostageStamp {
 name Stamp22
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
 knobChanged "import stamps; stamps.wiredKnobChanged()"
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0x1000001
 note_font "Bitstream Vera Sans"
 note_font_size 20
 selected true
 xpos 3372
 ypos 14813
 hide_input true
 addUserKnob {20 wired_tab l "Wired Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
 addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
 addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title precomp
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T precomp}
 addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
 addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T <i>precomp</i>}
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
 addUserKnob {26 anchor_label l Anchor: T " "}
 addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
 addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
 addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
 addUserKnob {26 space_1 l "" +STARTLINE T " "}
 addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
 addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
 addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
 addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
 addUserKnob {26 space_2 l "" +STARTLINE T " "}
 addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
 addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
 addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
 addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
 addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
 addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
 addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
 addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
 addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
 addUserKnob {1 anchor l Anchor}
 anchor Anchor_30cdcd2d8c8
 addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
}
push $N33e79600
PostageStamp {
 name Stamp23
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
 knobChanged "import stamps; stamps.wiredKnobChanged()"
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0x1000001
 note_font "Bitstream Vera Sans"
 note_font_size 20
 selected true
 xpos -1355
 ypos 11487
 hide_input true
 addUserKnob {20 wired_tab l "Wired Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
 addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
 addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title precomp
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T precomp}
 addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
 addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." +HIDDEN T " "}
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
 addUserKnob {26 anchor_label l Anchor: T " "}
 addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
 addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
 addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
 addUserKnob {26 space_1 l "" +STARTLINE T " "}
 addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
 addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
 addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
 addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
 addUserKnob {26 space_2 l "" +STARTLINE T " "}
 addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
 addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
 addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
 addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
 addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
 addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
 addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
 addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
 addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
 addUserKnob {1 anchor l Anchor}
 anchor Anchor_30cdcd2d8c8
 addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
}
add_layer {reboxed reboxed.red reboxed.green reboxed.blue reboxed.alpha}
Shuffle2 {
 fromInput1 {{0} B}
 in1 reboxed
 fromInput2 {{0} B}
 mappings "4 reboxed.alpha 0 3 rgba.red 0 0 reboxed.alpha 0 3 rgba.green 0 1 reboxed.alpha 0 3 rgba.blue 0 2 reboxed.alpha 0 3 rgba.alpha 0 3"
 name Shuffle32
 label "\[value in1]"
 selected true
 xpos -1355
 ypos 11521
}
Dot {
 name Dot62
 selected true
 xpos -1321
 ypos 11608
}
Constant {
 inputs 0
 name Constant6
 selected true
 xpos -930
 ypos 6425
}
Reformat {
 name Reformat4
 selected true
 xpos -930
 ypos 6533
}
Merge2 {
 inputs 2
 operation mask
 name Merge8
 selected true
 xpos -930
 ypos 11604
}
Dot {
 name Dot63
 selected true
 xpos -896
 ypos 13417
}
set N33d55d00 [stack 0]
push $N33e79600
Merge2 {
 inputs 2
 bbox B
 name Merge9
 selected true
 xpos 3625
 ypos 13413
}
Copy {
 inputs 2
 from0 rgba.alpha
 to0 rgba.alpha
 name Copy3
 selected true
 xpos 3625
 ypos 14811
}
Dot {
 name Dot64
 selected true
 xpos 3659
 ypos 15092
}
set N33d54800 [stack 0]
LayerContactSheet {
 width 3840
 height 2160
 showLayerNames true
 name LayerContactSheet5
 selected true
 xpos 3743
 ypos 15088
}
push $N33de4f00
PostageStamp {
 name Stamp26
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
 knobChanged "import stamps; stamps.wiredKnobChanged()"
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0x1000001
 note_font "Bitstream Vera Sans"
 note_font_size 20
 selected true
 xpos 5893
 ypos 5850
 hide_input true
 addUserKnob {20 wired_tab l "Wired Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
 addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
 addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title plate
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T plate}
 addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
 addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T <i>plate</i>}
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
 addUserKnob {26 anchor_label l Anchor: T " "}
 addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
 addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
 addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
 addUserKnob {26 space_1 l "" +STARTLINE T " "}
 addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
 addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
 addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
 addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
 addUserKnob {26 space_2 l "" +STARTLINE T " "}
 addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
 addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
 addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
 addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
 addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
 addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
 addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
 addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
 addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
 addUserKnob {1 anchor l Anchor}
 anchor Anchor_30cdcd2d8c9
 addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
}
StickyNote {
 inputs 0
 name StickyNote21
 label "PUT BACK\nORIGINAL\nPRECOMP\nALPHA"
 note_font_size 60
 selected true
 xpos 3782
 ypos 14658
}
StickyNote {
 inputs 0
 name StickyNote22
 label "NR CLEANUP\nWORK"
 note_font_size 60
 selected true
 xpos 3750
 ypos 13354
}
push $N33e79d00
LayerContactSheet {
 width 3840
 height 2160
 showLayerNames true
 name LayerContactSheet6
 selected true
 xpos 3967
 ypos 5708
}
StickyNote {
 inputs 0
 name StickyNote23
 label "MASK WITH\nPRECOMP\nREBOXING ALPHA"
 note_font_size 60
 selected true
 xpos -755
 ypos 11489
}
StickyNote {
 inputs 0
 name StickyNote24
 label "Work HERE---->"
 note_font "Bitstream Vera Sans Bold"
 note_font_size 51
 selected true
 xpos -1618
 ypos 6464
}
push $N33e79600
PostageStamp {
 name Stamp27
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
 knobChanged "import stamps; stamps.wiredKnobChanged()"
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0x1000001
 note_font "Bitstream Vera Sans"
 note_font_size 20
 selected true
 xpos 6661
 ypos 4902
 hide_input true
 addUserKnob {20 wired_tab l "Wired Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
 addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
 addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title precomp
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T precomp}
 addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
 addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T <i>precomp</i>}
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
 addUserKnob {26 anchor_label l Anchor: T " "}
 addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
 addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
 addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
 addUserKnob {26 space_1 l "" +STARTLINE T " "}
 addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
 addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
 addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
 addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
 addUserKnob {26 space_2 l "" +STARTLINE T " "}
 addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
 addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
 addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
 addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
 addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
 addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
 addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
 addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
 addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
 addUserKnob {1 anchor l Anchor}
 anchor Anchor_30cdcd2d8c8
 addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
}
Premult {
 name Premult5
 selected true
 xpos 6661
 ypos 4936
}
Dot {
 name Dot65
 selected true
 xpos 6695
 ypos 5095
}
push $N33e7b200
PostageStamp {
 name Stamp28
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
 knobChanged "import stamps; stamps.wiredKnobChanged()"
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0x1000001
 note_font "Bitstream Vera Sans"
 note_font_size 20
 selected true
 xpos 6849
 ypos 4931
 hide_input true
 addUserKnob {20 wired_tab l "Wired Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
 addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
 addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title denoise
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T denoise}
 addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
 addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i>DNS plate</i>"}
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
 addUserKnob {26 anchor_label l Anchor: T " "}
 addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
 addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
 addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
 addUserKnob {26 space_1 l "" +STARTLINE T " "}
 addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
 addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
 addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
 addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
 addUserKnob {26 space_2 l "" +STARTLINE T " "}
 addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
 addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
 addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
 addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
 addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
 addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
 addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
 addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
 addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
 addUserKnob {1 anchor l Anchor}
 anchor Anchor_30cdcd2d8c1
 addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
}
Merge2 {
 inputs 2
 name Merge10
 selected true
 xpos 6849
 ypos 5091
}
Dot {
 name Dot66
 selected true
 xpos 6883
 ypos 5223
}
NoOp {
 name Anchor_30cdcd2d8c11
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.anchorOnCreate()\n    except:\n        pass"
 knobChanged stamps.anchorKnobChanged()
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0xffffff01
 note_font_size 20
 selected true
 xpos 6849
 ypos 5671
 addUserKnob {20 anchor_tab l "Anchor Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T anchor}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title midComp_MergedPlate
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T DENOISE}
 addUserKnob {26 prev_name l "" +STARTLINE +HIDDEN T Anchor_30cdcd2d8c11}
 addUserKnob {3 showing l "" +STARTLINE +HIDDEN}
 addUserKnob {1 tags l Tags t "Comma-separated tags you can define for each Anchor, that will help you find it when invoking the Stamp Selector by pressing the Stamps shortkey with nothing selected."}
 tags midComp
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 createStamp l new t "Create a new Stamp for this Anchor." -STARTLINE T stamps.stampCreateWired(nuke.thisNode())}
 addUserKnob {22 selectStamps l select t "Reconnect all of this Anchor's Stamps." -STARTLINE T stamps.wiredSelectSimilar(nuke.thisNode().name())}
 addUserKnob {22 reconnectStamps l reconnect -STARTLINE T stamps.anchorReconnectWired()}
 addUserKnob {22 zoomNext l "zoom next" t "Navigate to this Anchor's next Stamp on the Node Graph." -STARTLINE T stamps.wiredZoomNext(nuke.thisNode().name())}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
}
Dot {
 inputs 0
 name Dot67
 selected true
 xpos 5246
 ypos 17700
}
set N33d09d00 [stack 0]
NoOp {
 name Anchor_37e62f9b7b1
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.anchorOnCreate()\n    except:\n        pass"
 knobChanged stamps.anchorKnobChanged()
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0xffffff01
 note_font_size 20
 selected true
 xpos 5356
 ypos 17692
 addUserKnob {20 anchor_tab l "Anchor Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T anchor}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title prep_comp
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T prep_comp}
 addUserKnob {26 prev_name l "" +STARTLINE +HIDDEN T Anchor_37e62f9b7b1}
 addUserKnob {3 showing l "" +STARTLINE +HIDDEN}
 addUserKnob {1 tags l Tags t "Comma-separated tags you can define for each Anchor, that will help you find it when invoking the Stamp Selector by pressing the Stamps shortkey with nothing selected."}
 tags "2D, File Out,"
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 createStamp l new t "Create a new Stamp for this Anchor." -STARTLINE T stamps.stampCreateWired(nuke.thisNode())}
 addUserKnob {22 selectStamps l select t "Reconnect all of this Anchor's Stamps." -STARTLINE T stamps.wiredSelectSimilar(nuke.thisNode().name())}
 addUserKnob {22 reconnectStamps l reconnect -STARTLINE T stamps.anchorReconnectWired()}
 addUserKnob {22 zoomNext l "zoom next" t "Navigate to this Anchor's next Stamp on the Node Graph." -STARTLINE T stamps.wiredZoomNext(nuke.thisNode().name())}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
}
PostageStamp {
 name Stamp29
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
 knobChanged "import stamps; stamps.wiredKnobChanged()"
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0x1000001
 note_font "Bitstream Vera Sans"
 note_font_size 20
 selected true
 xpos 5356
 ypos 17748
 hide_input true
 addUserKnob {20 wired_tab l "Wired Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
 addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
 addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title prep_comp
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T prep_comp}
 addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T "<i>2D, File Out</i>"}
 addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i>review (EXRs)</i>"}
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
 addUserKnob {26 anchor_label l Anchor: T " "}
 addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
 addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
 addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
 addUserKnob {26 space_1 l "" +STARTLINE T " "}
 addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
 addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
 addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
 addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
 addUserKnob {26 space_2 l "" +STARTLINE T " "}
 addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
 addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
 addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
 addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
 addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
 addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
 addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
 addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
 addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
 addUserKnob {1 anchor l Anchor}
 anchor Anchor_37e62f9b7b1
 addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
}
push $N33de7200
NoOp {
 name Anchor_30cdcd2d8c12
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.anchorOnCreate()\n    except:\n        pass"
 knobChanged stamps.anchorKnobChanged()
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0xffffff01
 note_font_size 20
 selected true
 xpos 1121
 ypos 4275
 addUserKnob {20 anchor_tab l "Anchor Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T anchor}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title ROTO_MATTES
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T DENOISE}
 addUserKnob {26 prev_name l "" +STARTLINE +HIDDEN T Anchor_30cdcd2d8c12}
 addUserKnob {3 showing l "" +STARTLINE +HIDDEN}
 addUserKnob {1 tags l Tags t "Comma-separated tags you can define for each Anchor, that will help you find it when invoking the Stamp Selector by pressing the Stamps shortkey with nothing selected."}
 tags roto
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 createStamp l new t "Create a new Stamp for this Anchor." -STARTLINE T stamps.stampCreateWired(nuke.thisNode())}
 addUserKnob {22 selectStamps l select t "Reconnect all of this Anchor's Stamps." -STARTLINE T stamps.wiredSelectSimilar(nuke.thisNode().name())}
 addUserKnob {22 reconnectStamps l reconnect -STARTLINE T stamps.anchorReconnectWired()}
 addUserKnob {22 zoomNext l "zoom next" t "Navigate to this Anchor's next Stamp on the Node Graph." -STARTLINE T stamps.wiredZoomNext(nuke.thisNode().name())}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
}
PostageStamp {
 name Stamp30
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
 knobChanged "import stamps; stamps.wiredKnobChanged()"
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0x1000001
 note_font "Bitstream Vera Sans"
 note_font_size 20
 selected true
 xpos 1121
 ypos 4382
 hide_input true
 addUserKnob {20 wired_tab l "Wired Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
 addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
 addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title ROTO_MATTES
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T ROTO_MATTES}
 addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>roto</i>}
 addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i>ROTO MATTES</i>"}
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
 addUserKnob {26 anchor_label l Anchor: T " "}
 addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
 addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
 addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
 addUserKnob {26 space_1 l "" +STARTLINE T " "}
 addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
 addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
 addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
 addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
 addUserKnob {26 space_2 l "" +STARTLINE T " "}
 addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
 addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
 addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
 addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
 addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
 addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
 addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
 addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
 addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
 addUserKnob {1 anchor l Anchor}
 anchor Anchor_30cdcd2d8c12
 addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
}
push $N33e79600
PostageStamp {
 name Stamp31
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
 knobChanged "import stamps; stamps.wiredKnobChanged()"
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0x1000001
 note_font "Bitstream Vera Sans"
 note_font_size 20
 selected true
 xpos -1105
 ypos 15293
 hide_input true
 addUserKnob {20 wired_tab l "Wired Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
 addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
 addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title precomp
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T precomp}
 addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
 addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T <i>precomp</i>}
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
 addUserKnob {26 anchor_label l Anchor: T " "}
 addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
 addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
 addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
 addUserKnob {26 space_1 l "" +STARTLINE T " "}
 addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
 addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
 addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
 addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
 addUserKnob {26 space_2 l "" +STARTLINE T " "}
 addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
 addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
 addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
 addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
 addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
 addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
 addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
 addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
 addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
 addUserKnob {1 anchor l Anchor}
 anchor Anchor_30cdcd2d8c8
 addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
}
push $N33d55d00
Dot {
 name Dot68
 selected true
 xpos -896
 ypos 15213
}
CopyBBox {
 inputs 2
 name CopyBBox2
 selected true
 xpos -930
 ypos 15297
}
TimeOffset {
 time_offset -1001
 time ""
 name TimeOffset11
 selected true
 xpos -930
 ypos 15521
}
Dot {
 name Dot69
 selected true
 xpos -896
 ypos 15768
}
Write {
 channels rgba
 file "\[value script_directory]/\[value scriptname]_renders/\[value scriptversion]/exr/\[value scriptname_with_version].%06d.exr"
 file_type exr
 metadata "all metadata"
 interleave "channels and layers"
 first_part rgba
 version 4
 in_colorspace scene_linear
 out_colorspace scene_linear
 beforeRender "exec(\"\"\"\\nfrom datetime import datetime\\nfrom pathlib import Path\\nimport re\\n\\nscript_path = Path(nuke.scriptName())\\nscript_dir = script_path.parent\\nscript_name = script_path.stem\\nscript_name_without_version = re.sub(f'_v\\\\d+', '', script_name)\\nversion = nukescripts.version_get(script_path.as_posix(),'v')\\n\\nrender_dir = script_dir / f\"\{script_name_without_version\}_renders\" / f\"\{''.join(version)\}\"\\n\\ntry:\\n    render_dir.mkdir(parents=True, exist_ok=False)\\nexcept FileExistsError:\\n    if nuke.ask(f\"\{render_dir\} already exists. Overwrite?\"):\\n        pass\\n    else:\\n        raise FileExistsError(f\"Stopping to avoid overwriting render: \{render_dir\}. Try saving the script with a higher version number first.\")\\nscript_snapshot_path = render_dir / 'script'\\nscript_snapshot_path.mkdir(exist_ok=True)\\ncurrent_time = datetime.utcnow().strftime(\"%Y-%m-%d__%H-%M-%S\") + \"UTC\"\\nscript_snapshot_path = script_snapshot_path / f\"\{script_name\}_snapshot_\{current_time\}.nk\"\\nnuke.scriptSaveToTemp(script_snapshot_path.as_posix())\\n\"\"\")"
 name Write3
 label "\[value file]"
 selected true
 xpos -930
 ypos 15906
 addUserKnob {20 FlwlsPipeline}
 addUserKnob {1 script_directory}
 script_directory "\[python nuke.script_directory()]"
 addUserKnob {1 scriptname_with_version}
 scriptname_with_version "\[basename \[file rootname \[value root.name]]]"
 addUserKnob {1 scriptname}
 scriptname "\[regsub -all \{_v\\d+\} \[value scriptname_with_version] \"\"]"
 addUserKnob {1 scriptversion}
 scriptversion "\[regexp -inline \{v\\d+\} \[value root.name]]"
 addUserKnob {1 render_typ l render_type}
 render_typ task_exr
}
StickyNote {
 inputs 0
 name StickyNote25
 label "fr: 0-(end-1001)"
 note_font_size 60
 selected true
 xpos -1104
 ypos 16152
}
push $N33e7b200
PostageStamp {
 name Stamp32
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
 knobChanged "import stamps; stamps.wiredKnobChanged()"
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0x1000001
 note_font "Bitstream Vera Sans"
 note_font_size 20
 selected true
 xpos 4941
 ypos 15723
 hide_input true
 addUserKnob {20 wired_tab l "Wired Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
 addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
 addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title denoise
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T denoise}
 addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
 addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T <i>Denoise</i>}
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
 addUserKnob {26 anchor_label l Anchor: T " "}
 addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
 addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
 addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
 addUserKnob {26 space_1 l "" +STARTLINE T " "}
 addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
 addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
 addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
 addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
 addUserKnob {26 space_2 l "" +STARTLINE T " "}
 addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
 advanced_reconnection 1
 addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
 addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
 addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
 addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
 addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
 addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
 addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
 addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
 addUserKnob {1 anchor l Anchor}
 anchor Anchor_30cdcd2d8c1
 addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
}
Colorspace {
 colorspace_out AlexaV3LogC
 name Colorspace7
 selected true
 xpos 4941
 ypos 15757
}
Dot {
 name Dot70
 selected true
 xpos 4975
 ypos 15877
}
push $N33de4f00
PostageStamp {
 name Stamp33
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
 knobChanged "import stamps; stamps.wiredKnobChanged()"
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0x1000001
 note_font "Bitstream Vera Sans"
 note_font_size 20
 selected true
 xpos 5407
 ypos 15739
 hide_input true
 addUserKnob {20 wired_tab l "Wired Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
 addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
 addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title plate
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T plate}
 addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
 addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T <i>plate</i>}
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
 addUserKnob {26 anchor_label l Anchor: T " "}
 addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
 addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
 addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
 addUserKnob {26 space_1 l "" +STARTLINE T " "}
 addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
 addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
 addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
 addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
 addUserKnob {26 space_2 l "" +STARTLINE T " "}
 addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
 advanced_reconnection 1
 addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
 addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
 addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
 addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
 addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
 addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
 addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
 addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
 addUserKnob {1 anchor l Anchor}
 anchor Anchor_30cdcd2d8c9
 addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
}
Colorspace {
 colorspace_out AlexaV3LogC
 name Colorspace8
 selected true
 xpos 5407
 ypos 15778
}
Dot {
 name Dot71
 selected true
 xpos 5441
 ypos 15877
}
push $N33d54800
Premult {
 name Premult6
 selected true
 xpos 3625
 ypos 15199
}
Dot {
 name Dot72
 selected true
 xpos 3659
 ypos 15313
}
push $N33e7b200
Shuffle2 {
 fromInput1 {{0} B}
 fromInput2 {{0} B}
 mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
 name Shuffle33
 selected true
 xpos 5174
 ypos 14922
}
Merge2 {
 inputs 2
 name Merge11
 selected true
 xpos 5174
 ypos 15309
}
Colorspace {
 colorspace_out AlexaV3LogC
 name Colorspace9
 selected true
 xpos 5174
 ypos 15743
}
Group {
 inputs 3
 name DasGrain1
 help "DasGrain makes regraining as simple as clicking a few buttons.\n\nFollow the steps in the Help tab and you'll have a perfect regrain in no time!"
 onCreate "import random\n\ntestimonials = \[\n    \"Such an elegant solution, love it!\",\n    \"Your gizmo is beyond expectation\",\n    \"Totally awesome!\",\n    \"DasGrain is officially the best thing ever\",\n    \"It's really working!\",\n    \"Das bringt Tr&auml;nen in meine Augen\",\n    \"DasGrain is the salvation we waited for\",\n    \"I save a lot of time, and definitely my nerves :)\",\n    \"It's alright\",\n    \"My new favourite node, thanks!<br>Having said that, ...\"\n    ]\n\nnode = nuke.thisNode()\nnode\['testimonial'].setValue('<br><br><br><i>&laquo;%s&raquo;</i><br>&mdash; anonymous<br><br>' % random.choice(testimonials))\nnode\['box'].setFlag(nuke.NO_ANIMATION)"
 knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == 'box':\n    this_frame = nuke.frame()\n    n\['sample_frame'].setValue(this_frame)\n\nif k.name() == 'scatter':\n    n\['divider04'].setVisible(k.value() == False)\n    n\['divider05'].setVisible(k.value() == True)"
 tile_color 0x7f7f7fff
 selected true
 xpos 5174
 ypos 15867
 addUserKnob {20 DasGrain_tab l DasGrain}
 addUserKnob {41 output t "<strong>regrained comp</strong> it is what it sais\n<strong>plate grain</strong> plate minus degrained plate\n<strong>normalised grain</strong> check if the normalization worked. It should be as even as possible. This is what you want to output if you want to prerender a grain plate. Later you can plug it into the <i>external grain</i> input of another DasGrain\n<strong>adapted grain</strong> check if the adaptation worked. Output this if you want to further manipulate the grain (who knows what the sup is gonna come up with...). After, simply plus it to your comp (at that point the comp has to be in the <i>camera</i> colorspace, as set in the <i>Analyze</i> tab).\n<strong>grain QC</strong> check if voronoi seams are visible (&#8594; edgeblend), or the scattered grain looks different to the original plate grain (&#8594; maybe bad sample area or wrong luminance degrain amount)" T Output.output}
 addUserKnob {4 meta l "metadata from" t "Chances are you want to use the metadata from the plate, but who am I to assume :)" M {COMP PLATE}}
 addUserKnob {26 spacer01_1 l " " T " "}
 addUserKnob {20 GrainGroupBegin l "" +STARTLINE n -2}
 addUserKnob {20 Analyze_tab l Analyze}
 addUserKnob {26 text l <strong>Colorspace}
 addUserKnob {41 project_colorspace l project t "set this to the project color space" T OCIOColorSpace1.in_colorspace}
 addUserKnob {22 python_button l "What's this all about?" -STARTLINE T "nuke.message(\"Regraining in other color spaces than the camera native linear space can lead to unexpected behaviour.\\n\\nFor example converting Alexa plates to ACEScg might introduce negative values due to ACEScg's smaller gamut. In that case converting back to ARRI Linear ALEXA Wide Gamut will probably help.\\nJust set <i>project</i> to ACEScg and <i>camera</i> to ARRI Linear ALEXA Wide Gamut.\\n\\nThis might be transferable to other cameras, but I've only tested with Alexas.\\n---------\\nBypass by setting both knobs to the same value.\")"}
 addUserKnob {41 camera_colorspace l camera t "set this to the camera native linear space" T OCIOColorSpace1.out_colorspace}
 addUserKnob {26 text_2 l " " T " "}
 addUserKnob {26 level l "<strong>Degrain amount"}
 addUserKnob {78 luminance t "Leave this at 1 if you're working on a completely degrained plate.\n\nIn case you decided to leave some luminance grain in the degrained plate (use the DegrainHelper node for this!), set this to the same value as in the DegrainHelper in order to compensate.\n\nIf the luminance degrain amount was set to 0.8, this needs to be set to 0.8 as well.\n\nYou need to select a mask of all elements that cover the plate, otherwise the grain of whole comp will be too strong " n 1}
 luminance 1
 addUserKnob {26 divider01 l " "}
 addUserKnob {41 degrain_amount_mask l "degrain amount mask" t "Use this channel from the mask input to specify in what area of the comp the missing luminance grain needs to be compensated." T Multiply1.maskChannelMask}
 addUserKnob {41 invert_mask l invert -STARTLINE T Multiply1.invert_mask}
 addUserKnob {26 spacer02 l " " T " "}
 addUserKnob {26 divider02 l <strong>Analyze}
 addUserKnob {3 number_of_frames l "number of frames" t "Set the number of sample frames to be spread across the input range.\n\nMore frames lead to higher accuracy.\n\nIf there are particularly bright or dark frames, set them manually in the knob below to make sure they are part of the analysis.\n\nIf you want to set all sample frames manually, set this to 0 and add the frames in the knob below."}
 number_of_frames 10
 addUserKnob {1 additional_frames l "additional frames" t "Set additional frames like this:\n\n1001,1020,1053 (single frames)\n1020-1040 (frame ranges)\n1020-1040x4 (frame ranges with step)"}
 addUserKnob {3 sample_count l "sample count" t "The samples are spread across the sample range (which gets calculated automatically) based on the AlexaV3LogC curve. This results in more samples in the dark areas and less samples in the brights.\n\nMore samples lead to a more detailed response curve (while the accuracy is limited by the quality of the degrain)."}
 sample_count 20
 addUserKnob {22 analyze l Analyze t "this is where the magic happens" T "import base64\nthis = nuke.thisNode()\n\n\ndef _sample_count(this):\n    \"\"\"returns the sample count\"\"\"\n\n    sample_count = int(this\['sample_count'].value())\n\n    if sample_count <= 0:\n        raise RuntimeError('Enter a sample count greater than 0')\n\n    else:\n        return sample_count\n\n\ndef _generate_frame_list(this):\n    \"\"\"converts the frames submitted by the user into a list\"\"\"\n\n    frame_list = \[]\n    number_of_frames = int(this\['number_of_frames'].value())\n    additional_frames = this\['additional_frames'].value()\n\n    if number_of_frames < 1 and additional_frames is '':\n        raise RuntimeError('Either set the number of frames > 0\\nor define additional frames')\n\n    first_frame = max(this.input(1).firstFrame(), this.input(2).firstFrame())\n    last_frame = min(this.input(1).lastFrame(), this.input(2).lastFrame())\n\n    if number_of_frames > 0:\n        distance = (last_frame - first_frame) / (number_of_frames)\n        frame = first_frame + distance / 2\n\n        for x in range(number_of_frames):\n            int_frame = int(round(frame))\n            if int_frame not in frame_list:\n                frame_list.append(int_frame)\n\n            frame += distance\n\n    frange = nuke.FrameRanges(additional_frames.split(','))\n\n    for r in frange:\n        for f in r:\n            if f >= first_frame and f <= last_frame:\n                if f not in frame_list:\n                    frame_list.append(f)\n\n    frame_list.sort()\n\n    return frame_list\n\n\ndef _setup_for_multiframe(frame_list):\n    \"\"\" arranges all sample frames next to each other, starting at frame 0\n    and sets the frame number knob of the FrameBlend node\"\"\"\n\n    time_warp = nuke.toNode('TimeWarp1')\n    time_warp\['lookup'].clearAnimated()\n    time_warp\['lookup'].setAnimated()\n    anim_list = \[]\n\n    for n, frame in enumerate(frame_list):\n        anim_list.append(nuke.AnimationKey(n, frame))\n\n    anim = time_warp\['lookup'].animation(0)\n    anim.addKey(anim_list)\n\n    frame_blend = nuke.toNode('FrameBlend1')\n    frame_blend\['endframe'].setValue(len(frame_list)-1)\n\n\ndef _generate_sample_list(sample_count, sample_range, sample_radius):\n    \"\"\"generate a list of sample values spread equally between the\n    min and max values of the sample range\"\"\"\n\n    sample_list = \[]\n\n    for item in range(0, sample_count):\n        sample_list.append(float(item) / sample_count * (sample_range\[1] - sample_range\[0]) + sample_range\[0] + sample_radius)\n\n    return sample_list\n\n\ndef _get_sample_range(channel, channel_list, frame_list):\n    \"\"\" samples the minimum and maximum values of the given frame range and\n    sets the sample range to those values\"\"\"\n\n    curve_tool = nuke.toNode('CurveTool_Range')\n    min_knob = curve_tool\['minlumapixvalue']\n    max_knob = curve_tool\['maxlumapixvalue']\n\n    min_knob.setAnimated()\n    max_knob.setAnimated()\n\n    curve_tool\['channels'].setValue(channel)\n\n    nuke.execute(curve_tool, nuke.FrameRanges(frame_list))\n\n    index = channel_list.index(channel)\n    min_list = \[key.y for key in min_knob.animation(index).keys()]\n    max_list = \[key.y for key in max_knob.animation(index).keys()]\n\n    min_value = min(min_list)\n    max_value = max(max_list)\n\n    min_knob.clearAnimated()\n    max_knob.clearAnimated()\n    curve_tool\['minlumapixdata'].clearAnimated()\n    curve_tool\['maxlumapixdata'].clearAnimated()\n\n    return \[min_value, max_value]\n\n\ndef _sample_it(keyer, curve_tool, sample, sample_radius):\n    \"\"\"analyze the grain level per channel and sample value in the sample range\"\"\"\n\n    keyer\['temp_expr0'].setValue(str(sample - sample_radius))\n    keyer\['temp_expr1'].setValue(str(sample + sample_radius))\n\n    intensity_knob = curve_tool\['intensitydata']\n    intensity_knob.clearAnimated()\n    intensity_knob.setAnimated()\n\n    nuke.execute(curve_tool, nuke.frame(), nuke.frame())\n    sample_values = intensity_knob.value()\n    intensity_knob.clearAnimated()\n\n    return sample_values\n\n\ndef check_inputs(this):\n    if this.input(1) is None:\n        raise RuntimeError('no plate connected')\n\n    if this.input(2) is None:\n        raise RuntimeError('no degrained plate connected')\n\n    def format_tuple(node):\n        return node.format().width(), node.format().height(), node.format().pixelAspect()\n\n    if format_tuple(this.input(1)) != format_tuple(this.input(2)):\n        raise RuntimeError(\"Format missmatch: Make sure the formats of plate and degrained plate match.\")\n\n\ndef start(this):\n    \"\"\"let's do this!\"\"\"\n\n    check_inputs(this)\n\n    with this:\n        frame_list = _generate_frame_list(this)\n        _setup_for_multiframe(frame_list)\n        sample_count = _sample_count(this)\n\n        blank = base64.b64decode('cmVkIHtjdXJ2ZX0KZ3JlZW4ge2N1cnZlfQpibHVlIHtjdXJ2ZX0=').decode('ascii')\n\n        lut = nuke.toNode('Sampler1')\['lut']\n        lut.fromScript(blank)\n\n        channel_list = \['red', 'green', 'blue']\n\n        keyer = nuke.toNode('Expression2')\n        copy = nuke.toNode('Copy2')\n\n        curve_tool = nuke.toNode('CurveTool')\n        pixel = curve_tool\['ROI'].value()\[2] * curve_tool\['ROI'].value()\[3]\n\n        task = nuke.ProgressTask('Analysing...')\n        step = 100.0 / 3 / sample_count\n        progress = step\n\n        time_warp = nuke.toNode('TimeWarp1')\n        frame_blend = nuke.toNode('FrameBlend1')\n\n        time_warp\['disable'].setValue(False)\n        frame_blend\['disable'].setValue(False)\n\n        for channel in channel_list:\n            task.setMessage('\{\} range'.format(channel))\n\n            copy\['from0'].setValue('rgba.\{\}'.format(channel))\n\n            sample_range = _get_sample_range(channel, channel_list, frame_list)\n            sample_radius = (sample_range\[1] - sample_range\[0]) / sample_count / 2\n            sample_list = _generate_sample_list(sample_count, sample_range, sample_radius)\n\n            for sample in sample_list:\n                if task.isCancelled():\n                    return\n\n                task.setProgress(int(progress))\n\n                sample_values = _sample_it(keyer, curve_tool, sample, sample_radius)\n\n                task.setMessage('\{\} channel at \{\}'.format(channel, round(sample, 2)))\n\n                if sample_values\[3] * pixel >= 10:\n                    lut.setValueAt(sample_values\[0] / sample_values\[3], sample_values\[1] / sample_values\[3], channel_list.index(channel))\n\n                progress += step\n\n        time_warp\['lookup'].clearAnimated()\n        time_warp\['disable'].setValue(True)  # hopefully prevents slowing down the comp\n        frame_blend\['disable'].setValue(True)  # hopefully prevents slowing down the comp\n\n    del task\n\n\nstart(this)\n" +STARTLINE}
 addUserKnob {26 divider03 l " "}
 addUserKnob {41 analysis_mask l "analysis mask" t "Use this channel from the mask input to control what area of the plate will be analyzed.\n\nUsefull if the degrain is obviously bad in some areas." T ChannelMerge1.A}
 addUserKnob {6 invert_1 l invert -STARTLINE}
 addUserKnob {20 Adjust_tab l Adjust}
 addUserKnob {22 whatsthis l "What am I looking at?" T "nuke.message(\"After the analysis you'll see the sampled grain response curves here. On the x-axis is the brightness of the image and on the y-axis the grain intensity. Grain increases with brightness, so <strong>the slope of the curves should always be positive</strong> (they should always go up &#8599;).<br><br>The quality of the curves depends entirely on the quality of the degrain. If the curves look wrong (for example they go up and down), try to improve the degrain first. If they still look wrong and the resulting regrain doesn't work well enough, you can try to improve the curves here by deleting/correcting all points that don't follow an upwards trend.<br><br>You can also extend the curves (again: with an upwards trend) if the comp has values that don't exist in the plate.<br><br>Note: The curve is used for both the normalization as well as the adaptation of the grain, so it doesn't give direct control of the grain intensity.\")" +STARTLINE}
 addUserKnob {41 lut l "" +STARTLINE T Sampler1.lut}
 addUserKnob {20 Replace_tab l Replace}
 addUserKnob {6 external_grain l "use external grain" t "Use external grain from a second DasGrain, with the output set to 'normalised grain', to replace masked area.\nConnect it to the 'external grain' input of this DasGrain (it's a bit hidden on the left side of the node)." +STARTLINE}
 addUserKnob {26 divider04 l <strong>Scatter +HIDDEN}
 addUserKnob {26 divider05 l <strong>Scatter T "<span style=\"color:red\">Make sure you're sampling an area without any plate detail.</a>"}
 addUserKnob {6 scatter l activate t "Activates the scatter function. It generates a new grain based on the plate grain in the sample box using a Voronoi noise." +STARTLINE}
 scatter true
 addUserKnob {41 useGPUIfAvailable l "Use GPU if available" -STARTLINE T VoronoiScatter.useGPUIfAvailable}
 addUserKnob {15 box l "sample box" t "Define an area that is used as a source for the scatter function. The plate grain in this area should be as even as possible, without any visible detail."}
 box {3126 1954 3526 2154}
 addUserKnob {3 sample_frame l "sample frame" t "The frame at which the grain is being sampled. Is set automatically once the sample box is changed." +DISABLED}
 sample_frame 1009
 addUserKnob {4 stereo l "stereo behaviour" t "randomize offset per view: same voronoy pattern for all views, but different offset\n\nrandomize pattern per view: different voronoy pattern for every view" M {none "randomize offset per view" "randomize pattern per view" ""}}
 addUserKnob {26 spacer06 l "" +STARTLINE T " "}
 addUserKnob {6 overlay l "overlay cell pattern" t "Overlay the cell pattern of the voronoy noise. Useful to check where the seams are and if distortion or blending is necessary." +STARTLINE}
 addUserKnob {7 cell_size l "cell size" t "Cell size of the scatter. Shoudn't be too small, as lower grain frequencies might break.\nCan't be too big either, to prevent it from breaking the border of the samplebox (will error if it does)." R 5 100}
 cell_size 40
 addUserKnob {26 spacer07 l "" +STARTLINE T " "}
 addUserKnob {20 concealer l "edge concealer" n 1}
 concealer 0
 addUserKnob {26 concealer_help l " " T "If you can see the voronoi pattern in the grain QC output,\nincrease the edge blend size."}
 addUserKnob {3 edge_blend_size l "edge blend size" t "Set the output to grain QC. If you see the cell seams, increase the edge blend size to conceal them.\n\nThis is a bit hacky and slow."}
 addUserKnob {26 tip l "" -STARTLINE T "sloooow - keep this below 3 if possible"}
 addUserKnob {26 distortion_help l " " T "\nDistortion might help as well, if somehow the straight\nseams are visible (you might want to toggle the overlay\nwhile adjusting)."}
 addUserKnob {7 amplitude R 0 50}
 addUserKnob {7 frequency R 0 50}
 frequency 15
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 divider06 l "" +STARTLINE}
 addUserKnob {41 replace_mask l "replace mask" t "Use this channel from the mask input to specify where you want to use scattered grain instead of the adapted plate grain." -STARTLINE T Merge9.maskChannelMask}
 addUserKnob {41 invert_mask_1 l invert -STARTLINE T Merge9.invert_mask}
 addUserKnob {20 GrainGroupEnd l "" +STARTLINE n -3}
 addUserKnob {20 Help_tab l Help}
 addUserKnob {26 basic_setup l "" +STARTLINE T "<font size=\"5\">Basic setup</font>"}
 addUserKnob {26 ""}
 addUserKnob {26 explanation l "" +STARTLINE T "<strong>Bold</strong> steps are always necessary"}
 addUserKnob {26 steps l "" +STARTLINE T "<br><strong>1. This should be the only regrain node in your comp.<br>2. Connect <i>plate</i>, <i>degrained plate</i> and <i>comp</i>.<br>&nbsp;&nbsp;&nbsp;&nbsp;The comp should be done on the degrained plate!</strong><br>3. Set the <i>luminance degrain amount</i>.<br><strong>4. Press the <i>Analyze</i> button.</strong><br>5. Correct the response curves in the <i>Adjust</i> tab.<br>6. Move the <i>sample box</i> to an area without any plate detail and activate <i>scatter</i>.<br>7. If necessary, activate <i>edge blend</i> and/or <i>distortion</i> to conceal seams."}
 addUserKnob {26 in_depth l "" +STARTLINE T "<br>For an in depth explanation of the steps, read the tooltips and check out this video:<br><a href=\"https://vimeo.com/284820390/\"><span style=\"color:#C8C8C8;\">https://vimeo.com/284820390</a>"}
 addUserKnob {26 pushthebutton l "" +STARTLINE T "<br><br>If the result is not as expected and you don't know why, push this button:"}
 addUserKnob {22 troubleshoot l Troubleshoot t HEEEEEEELP T "import base64\n\nmessages = \[]\n\nthis = nuke.thisNode()\n\n#########################\n\nif this.input(0) is None or this.input(1) is None or this.input(2) is None:\n    messages.append(\"<font color='red'><strong>ERROR</strong></font> Plate, degrained plate and comp need to be connected to the appropriate inputs.\")\n\n#########################\n\nelse:\n\n    def format_to_tuple(g):\n        \"\"\"returns (1024, 786, 2.0)\n        \"\"\"\n        return (g.format().width(), g.format().height(), g.format().pixelAspect())\n\n    format_set = set(\[\n        format_to_tuple(this.input(0)),\n        format_to_tuple(this.input(1)),\n        format_to_tuple(this.input(2)),\n        ])\n    if len(format_set) != 1:\n        messages.append(\"<font color='orange'><strong>WARNING</strong></font> Format missmatch: Make sure formats of plate, degrained plate and comp match.\")\n\n    if (this.input(1).firstFrame() != this.input(2).firstFrame()) or (this.input(1).lastFrame() != this.input(2).lastFrame()):\n        messages.append(\"<font color='orange'><strong>WARNING</strong></font> The frame ranges of plate and degrained plate don't match. Double check that they belong together.\")\n\n#########################\n\nmessages.append(\"Double check that plate and degrained plate haven't been modified in any way (paint, despill, etc).\")\n\n#########################\n\nif this\['luminance'].getValue() == 1:\n    messages.append(\"Are you working on a completely degrained plate? If not, you might have to set the luminance degrain amount.\")\n\n#########################\n\nblank = base64.b64decode('cmVkIHtjdXJ2ZX0KZ3JlZW4ge2N1cnZlfQpibHVlIHtjdXJ2ZX0=').decode('ascii')\n\nwith this:\n    Sampler = nuke.toNode('Sampler1')     \n    if Sampler\['lut'].toScript() == blank:\n        messages.append(\"<font color='red'><strong>ERROR</strong></font> You haven't pressed the Analyze button yet!\")\n\n#########################\n\nclass BadThings(Exception): pass\n\ndef thingy():\n    with this:\n        Sampler = nuke.toNode('Sampler1')\n        list = this\['lut'].toScript().replace('\}','').split('\\n')\n        for item in list:\n            sample_value = 0\n            for value in item.split(' '):\n                try:\n                    value == float(value)\n                    if value < sample_value:\n                        raise BadThings(\"<font color='orange'><strong>WARNING</strong></font> Check and fix the response curves. Their slopes should always be positive (the curves should always go up &#8599;).\")\n                        \n                    else:\n                        sample_value = value\n                except ValueError:\n                    # Ignore non-numeric things like x-values of \"x5.46\" and channel names like \"red\{\" etc\n                    pass\ntry:\n    thingy()\nexcept BadThings as e:\n    messages.append(str(e))\n    \n#########################\n\nif this\['scatter'].value() == True:\n    if this\['box'].getValue() == \[100.0, 100.0, 500.0, 300.0]:\n        messages.append(\"<font color='orange'><strong>WARNING</strong></font> Scatter has been activated, but the sample box is still in its default position. Are you sure that's a good area to sample?\")\n\n#########################\n\nmessages.append(\"Did you copy/paste DasGrain from another script? Make sure to reanalyze and to reset the sample area if you are using scatter.\")\n\n#########################\n\nif len(messages) > 0:\n    nuke.message(\"<font size=\\\"5\\\">Things worth checking</font><br><br>\"\n                               \"%s<br><br><br>If any of this doesn't make sense to you, it might be worth checking out the video on vimeo.\" % (\n                                  \"<hr>\".join(\"%s: %s\" % (i+1, m) for i, m in enumerate(messages))))\n" +STARTLINE}
 addUserKnob {26 dont_despair l "" +STARTLINE T "<br>If it still doesn't work and you're about to flip the table, send me a <a href=\"mailto:holtzf+nuke@gmail.com?subject=Help with DasGrain v1.7.8\"><span style=\"color:#C8C8C8;\">mail</a>.<br>I'm happy to help! :)"}
 addUserKnob {20 Info_tab l Info}
 addUserKnob {26 dasname l "" +STARTLINE T "<font size='5'>DasGrain</font> v1.8<br>"}
 addUserKnob {26 text_1 l "" +STARTLINE T "DasGrain makes regraining as simple as clicking a few buttons.<br>Follow the steps in the <i>Help</i> tab and you'll have a perfect\nregrain<br>in no time!"}
 addUserKnob {26 ""}
 addUserKnob {26 info l "" +STARTLINE T "Last change: 2021-03-07\n\n"}
 addUserKnob {26 name_1 l "" +STARTLINE T "Fabian Holtz"}
 addUserKnob {26 mail l "" +STARTLINE T "<a href=\"mailto:holtzf+nuke@gmail.com?subject=Help with DasGrain v1.7.8\"><span style=\"color:#C8C8C8;\">holtzf+nuke@gmail.com</a>"}
 addUserKnob {26 testimonial l "" +STARTLINE T "<br><br><br><i>&laquo;It's really working!&raquo;</i><br>&mdash; anonymous<br><br>"}
 addUserKnob {26 ""}
 addUserKnob {26 credit l "" +STARTLINE T "<br>VoronoiScatter based on <a href=\"http://www.nukepedia.com/blink/image/voronoi/\"><span style=\"color:#C8C8C8;\">Ivan Busquets' implementation</a> of<br> libNoise's\nVoronoi generator"}
 addUserKnob {26 thanks l "" +STARTLINE T "<br>Special thanks to Ben Dickson for bearing with my questions and<br>problems and RSP comp for the valuable feedback."}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x7f7f7fff
  label "normalise grain"
  note_font_size 30
  xpos 170
  ypos 1662
  bdwidth 320
  bdheight 110
 }
 BackdropNode {
  inputs 0
  name BackdropNode11
  tile_color 0x7f7f7fff
  label "add grain"
  note_font_size 30
  xpos 830
  ypos 2766
  bdwidth 320
  bdheight 110
 }
 BackdropNode {
  inputs 0
  name BackdropNode13
  tile_color 0x7f7f7fff
  label scatter
  note_font_size 30
  xpos -50
  ypos 2022
  bdwidth 320
  bdheight 110
 }
 BackdropNode {
  inputs 0
  name BackdropNode14
  tile_color 0x7f7f7fff
  label "analyze grain"
  note_font_size 30
  xpos -159
  ypos 606
  bdwidth 319
  bdheight 877
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x7f7f7fff
  label "grain response curve"
  note_font_size 30
  xpos 610
  ypos 2574
  bdwidth 320
  bdheight 110
 }
 BackdropNode {
  inputs 0
  name BackdropNode3
  tile_color 0x7f7f7fff
  label QC
  note_font_size 30
  xpos 1050
  ypos 3222
  bdwidth 320
  bdheight 110
 }
 BackdropNode {
  inputs 0
  name BackdropNode4
  tile_color 0x7f7f7fff
  label "grain response curve"
  note_font_size 30
  xpos 610
  ypos 1422
  bdwidth 320
  bdheight 110
 }
 BackdropNode {
  inputs 0
  name BackdropNode5
  tile_color 0x7f7f7fff
  label "adapt grain"
  note_font_size 30
  xpos 170
  ypos 2574
  bdwidth 320
  bdheight 110
 }
 BackdropNode {
  inputs 0
  name BackdropNode6
  tile_color 0x7f7f7fff
  label "sample range"
  note_font_size 30
  xpos -490
  ypos 606
  bdwidth 320
  bdheight 110
 }
 BackdropNode {
  inputs 0
  name BackdropNode7
  tile_color 0x7f7f7fff
  label "luminance level"
  note_font_size 30
  xpos 280
  ypos -282
  bdwidth 760
  bdheight 685
 }
 BackdropNode {
  inputs 0
  name BackdropNode8
  tile_color 0x7f7f7fff
  label "plate grain"
  note_font_size 30
  xpos 170
  ypos 606
  bdwidth 320
  bdheight 110
 }
 BackdropNode {
  inputs 0
  name BackdropNode9
  tile_color 0x7f7f7fff
  label replace
  note_font_size 30
  xpos 60
  ypos 2191
  bdwidth 540
  bdheight 226
 }
 Input {
  inputs 0
  name DEGRAINED_PLATE
  label "\[value number]"
  note_font_size 30
  xpos 730
  ypos -896
  number 2
 }
 OCIOColorSpace {
  in_colorspace {{OCIOColorSpace1.in_colorspace}}
  out_colorspace {{OCIOColorSpace1.out_colorspace}}
  name OCIOColorSpace2
  xpos 730
  ypos -490
 }
 Dot {
  name Dot9
  xpos 764
  ypos -390
 }
set N33c44800 [stack 0]
 Dot {
  name Dot28
  xpos 764
  ypos -198
 }
set N33c44100 [stack 0]
 Dot {
  name Dot32
  xpos 764
  ypos 234
 }
set N33c27900 [stack 0]
push $N33c44100
 Dot {
  name Dot27
  xpos 624
  ypos -198
 }
 Colorspace {
  colorspace_out YCbCr
  name Colorspace1
  xpos 590
  ypos -130
 }
 Dot {
  name Dot7
  xpos 624
  ypos -54
 }
set N33c26400 [stack 0]
 Input {
  inputs 0
  name PLATE
  label "\[value number]"
  note_font_size 30
  xpos 290
  ypos -892
  number 1
 }
 Dot {
  name Dot50
  xpos 324
  ypos -726
 }
set N33c25600 [stack 0]
 OCIOColorSpace {
  in_colorspace scene_linear
  out_colorspace scene_linear
  name OCIOColorSpace1
  xpos 290
  ypos -490
 }
 Dot {
  name Dot29
  xpos 324
  ypos -198
 }
set N33c24800 [stack 0]
 Dot {
  name Dot6
  xpos 464
  ypos -198
 }
 Colorspace {
  colorspace_out YCbCr
  name Colorspace2
  xpos 430
  ypos -130
 }
 Merge2 {
  inputs 2
  operation from
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge4
  xpos 430
  ypos -58
 }
 Multiply {
  channels rgb
  value {{"1 / parent.luminance - 1"} 0 0 0}
  name Multiply6
  xpos 430
  ypos 14
 }
 Dot {
  name Dot31
  xpos 464
  ypos 90
 }
push $N33c26400
 Merge2 {
  inputs 2
  operation plus
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge5
  xpos 590
  ypos 86
 }
 Colorspace {
  colorspace_in YCbCr
  name Colorspace3
  xpos 590
  ypos 158
 }
 Merge2 {
  inputs 2
  operation from
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge6
  xpos 590
  ypos 230
 }
 Dot {
  name Dot35
  xpos 624
  ypos 306
 }
set N33c08100 [stack 0]
push $N33c27900
 Merge2 {
  inputs 2
  operation from
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge7
  xpos 730
  ypos 302
  disable {{"Multiply6.value.r == 0"}}
 }
 Dot {
  name Dot2
  xpos 764
  ypos 522
 }
set N33363200 [stack 0]
 Dot {
  name Dot30
  xpos 764
  ypos 690
 }
set N33362b00 [stack 0]
 Dot {
  name Dot55
  xpos 764
  ypos 1170
 }
set N33362400 [stack 0]
 Input {
  inputs 0
  name mask
  label "\[value number]"
  note_font_size 30
  xpos 1170
  ypos -896
  number 3
 }
 Dot {
  name Dot39
  xpos 1204
  ypos 258
 }
set N33361600 [stack 0]
 Dot {
  name Dot26
  xpos 1204
  ypos 1074
 }
set N33360f00 [stack 0]
 Invert {
  name Invert2
  xpos 180
  ypos 1064
  disable {{!parent.invert_1}}
 }
push $N33362b00
push $N33c24800
 Merge2 {
  inputs 2
  operation from
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge27
  xpos 290
  ypos 686
 }
 Dot {
  name Dot3
  xpos 324
  ypos 786
 }
set N33337900 [stack 0]
 Dot {
  name Dot5
  xpos 104
  ypos 786
 }
set N33337200 [stack 0]
push $N33337200
 Copy {
  inputs 2
  from0 {{{parent.Copy2.from0}}}
  to0 rgba.red
  name Copy3
  xpos 70
  ypos 848
 }
 Expression {
  expr0 abs(r)
  channel1 {none none none rgba.alpha}
  expr1 "r == 0"
  channel2 none
  channel3 none
  name Expression4
  xpos 70
  ypos 926
 }
set N33336400 [stack 0]
push $N33363200
 Colorspace {
  colorspace_out AlexaV3LogC
  name Colorspace5
  xpos 70
  ypos 518
 }
 Clamp {
  maximum_enable false
  name Clamp2
  xpos -40
  ypos 512
 }
 Dot {
  name Dot1
  xpos -116
  ypos 522
 }
set N33323200 [stack 0]
 Dot {
  name Dot48
  xpos -116
  ypos 786
 }
set N33322b00 [stack 0]
push $N33322b00
 Copy {
  inputs 2
  from0 rgba.blue
  to0 rgba.red
  name Copy2
  xpos -150
  ypos 848
 }
 Expression {
  temp_name0 min
  temp_expr0 0.8209134586155414
  temp_name1 max
  temp_expr1 0.8579126596450805
  channel0 {none none none rgba.alpha}
  expr0 "r >= min && r <= max"
  channel1 none
  channel2 none
  channel3 none
  name Expression2
  xpos -150
  ypos 926
 }
 Dot {
  name Dot4
  xpos -116
  ypos 1002
 }
 ChannelMerge {
  inputs 2
  operation stencil
  name ChannelMerge2
  xpos -40
  ypos 985
 }
push $N33336400
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos 70
  ypos 992
 }
 ChannelMerge {
  inputs 2
  A -rgba.green
  operation multiply
  name ChannelMerge1
  xpos 70
  ypos 1057
  disable {{!A}}
 }
 Copy {
  inputs 2
  from0 {{{parent.Copy2.from0}}}
  to0 rgba.green
  name Copy4
  xpos 70
  ypos 1160
 }
 Premult {
  channels {rgba.red rgba.green -rgba.blue none}
  name Premult1
  xpos 70
  ypos 1238
 }
 TimeWarp {
  lookup 953
  time ""
  filter nearest
  name TimeWarp1
  xpos 70
  ypos 1286
  disable true
 }
 FrameBlend {
  channels {rgba.red rgba.green -rgba.blue rgba.alpha}
  startframe 0
  endframe 9
  userange true
  name FrameBlend1
  xpos 70
  ypos 1352
  disable true
 }
 CurveTool {
  avgframes 0
  channels {rgba.red rgba.green -rgba.blue rgba.alpha}
  ROI {0 0 {width} {height}}
  intensitydata {0.0002800668743 0.0002858283278 0 2.507716049e-05}
  name CurveTool
  xpos 70
  ypos 1424
 }
push $N33323200
 Dot {
  name Dot16
  xpos -336
  ypos 522
 }
 CurveTool {
  operation "Max Luma Pixel"
  channels {-rgba.red -rgba.green rgba.blue none}
  ROI {0 0 {width} {height}}
  maxlumapixdata {2887 530}
  maxlumapixvalue {0 0 0.8579126596}
  minlumapixdata {2700 724}
  minlumapixvalue {0 0 0.1179286391}
  name CurveTool_Range
  xpos -370
  ypos 680
 }
 Sampler {
  inputs 0
  lut {red {curve x0.00546779437 0.005733409005 x0.01126644108 0.04055567939 x0.01942255348 0.04579051023 x0.03073430248 0.04810153221 x0.04737208039 0.03424457227 x0.06766279787 0.03068366273 x0.1011965871 0.03133861889 x0.1381109059 0.04575669971 x0.1843190491 0.1047179969 x0.2727416754 0.2008457198 x0.3863069117 0.3087146734 x0.5208460689 0.4613888394 x0.7565234303 0.7288774349 x1.041244984 1.020641231 x1.478303671 1.412641573 x2.063755989 1.972010819 x2.881080627 2.69632282 x3.980212927 3.931069621 x5.498364449 5.436979302 x7.386377811 7.349278124}
    green {curve x0.00630136393 0.007631871489 x0.01312964596 0.0342651606 x0.02238870971 0.04999584186 x0.03790405393 0.04983967321 x0.05535756052 0.04107307681 x0.08494885266 0.03671161074 x0.1235701144 0.0433263296 x0.1744537801 0.0690017643 x0.2435200661 0.1209203465 x0.3473688662 0.2387538555 x0.5204821825 0.4482516852 x0.7254241109 0.6603721126 x1.051238418 0.9854319144 x1.48160553 1.477728438 x2.173069477 2.072367036 x3.086922407 2.958241364 x4.421298504 4.148491204 x6.192507744 6.113034337 x8.785088539 8.681691792 x11.95823574 11.89543624}
    blue {curve x0.008391361684 0.01167708363 x0.0167687498 0.02627135237 x0.02558831871 0.0646109172 x0.0400278233 0.08111031383 x0.06232916936 0.07267974474 x0.09205162525 0.05243813651 x0.1319591701 0.06157771802 x0.192204088 0.0565251702 x0.2695978582 0.1111434433 x0.3706124425 0.1715320665 x0.5202620625 0.3155669252 x0.7600050569 0.5970338733 x1.090296388 0.9378194463 x1.491674066 1.347769919 x2.21436882 2.080155587 x3.087877274 2.907604463 x4.311114311 4.112831792 x6.211286068 6.003138409 x8.796209335 8.711108178 x11.39795399 11.1682052}}
  name Sampler1
  onCreate "n = nuke.thisNode()\nn\['sampler'].setEnabled(False)"
  knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\np = nuke.thisParent()\n\nif k.name() == 'lut':\n    with p:\n        for c in \['ColorLookup1','ColorLookup2']:\n           nuke.toNode(c)\['lut'].fromScript(k.toScript())"
  xpos 840
  ypos 1502
 }
push $N33c25600
 Dot {
  name Dot51
  xpos 115
  ypos -726
 }
 Input {
  inputs 0
  name COMP
  label "\[value number]"
  note_font_size 30
  xpos 950
  ypos -896
 }
 Dot {
  name Dot49
  xpos 984
  ypos -605
 }
set N332b3900 [stack 0]
 Switch {
  inputs 2
  which {{parent.meta}}
  name Switch1
  xpos 81
  ypos -609
 }
 Dot {
  name Dot54
  xpos 115
  ypos -486
 }
 Dot {
  name Dot52
  xpos -685
  ypos -486
 }
 Dot {
  name Dot53
  xpos -685
  ypos 3762
 }
push $N33361600
 Dot {
  name Dot40
  xpos 874
  ypos 258
 }
push $N33c08100
 Dot {
  name Dot34
  xpos 624
  ypos 378
 }
 Multiply {
  inputs 1+1
  channels rgb
  value 0
  maskChannelMask -rgba.red
  name Multiply1
  xpos 840
  ypos 374
 }
push $N332b3900
 OCIOColorSpace {
  in_colorspace {{OCIOColorSpace1.in_colorspace}}
  out_colorspace {{OCIOColorSpace1.out_colorspace}}
  name OCIOColorSpace3
  xpos 950
  ypos -490
 }
 Dot {
  name Dot44
  xpos 984
  ypos -390
 }
set N33293200 [stack 0]
 Merge2 {
  inputs 2
  operation from
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge8
  xpos 950
  ypos 374
  disable {{"Multiply6.value.r == 0"}}
 }
 Dot {
  name Dot18
  xpos 984
  ypos 2658
 }
set N33292400 [stack 0]
 ColorLookup {
  lut {master {}
    red {curve x0.00546779437 0.005733409005 x0.01126644108 0.04055567939 x0.01942255348 0.04579051023 x0.03073430248 0.04810153221 x0.04737208039 0.03424457227 x0.06766279787 0.03068366273 x0.1011965871 0.03133861889 x0.1381109059 0.04575669971 x0.1843190491 0.1047179969 x0.2727416754 0.2008457198 x0.3863069117 0.3087146734 x0.5208460689 0.4613888394 x0.7565234303 0.7288774349 x1.041244984 1.020641231 x1.478303671 1.412641573 x2.063755989 1.972010819 x2.881080627 2.69632282 x3.980212927 3.931069621 x5.498364449 5.436979302 x7.386377811 7.349278124}
    green {curve x0.00630136393 0.007631871489 x0.01312964596 0.0342651606 x0.02238870971 0.04999584186 x0.03790405393 0.04983967321 x0.05535756052 0.04107307681 x0.08494885266 0.03671161074 x0.1235701144 0.0433263296 x0.1744537801 0.0690017643 x0.2435200661 0.1209203465 x0.3473688662 0.2387538555 x0.5204821825 0.4482516852 x0.7254241109 0.6603721126 x1.051238418 0.9854319144 x1.48160553 1.477728438 x2.173069477 2.072367036 x3.086922407 2.958241364 x4.421298504 4.148491204 x6.192507744 6.113034337 x8.785088539 8.681691792 x11.95823574 11.89543624}
    blue {curve x0.008391361684 0.01167708363 x0.0167687498 0.02627135237 x0.02558831871 0.0646109172 x0.0400278233 0.08111031383 x0.06232916936 0.07267974474 x0.09205162525 0.05243813651 x0.1319591701 0.06157771802 x0.192204088 0.0565251702 x0.2695978582 0.1111434433 x0.3706124425 0.1715320665 x0.5202620625 0.3155669252 x0.7600050569 0.5970338733 x1.090296388 0.9378194463 x1.491674066 1.347769919 x2.21436882 2.080155587 x3.087877274 2.907604463 x4.311114311 4.112831792 x6.211286068 6.003138409 x8.796209335 8.711108178 x11.39795399 11.1682052}
    alpha {}}
  name ColorLookup2
  xpos 730
  ypos 2654
 }
push $N33360f00
 Dot {
  name Dot38
  xpos 1204
  ypos 1842
 }
 Dot {
  name Dot37
  xpos 544
  ypos 1842
 }
 Dot {
  name Dot22
  xpos 544
  ypos 2271
 }
set N33273900 [stack 0]
 Dot {
  name Dot20
  xpos 544
  ypos 2391
 }
push $N33273900
 Dot {
  name Dot17
  xpos 434
  ypos 2271
 }
set N33272b00 [stack 0]
 Dot {
  name Dot13
  xpos 214
  ypos 2271
 }
 Input {
  inputs 0
  name external_grain
  label "\[value number]"
  note_font_size 30
  xpos -150
  ypos 1716
  number 4
 }
 Dot {
  name Dot21
  xpos -116
  ypos 1938
 }
push $N33362400
 ColorLookup {
  channels rgb
  lut {master {}
    red {curve x0.00546779437 0.005733409005 x0.01126644108 0.04055567939 x0.01942255348 0.04579051023 x0.03073430248 0.04810153221 x0.04737208039 0.03424457227 x0.06766279787 0.03068366273 x0.1011965871 0.03133861889 x0.1381109059 0.04575669971 x0.1843190491 0.1047179969 x0.2727416754 0.2008457198 x0.3863069117 0.3087146734 x0.5208460689 0.4613888394 x0.7565234303 0.7288774349 x1.041244984 1.020641231 x1.478303671 1.412641573 x2.063755989 1.972010819 x2.881080627 2.69632282 x3.980212927 3.931069621 x5.498364449 5.436979302 x7.386377811 7.349278124}
    green {curve x0.00630136393 0.007631871489 x0.01312964596 0.0342651606 x0.02238870971 0.04999584186 x0.03790405393 0.04983967321 x0.05535756052 0.04107307681 x0.08494885266 0.03671161074 x0.1235701144 0.0433263296 x0.1744537801 0.0690017643 x0.2435200661 0.1209203465 x0.3473688662 0.2387538555 x0.5204821825 0.4482516852 x0.7254241109 0.6603721126 x1.051238418 0.9854319144 x1.48160553 1.477728438 x2.173069477 2.072367036 x3.086922407 2.958241364 x4.421298504 4.148491204 x6.192507744 6.113034337 x8.785088539 8.681691792 x11.95823574 11.89543624}
    blue {curve x0.008391361684 0.01167708363 x0.0167687498 0.02627135237 x0.02558831871 0.0646109172 x0.0400278233 0.08111031383 x0.06232916936 0.07267974474 x0.09205162525 0.05243813651 x0.1319591701 0.06157771802 x0.192204088 0.0565251702 x0.2695978582 0.1111434433 x0.3706124425 0.1715320665 x0.5202620625 0.3155669252 x0.7600050569 0.5970338733 x1.090296388 0.9378194463 x1.491674066 1.347769919 x2.21436882 2.080155587 x3.087877274 2.907604463 x4.311114311 4.112831792 x6.211286068 6.003138409 x8.796209335 8.711108178 x11.39795399 11.1682052}
    alpha {}}
  name ColorLookup1
  xpos 730
  ypos 1502
 }
 Dot {
  name Dot24
  xpos 764
  ypos 1746
 }
push $N33337900
 Dot {
  name Dot33
  xpos 324
  ypos 1386
 }
 MergeExpression {
  inputs 2
  temp_name0 target
  temp_expr0 .01
  expr0 "Br * (target / Ar)"
  expr1 "Bg * (target / Ag)"
  expr2 "Bb * (target / Ab)"
  channel3 none
  name MergeExpression1
  xpos 290
  ypos 1742
 }
 Dot {
  name Dot15
  xpos 324
  ypos 1842
 }
set N3325a400 [stack 0]
 Dot {
  name Dot25
  xpos 104
  ypos 1842
 }
 Switch {
  inputs 2
  which {{parent.external_grain}}
  name Switch2
  xpos 70
  ypos 1934
 }
 Group {
  name VoronoiScatter
  xpos 70
  ypos 2102
  disable {{!parent.scatter}}
  addUserKnob {20 User}
  addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T VoroNoise.useGPUIfAvailable}
  addUserKnob {41 vectorize l "Vectorize on CPU" -STARTLINE T VoroNoise.vectorize}
  addUserKnob {15 box}
  box {{parent.box x1004 0 x1036 -75} {parent.box x1004 100 x1036 120} {parent.box x1004 496 x1036 325} {parent.box x1004 916 x1036 320}}
  addUserKnob {3 sample_frame l "sample frame"}
  sample_frame {{parent.sample_frame}}
  addUserKnob {7 cell_size l "cell size" R 0 100}
  cell_size {{parent.cell_size}}
  addUserKnob {6 overlay_pattern l "overlay pattern" -STARTLINE}
  overlay_pattern {{parent.overlay}}
  addUserKnob {3 edge_blend_size l "edge blend size"}
  edge_blend_size {{parent.edge_blend_size}}
  addUserKnob {7 amplitude R 0 100}
  amplitude {{parent.amplitude}}
  addUserKnob {7 frequency R 0 100}
  frequency {{parent.frequency}}
  addUserKnob {41 VoroNoise_Seed l Seed T VoroNoise.VoroNoise_Seed}
 }
  Input {
   inputs 0
   name Input1
   xpos 180
   ypos -879
  }
  Dot {
   name Dot14
   xpos 214
   ypos -750
  }
set N33258100 [stack 0]
  Dot {
   name Dot16
   xpos 434
   ypos -750
  }
  Remove {
   name Remove1
   xpos 400
   ypos -687
  }
  Dot {
   name Dot6
   xpos 434
   ypos -606
  }
set N33232b00 [stack 0]
  Dot {
   name Dot15
   xpos 654
   ypos -606
  }
set N33232400 [stack 0]
  Dot {
   name Dot7
   xpos 874
   ypos -606
  }
  Noise {
   output {rgba.red -rgba.green -rgba.blue none}
   replace true
   size {{parent.frequency} {"parent.frequency * pixel_aspect"}}
   zoffset {{"x + 1000"}}
   gamma 1
   name Noise1
   xpos 840
   ypos -514
  }
  Noise {
   output {-rgba.red rgba.green -rgba.blue none}
   replace true
   size {{parent.Noise1.size} {parent.Noise1.size}}
   zoffset {{x}}
   gamma 1
   name Noise2
   xpos 840
   ypos -466
  }
  Clamp {
   name Clamp1
   xpos 840
   ypos -424
  }
  Dot {
   name Dot11
   xpos 874
   ypos -366
  }
push $N33232400
  BlinkScript {
   ProgramGroup 1
   KernelDescription "2 \"VoroNoise\" iterate pixelWise c117be128a07c11b6d82fd34148d66b3bcac41976ec9c2082affe38e890c2c0f 2 \"src\" Read Point \"dst\" Write Point 6 \"Frequency\" Float 1 AABIQg== \"Seed\" Int 1 AAAAAA== \"aspect ratio\" Float 1 AACAPw== \"width\" Int 1 AAAAAA== \"height\" Int 1 AAAAAA== \"Randomness\" Float 1 AAAAPw== 6 \"frequency\" 1 1 \"seed\" 1 1 \"aspect_ratio\" 1 1 \"width\" 1 1 \"height\" 1 1 \"randomness\" 1 1 0"
   kernelSource "// Voronoi.blink\n// A test implementation of libNoise's Voronoi generator using Blink\n// Ivan Busquets - August 2013\n// Modified for DasGrain by Fabian Holtz - April 2019\n\n#define X_NOISE_GEN  1619\n#define Y_NOISE_GEN  31337\n#define Z_NOISE_GEN  6971\n#define SEED_NOISE_GEN  1013\n#define SQRT_3 1.73205081\n\ninline int IntValueNoise3D (int x, int y, int z, int seed)\n\{\n  // All constants are primes and must remain prime in order for this noise\n  // function to work correctly.\n  int n = (\n      X_NOISE_GEN    * x\n    + Y_NOISE_GEN    * y\n    + Z_NOISE_GEN    * z\n    + SEED_NOISE_GEN * seed)\n    & 0x7fffffff;\n  n = (n >> 13) ^ n;\n  return (n * (n * n * 60493 + 19990303) + 1376312589) & 0x7fffffff;\n\}\n\ninline float ValueNoise3D (int x, int y, int z, int seed)\n\{\n  return 1.0 - ((float)IntValueNoise3D (x, y, z, seed) / 1073741824.0);\n\}\n\nkernel VoroNoise : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead> src;\n  Image<eWrite, eAccessPoint> dst;\n\nparam:\n  float frequency;\n  int seed;\n  float aspect_ratio;\n  int width;\n  int height;\n  float randomness;\n\n\n  void define() \{\n    defineParam(frequency, \"Frequency\", 50.0f);\n    defineParam(aspect_ratio, \"aspect ratio\", 1.0f);\n    defineParam(seed, \"Seed\", 0);\n    defineParam(randomness, \"Randomness\", 0.5f);\n  \}\n\n\n\n\n  void process(int2 pos) \{\n   float x = pos.x * aspect_ratio * frequency / width;\n   float y = pos.y * frequency / width;\n   int xInt = (x > 0.0) ? x : x - 1;\n   int yInt = (y > 0.0) ? y : y - 1;\n\n\n    float minDist = 2147483647.0;\n    float xCandidate = 0;\n    float yCandidate = 0;\n\n    float dist;\n\nfor (int yCur = yInt - 2; yCur <= yInt + 2; yCur++) \{\n      for (int xCur = xInt - 2; xCur <= xInt + 2; xCur++) \{\n\n        // Calculate the position and distance to the seed point inside of\n        // this unit cube. Limited by the randomness value\n        float xPos = xCur + (ValueNoise3D (xCur, yCur, 0, seed    ) + 1 ) * randomness + (1-randomness) - 1;\n        float yPos = yCur + (ValueNoise3D (xCur, yCur, 0, seed + 1) + 1 ) * randomness + (1-randomness) - 1;\n\n        float xDist = xPos - x;\n        float yDist = yPos - y;\n\n        dist = pow(xDist, 2) + pow(yDist, 2);\n        if (dist < minDist) \{\n          // This seed point is closer to any others found so far, so record\n          // this seed point.\n          minDist = dist;\n          xCandidate = xPos;\n          yCandidate = yPos;\n\t\}\n    \}\n\}\n\n    SampleType(dst) sample(0.0f);\n\n    sample.x = xCandidate / aspect_ratio / frequency;\n    sample.y = yCandidate / height * width / frequency;\n    sample.z = 0;\n\n    dst() = sample;\n\}\n\};"
   rebuild ""
   VoroNoise_Frequency {{"width / parent.cell_size"}}
   VoroNoise_Seed {{"(x + (parent.parent.stereo == 2 ? \[lsearch \[value root.views] \[view]] / 2 : 0)) * 5"}}
   "VoroNoise_aspect ratio" {{pixel_aspect}}
   VoroNoise_width {{width}}
   VoroNoise_height {{height}}
   rebuild_finalise ""
   name VoroNoise
   xpos 620
   ypos -520
  }
  Copy {
   inputs 2
   from0 rgba.red
   to0 forward.u
   from1 rgba.green
   to1 forward.v
   name Copy1
   xpos 620
   ypos -382
   disable {{"parent.amplitude == 0"}}
  }
  IDistort {
   uv forward
   uv_offset 0.5
   uv_scale {{parent.amplitude} {"uv_scale.w * pixel_aspect"}}
   filter impulse
   name IDistort1
   xpos 620
   ypos -280
   disable {{"parent.amplitude == 0"}}
  }
  Dot {
   name Dot5
   xpos 654
   ypos -246
  }
  NoTimeBlur {
   rounding floor
   name NoTimeBlur3
   xpos 620
   ypos -154
  }
  Transform {
   translate {{"floor((x * size) % 1 * (size)) - int(size / 2)"} {"floor(x % 1 * (size)) - int(size/2)"}}
   filter impulse
   black_outside false
   name Transform1
   xpos 620
   ypos -58
   disable {{"parent.edge_blend_size < 1"}}
   addUserKnob {20 User}
   addUserKnob {3 size}
   size {{"parent.edge_blend_size + 1"}}
  }
  Dot {
   name Dot9
   xpos 654
   ypos 42
  }
set N33200f00 [stack 0]
push $N33232b00
  Expression {
   expr0 "(x + .5) / width"
   expr1 "(y + .5) / height"
   expr2 0
   name STMapGenerator
   xpos 400
   ypos -514
  }
  NoTimeBlur {
   rounding floor
   name NoTimeBlur2
   xpos 400
   ypos -154
  }
  Merge2 {
   inputs 2
   operation from
   Achannels {rgba.red rgba.green -rgba.blue none}
   Bchannels {rgba.red rgba.green -rgba.blue none}
   output {rgba.red rgba.green -rgba.blue none}
   name Merge2
   xpos 400
   ypos 38
  }
  Dot {
   name Dot10
   xpos 434
   ypos 210
  }
push $N33200f00
  Expression {
   temp_name0 view_index
   temp_expr0 "parent.parent.stereo == 1 ? \[lsearch \[value root.views] \[view]] / 2 : 0"
   expr0 "random((r + view_index) * 1000000, 0) * (maxx - minx) + minx"
   expr1 "random((g + view_index) * 1000000, 0) * (maxy - miny) + miny"
   channel2 none
   channel3 none
   name Expression3
   xpos 620
   ypos 110
   addUserKnob {20 User}
   addUserKnob {7 frequency R 0 100}
   frequency {{parent.parent.cell_size}}
   addUserKnob {7 multiplier R 0 3}
   multiplier 0.5
   addUserKnob {15 shrink}
   shrink {{"frequency * multiplier + ceil(parent.edge_blend_size / 2) + IDistort1.uv_scale.w / 2"} {"frequency * multiplier + ceil(parent.edge_blend_size / 2) + IDistort1.uv_scale.h / 2"} {"frequency * multiplier + floor(parent.edge_blend_size / 2) + IDistort1.uv_scale.w / 2"} {"frequency * multiplier + floor(parent.edge_blend_size / 2) + IDistort1.uv_scale.h / 2"}}
   addUserKnob {26 ""}
   addUserKnob {7 minx}
   minx {{"(parent.box.x + shrink.x + .5) / width"}}
   addUserKnob {7 maxx}
   maxx {{"(parent.box.r - shrink.r - .5) / width"}}
   addUserKnob {7 miny}
   miny {{"(parent.box.y + shrink.y + .5) / height"}}
   addUserKnob {7 maxy}
   maxy {{"(parent.box.t - shrink.t - .5) / height"}}
  }
  Merge2 {
   inputs 2
   operation plus
   Achannels {rgba.red rgba.green -rgba.blue none}
   Bchannels {rgba.red rgba.green -rgba.blue none}
   output {rgba.red rgba.green -rgba.blue none}
   name Merge3
   xpos 620
   ypos 206
  }
  Expression {
   expr0 "(r + (maxx - minx) - minx) % (maxx - minx) + minx"
   expr1 "(g + (maxy - miny) - miny) % (maxy - miny) + miny"
   channel2 none
   channel3 none
   name Expression7
   xpos 620
   ypos 278
   addUserKnob {20 User}
   addUserKnob {7 minx}
   minx {{"(parent.box.x + rint(x % 1 * parent.edge_blend_size) + .5) / width"}}
   addUserKnob {7 maxx}
   maxx {{"(parent.box.r + rint(x % 1 * parent.edge_blend_size) - .5) / width"}}
   addUserKnob {7 miny}
   miny {{"(parent.box.y + rint(x % 1 * parent.edge_blend_size) + .5) / height"}}
   addUserKnob {7 maxy}
   maxy {{"(parent.box.t + rint(x % 1 * parent.edge_blend_size) - .5) / height"}}
  }
  Dot {
   name Dot3
   xpos 654
   ypos 354
  }
set N331c5600 [stack 0]
  Dot {
   name Dot13
   xpos 654
   ypos 546
  }
push $N331c5600
  Dot {
   name Dot8
   xpos 874
   ypos 354
  }
  Blur {
   channels rgb
   size {{pixel_aspect} 1}
   name Blur1
   label "\[value size]"
   xpos 840
   ypos 440
  }
  Difference {
   inputs 2
   name Difference2
   xpos 840
   ypos 536
  }
  Expression {
   channel0 {none none none rgba.alpha}
   expr0 "a > 1e-9"
   channel1 none
   channel2 none
   channel3 none
   name Expression2
   xpos 840
   ypos 614
  }
  Shuffle {
   red alpha
   green alpha
   blue alpha
   name Shuffle1
   label "\[value in]:\[value out]"
   xpos 840
   ypos 680
  }
  Dot {
   name Dot4
   xpos 874
   ypos 762
  }
push $N331c5600
push $N33258100
  FrameHold {
   firstFrame {{parent.sample_frame}}
   name FrameHold1
   xpos 180
   ypos -256
  }
  NoTimeBlur {
   rounding floor
   name NoTimeBlur1
   xpos 180
   ypos -154
  }
  STMap {
   inputs 2
   channels rgb
   uv rgb
   filter impulse
   name STMap1
   xpos 180
   ypos 350
  }
set N33190f00 [stack 0]
  TimeBlur {
   divisions {{"max(Transform1.size == 1 ? 2 : pow2(Transform1.size), 1)"}}
   shutter 1
   shuttercustomoffset {{"1 / divisions / 2"}}
   name TimeBlur1
   xpos 180
   ypos 446
   disable {{"parent.edge_blend_size < 1"}}
  }
set N33190800 [stack 0]
push $N33190f00
  Dot {
   name Dot1
   xpos -6
   ypos 354
  }
  Difference {
   inputs 2
   name Difference1
   xpos -40
   ypos 440
  }
  Expression {
   channel0 {none none none rgba.alpha}
   expr0 "a > 1e-10"
   channel1 none
   channel2 none
   channel3 none
   name Expression1
   xpos -40
   ypos 494
  }
  Blur {
   channels alpha
   size {{parent.parent.edge_blend_size}}
   name Blur2
   xpos -40
   ypos 536
  }
  Grade {
   channels alpha
   blackpoint 0.5
   white_clamp true
   name Grade2
   xpos -40
   ypos 584
  }
  Dot {
   name Dot2
   xpos -6
   ypos 666
  }
push $N33190800
  Grade {
   inputs 1+1
   white 1.4
   black_clamp false
   name Grade1
   xpos 180
   ypos 662
   disable {{"parent.edge_blend_size < 1"}}
  }
  Merge2 {
   inputs 2
   Achannels rgb
   Bchannels rgb
   output rgb
   name Merge1
   xpos 180
   ypos 758
   disable {{!parent.overlay_pattern}}
  }
  Assert {
   expression {{"Expression3.maxx > Expression3.minx && Expression3.maxy > Expression3.miny"}}
   message "increase sample box size or decrease cell size"
   name error
   xpos 180
   ypos 854
  }
  Output {
   name Output1
   xpos 180
   ypos 950
  }
 end_group
 Multiply {
  inputs 1+1
  channels rgb
  value 1.8
  maskChannelMask {{{parent.Merge9.maskChannelMask}}}
  invert_mask {{!Merge9.invert_mask}}
  name Multiply7
  xpos 70
  ypos 2315
  disable {{"!maskChannelMask || !\[exists parent.input3.name]"}}
 }
 Dot {
  name Dot23
  xpos 104
  ypos 2391
 }
push $N33272b00
push $N3325a400
 Multiply {
  inputs 1+1
  channels rgb
  value 1.8
  maskChannelMask {{{parent.Merge9.maskChannelMask}}}
  invert_mask {{parent.Merge9.invert_mask}}
  name Multiply2
  xpos 290
  ypos 2315
  disable {{"!maskChannelMask || (!parent.scatter && !parent.external_grain)"}}
 }
 Merge2 {
  inputs 2+1
  operation copy
  Achannels rgb
  Bchannels rgb
  output rgb
  maskChannelMask -rgba.alpha
  name Merge9
  xpos 290
  ypos 2387
  disable {{"!(parent.scatter || parent.external_grain)"}}
 }
 Dot {
  name Dot11
  xpos 324
  ypos 2490
 }
set N3311eb00 [stack 0]
 MergeExpression {
  inputs 2
  temp_name0 reverse
  temp_expr0 "1 / MergeExpression1.temp_expr0"
  expr0 "Br * Ar * reverse"
  expr1 "Bg * Ag * reverse"
  expr2 "Bb * Ab * reverse"
  name MergeExpression2
  xpos 290
  ypos 2654
 }
 Dot {
  name Dot8
  xpos 324
  ypos 2850
 }
push $N33292400
 Merge2 {
  inputs 2
  operation plus
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge3
  xpos 950
  ypos 2846
 }
 Dot {
  name Dot42
  xpos 984
  ypos 3018
 }
set N3311cf00 [stack 0]
 OCIOColorSpace {
  in_colorspace {{OCIOColorSpace1.out_colorspace}}
  out_colorspace {{OCIOColorSpace1.in_colorspace}}
  name OCIOColorSpace4
  xpos 950
  ypos 3086
 }
 Dot {
  name Dot19
  xpos 984
  ypos 3162
 }
set N3311c100 [stack 0]
 Dot {
  name Dot41
  xpos 1204
  ypos 3162
 }
set N330f3900 [stack 0]
 Dot {
  name Dot36
  xpos 1314
  ypos 3162
 }
 Blur {
  channels rgb
  size 1
  name Blur1
  xpos 1280
  ypos 3254
 }
push $N330f3900
 Merge2 {
  inputs 2
  operation difference
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge10
  xpos 1170
  ypos 3254
 }
 Multiply {
  channels rgb
  value 50
  name Multiply3
  xpos 1170
  ypos 3302
 }
 Dot {
  name Dot43
  xpos 1204
  ypos 3402
 }
push $N33293200
 Dot {
  name Dot45
  xpos 1424
  ypos -390
 }
push $N3311cf00
 Merge2 {
  inputs 2
  operation from
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge11
  xpos 1390
  ypos 3014
 }
 Dot {
  name Dot46
  xpos 1424
  ypos 3522
 }
push $N3311eb00
 Dot {
  name Dot14
  xpos 104
  ypos 2490
 }
 Dot {
  name Dot12
  xpos 104
  ypos 3402
 }
push $N33c44800
 Dot {
  name Dot47
  xpos -556
  ypos -390
 }
push $N33c24800
 Merge2 {
  inputs 2
  operation from
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge12
  xpos -590
  ypos -202
 }
 Dot {
  name Dot10
  xpos -556
  ypos 3522
 }
push $N3311c100
 Switch {
  inputs 5
  which {{output}}
  name Output
  xpos 950
  ypos 3656
  addUserKnob {20 User}
  addUserKnob {4 output M {"regrained comp" "plate grain" "normalised grain" "adapted grain" "grain QC"}}
 }
 CopyMetaData {
  inputs 2
  mergeMode "Meta only"
  name CopyMetaData1
  xpos 950
  ypos 3758
 }
 Output {
  name Output1
  xpos 950
  ypos 3854
 }
end_group
Colorspace {
 colorspace_in AlexaV3LogC
 name Colorspace10
 selected true
 xpos 5174
 ypos 15976
}
Shuffle2 {
 fromInput1 {{0} B}
 fromInput2 {{0} B}
 mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 white -1 -1 rgba.alpha 0 3"
 name Shuffle34
 selected true
 xpos 5174
 ypos 16788
}
Remove {
 operation keep
 channels rgba
 name Remove2
 selected true
 xpos 5174
 ypos 16944
}
Crop {
 box {0 0 3840 2160}
 crop false
 name Crop3
 selected true
 xpos 5174
 ypos 17025
}
Write {
 channels all
 file "\[value new_filepath]_%06d.exr"
 file_type exr
 autocrop true
 metadata "all metadata"
 interleave "channels and layers"
 first_part rgba
 create_directories true
 checkHashOnRead false
 version 3
 in_colorspace scene_linear
 out_colorspace scene_linear
 name Write_PrepRenders_1
 label "\[value file]"
 selected true
 xpos 5174
 ypos 17249
 addUserKnob {20 PrepRenders l "Prep Renders Naming"}
 addUserKnob {1 prep_name l name}
 prep_name comp
 addUserKnob {1 render_version}
 render_version v001
 addUserKnob {6 versionFrom l "Use version from script name" +STARTLINE}
 versionFrom true
 addUserKnob {26 ""}
 addUserKnob {1 new_filepath}
 new_filepath "\[join \[lrange \[split \[value script_directory] /] 0 end-1] /]/work/prep_renders/prep_\[value prep_name]/\[value override_version]/\[value scriptname]_prep_\[value prep_name]_\[value override_version]"
 addUserKnob {26 ""}
 addUserKnob {1 script_directory +INVISIBLE}
 script_directory "\[python nuke.script_directory()]"
 addUserKnob {1 scriptname_with_version +INVISIBLE}
 scriptname_with_version "\[basename \[file rootname \[value root.name]]]"
 addUserKnob {1 scriptname +INVISIBLE}
 scriptname "\[regsub -all \{_v\\d+\} \[value scriptname_with_version] \"\"]"
 addUserKnob {1 scriptversion +INVISIBLE}
 scriptversion "\[regexp -inline \{v\\d+\} \[value root.name]]"
 addUserKnob {1 override_version +INVISIBLE}
 override_version "\[if \{\[value versionFrom]==\"false\"\} \{return \[value render_version]\} else \{return \[value scriptversion]\}]"
 addUserKnob {1 render_type +INVISIBLE}
 render_type task_exr
}
push $N33d09d00
AddTimeCode {
 startcode 00:00:00:01
 fps 25
 metafps false
 name AddTimeCode2
 selected true
 xpos 5212
 ypos 18012
}
TimeOffset {
 time_offset -1000
 time ""
 name TimeOffset12
 selected true
 xpos 5212
 ypos 18082
}
Write {
 channels {rgba.red rgba.green rgba.blue -rgba.alpha}
 file "\[value script_directory]/\[value scriptname]_renders/\[value scriptversion]/review_mov/\[value scriptname_with_version].mov"
 colorspace "Output - Rec.709"
 file_type mov
 mov64_format "mov (QuickTime / MOV)"
 mov64_codec appr
 mov64_fps {{root.fps}}
 mov_h264_codec_profile "High 4:2:0 8-bit"
 mov64_pixel_format {{0}}
 mov64_quality High
 mov64_fast_start true
 mov64_write_timecode true
 mov64_gop_size 12
 mov64_b_frames 0
 mov64_bitrate 20000
 mov64_bitrate_tolerance 4000000
 mov64_quality_min 1
 mov64_quality_max 3
 create_directories true
 checkHashOnRead false
 version 4
 beforeRender "exec(\"\"\"\\nfrom pathlib import Path\\nimport re\\nimport nuke\\nimport os\\n\\ndef build_lang_context(script_name):\\n    split_name = os.path.basename(script_name).split(\"_\")\\n\\n    context = \{\}\\n\\n    context\[\"show\"] = split_name\[0]\\n    context\[\"episode\"] = split_name\[1]\\n    context\[\"part\"] = split_name\[2]\\n    context\[\"shot\"] = split_name\[3]\\n    context\[\"language\"] = split_name\[4]\\n\\n    return context\\n\\ndef get_highest_folder_name(directory):\\n    folder_names = \[name for name in os.listdir(directory) if os.path.isdir(os.path.join(directory, name))]\\n    if not folder_names:\\n        return None\\n    highest_folder = max(folder_names, key=lambda x: int(x\[1:]))\\n    return highest_folder\\n\\n\\n\\ncontext = build_lang_context((nuke.root().name()))\\n \\naudio_tree = str(Path(\"/Volumes\") / \"pipeline\" / \"shows\" / context\[\"show\"] / \"publish\" / \"episode\" / context\[\"episode\"] / \"part\" / context\[\"part\"] / \"shot\" / context\[\"shot\"] / \"language\" / context\[\"language\"] / \"AUDIO\")\\naudio_file_tree = str(Path(audio_tree) / get_highest_folder_name(audio_tree) / \"audio\")\\naudio_file = os.listdir(audio_file_tree)\\nlatest_shot_lang_audio = str(Path(audio_file_tree) / audio_file\[0])\\n\\n#print(latest_shot_lang_audio)\\nnuke.thisNode().knob(\"mov64_audiofile\").setValue(latest_shot_lang_audio)\\n\"\"\")"
 name Write2
 selected true
 xpos 5212
 ypos 18236
 addUserKnob {20 FlwlsPipeline}
 addUserKnob {1 script_directory}
 script_directory "\[python nuke.script_directory()]"
 addUserKnob {1 scriptname_with_version}
 scriptname_with_version "\[basename \[file rootname \[value root.name]]]"
 addUserKnob {1 scriptname}
 scriptname "\[regsub -all \{_v\\d+\} \[value scriptname_with_version] \"\"]"
 addUserKnob {1 scriptversion}
 scriptversion "\[regexp -inline \{v\\d+\} \[value root.name]]"
 addUserKnob {1 render_type}
 render_type review_mov
}
