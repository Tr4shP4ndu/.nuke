set cut_paste_input [stack 0]
version 14.0 v6
push $cut_paste_input
NoOp {
 name EZ_4thPin_1
 knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\nchecked = k.name()\nset_null = f\"\{checked\}int\"  \ncheckboxes = \['upL', 'downL', 'upR', 'downR']\nintFields = \['upLint', 'downLint', 'upRint', 'downRint']\n\nif k.name() == \"TrackerName\":\n    if k.value()== \"\":\n        k.setLabel(\"<font color=#DE5F80><b> ><b\\>\")\n    else:\n        k.setLabel(\"<font color=#DFCAE0><b> ><b\\>\")\n    n\['rebake'].setVisible(True)\n    \nif k.name() in checkboxes :\n    if k.value() == True:\n        for checkbox in checkboxes:\n            if checkbox != k.name():\n                n\[checkbox].setValue(False)\n                n\[f\"\{checkbox\}int\"].setValue(0)\n        n\[set_null].setValue(4)\n        n\['fourth'].setExpression(\"\")\n        n\['fourth'].clearAnimated()\n    \n     \nif \"downRint\" in k.name() and k.value() == 3:\n    if n\['downL'].value() == True and n\['upLint'].value() == 1:\n        n\['fourth'].setAnimated(True)\n        n\['fourth'].setExpression(\"(((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x) - (\[value TrackerName].tracks.2.track_x - (((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x))\", 0)\n        n\['fourth'].setExpression(\"(((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y) - (\[value TrackerName].tracks.2.track_y - (((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y))\", 1)\n        print(\"downRint=3, downL=checked, upLint=1\")\n        n\['fourth'].setLabel(\"<font color=#C9A6DF><b>4th Track ><b\\>\")\n\n    if n\['downL'].value() == True and n\['upLint'].value() == 2:\n        n\['fourth'].setAnimated(True)\n        n\['fourth'].setExpression(\"\[value TrackerName].tracks.3.track_x - ((((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x) - (\[value TrackerName].tracks.2.track_x - (((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x))) + \[value TrackerName].tracks.3.track_x \", 0)\n        n\['fourth'].setExpression(\"\[value TrackerName].tracks.3.track_y - ((((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y) - (\[value TrackerName].tracks.2.track_y - (((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y))) + \[value TrackerName].tracks.3.track_y\", 1)\n        print(\"downRint=3, downL=checked, upLint=2\") \n        n\['fourth'].setLabel(\"<font color=#C9A6DF><b>4th Track ><b\\>\")        \n        \n    if n\['upR'].value() == True and n\['upLint'].value() == 1:\n        n\['fourth'].setAnimated(True)\n        n\['fourth'].setExpression(\"(((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x) - (\[value TrackerName].tracks.2.track_x - (((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x))\", 0)\n        n\['fourth'].setExpression(\"(((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y) - (\[value TrackerName].tracks.2.track_y - (((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y))\", 1)\n        print(\"downRint=3, upR=checked, upLint=1\")    \n        n\['fourth'].setLabel(\"<font color=#C9A6DF><b>4th Track ><b\\>\")        \n        \n    if n\['upR'].value() == True and n\['upLint'].value() == 2:\n        n\['fourth'].setAnimated(True)\n        n\['fourth'].setExpression(\"\[value TrackerName].tracks.3.track_x + ((((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x) - (\[value TrackerName].tracks.2.track_x - (((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x))) - \[value TrackerName].tracks.3.track_x- (2*((\[value TrackerName].tracks.3.track_x)-\[value TrackerName].tracks.2.track_x))\", 0)\n        n\['fourth'].setExpression(\"\[value TrackerName].tracks.3.track_y + ((((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y) - (\[value TrackerName].tracks.2.track_y - (((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y))) - \[value TrackerName].tracks.3.track_y- (2*((\[value TrackerName].tracks.3.track_y)-\[value TrackerName].tracks.2.track_y))\", 1)\n        print(\"downRint=3, upR=checked, upLint=2\") \n        n\['fourth'].setLabel(\"<font color=#C9A6DF><b>4th Track ><b\\>\")             \n        \n    if n\['upL'].value() == True and n\['upRint'].value() == 2:\n        n\['fourth'].setAnimated(True)\n        n\['fourth'].setExpression(\"\[value TrackerName].tracks.3.track_x - ((((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x) - (\[value TrackerName].tracks.2.track_x - (((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x))) + \[value TrackerName].tracks.3.track_x \", 0)\n        n\['fourth'].setExpression(\"\[value TrackerName].tracks.3.track_y - ((((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y) - (\[value TrackerName].tracks.2.track_y - (((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y))) + \[value TrackerName].tracks.3.track_y\", 1)\n        print(\"downRint=3, upR=checked, upLint=2\")   \n        n\['fourth'].setLabel(\"<font color=#C9A6DF><b>4th Track ><b\\>\")        \n      \n\n#----------------------------------------------------------------------------------------------------------------------------------------  \n\n\nelif \"upLint\" in k.name() and k.value() == 3:\n    if n\['downL'].value() == True and n\['downRint'].value() == 1:\n        n\['fourth'].setAnimated(True)\n        n\['fourth'].setExpression(\"(((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x) - (\[value TrackerName].tracks.2.track_x - (((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x))\", 0)\n        n\['fourth'].setExpression(\"(((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y) - (\[value TrackerName].tracks.2.track_y - (((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y))\", 1)\n        print(\"upLint=3, downL=checked, downRint=1\") \n        n\['fourth'].setLabel(\"<font color=#C9A6DF><b>4th Track ><b\\>\")        \n        \n    if n\['downL'].value() == True and n\['downRint'].value() == 2:\n        n\['fourth'].setAnimated(True)\n        n\['fourth'].setExpression(\"\[value TrackerName].tracks.3.track_x + ((((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x) - (\[value TrackerName].tracks.2.track_x - (((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x))) - \[value TrackerName].tracks.3.track_x- (2*((\[value TrackerName].tracks.3.track_x)-\[value TrackerName].tracks.2.track_x))\", 0)\n        n\['fourth'].setExpression(\"\[value TrackerName].tracks.3.track_y + ((((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y) - (\[value TrackerName].tracks.2.track_y - (((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y))) - \[value TrackerName].tracks.3.track_y- (2*((\[value TrackerName].tracks.3.track_y)-\[value TrackerName].tracks.2.track_y))\", 1)\n        print(\"upLint=3, downL=checked, downRint=2\")  \n        n\['fourth'].setLabel(\"<font color=#C9A6DF><b>4th Track ><b\\>\")               \n        \n    if n\['upR'].value() == True and n\['downRint'].value() == 1:\n        n\['fourth'].setAnimated(True)\n        n\['fourth'].setExpression(\"(((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x) - (\[value TrackerName].tracks.2.track_x - (((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x))\", 0)\n        n\['fourth'].setExpression(\"(((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y) - (\[value TrackerName].tracks.2.track_y - (((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y))\", 1)  \n        print(\"upLint=3, upR=checked, downRint=1\") \n        n\['fourth'].setLabel(\"<font color=#C9A6DF><b>4th Track ><b\\>\")        \n        \n    if n\['upR'].value() == True and n\['downRint'].value() == 2:\n        n\['fourth'].setAnimated(True)\n        n\['fourth'].setExpression(\"\[value TrackerName].tracks.3.track_x - ((((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x) - (\[value TrackerName].tracks.2.track_x - (((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x))) + \[value TrackerName].tracks.3.track_x \", 0)\n        n\['fourth'].setExpression(\"\[value TrackerName].tracks.3.track_y - ((((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y) - (\[value TrackerName].tracks.2.track_y - (((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y))) + \[value TrackerName].tracks.3.track_y\", 1)\n        print(\"upLint=3, upR=checked, downRint=2\")         \n               \n    if n\['downR'].value() == True and n\['downLint'].value() == 2:\n        n\['fourth'].setAnimated(True)\n        n\['fourth'].setExpression(\"\[value TrackerName].tracks.3.track_x - ((((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x) - (\[value TrackerName].tracks.2.track_x - (((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x))) + \[value TrackerName].tracks.3.track_x \", 0)\n        n\['fourth'].setExpression(\"\[value TrackerName].tracks.3.track_y - ((((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y) - (\[value TrackerName].tracks.2.track_y - (((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y))) + \[value TrackerName].tracks.3.track_y\", 1)\n        print(\"upLint=3, downR=checked, downLint=2\")  \n        n\['fourth'].setLabel(\"<font color=#C9A6DF><b>4th Track ><b\\>\")                       \n        \n#---------------------------------------------------------------------------------------------------------------------------------------- \n\n     \nelif \"downLint\" in k.name() and k.value() == 3:\n    if n\['upL'].value() == True and n\['upRint'].value() == 1:\n        n\['fourth'].setAnimated(True)\n        n\['fourth'].setExpression(\"(((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x) - (\[value TrackerName].tracks.2.track_x - (((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x))\", 0)\n        n\['fourth'].setExpression(\"(((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y) - (\[value TrackerName].tracks.2.track_y - (((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y))\", 1) \n        print(\"downLint=3, upL=checked, upRint=1\") \n        n\['fourth'].setLabel(\"<font color=#C9A6DF><b>4th Track ><b\\>\")             \n        \n    if n\['upL'].value() == True and n\['upRint'].value() == 2:\n        n\['fourth'].setAnimated(True)\n        n\['fourth'].setExpression(\"\[value TrackerName].tracks.3.track_x - ((((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x) - (\[value TrackerName].tracks.2.track_x - (((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x))) + \[value TrackerName].tracks.3.track_x \", 0)\n        n\['fourth'].setExpression(\"\[value TrackerName].tracks.3.track_y - ((((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y) - (\[value TrackerName].tracks.2.track_y - (((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y))) + \[value TrackerName].tracks.3.track_y\", 1)\n        print(\"downLint=3, upL=checked, upRint=2\") \n        n\['fourth'].setLabel(\"<font color=#C9A6DF><b>4th Track ><b\\>\")                 \n          \n    if n\['downR'].value() == True and n\['upRint'].value() == 1:\n        n\['fourth'].setAnimated(True)\n        n\['fourth'].setExpression(\"(((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x) - (\[value TrackerName].tracks.2.track_x - (((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x))\", 0)\n        n\['fourth'].setExpression(\"(((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y) - (\[value TrackerName].tracks.2.track_y - (((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y))\", 1)\n        print(\"downLint=3, downR=checked, upRint=1\")   \n        n\['fourth'].setLabel(\"<font color=#C9A6DF><b>4th Track ><b\\>\")          \n        \n    if n\['downR'].value() == True and n\['upRint'].value() == 2:\n        n\['fourth'].setAnimated(True)\n        n\['fourth'].setExpression(\"\[value TrackerName].tracks.3.track_x + ((((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x) - (\[value TrackerName].tracks.2.track_x - (((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x))) - \[value TrackerName].tracks.3.track_x- (2*((\[value TrackerName].tracks.3.track_x)-\[value TrackerName].tracks.2.track_x))\", 0)\n        n\['fourth'].setExpression(\"\[value TrackerName].tracks.3.track_y + ((((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y) - (\[value TrackerName].tracks.2.track_y - (((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y))) - \[value TrackerName].tracks.3.track_y- (2*((\[value TrackerName].tracks.3.track_y)-\[value TrackerName].tracks.2.track_y))\", 1)\n        print(\"downLint=3, downL=checked, upRint=2\")\n        n\['fourth'].setLabel(\"<font color=#C9A6DF><b>4th Track ><b\\>\")                      \n\n    if n\['upR'].value() == True and n\['downRint'].value() == 2:\n        n\['fourth'].setAnimated(True)\n        n\['fourth'].setExpression(\"\[value TrackerName].tracks.3.track_x - ((((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x) - (\[value TrackerName].tracks.2.track_x - (((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x))) + \[value TrackerName].tracks.3.track_x \", 0)\n        n\['fourth'].setExpression(\"\[value TrackerName].tracks.3.track_y - ((((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y) - (\[value TrackerName].tracks.2.track_y - (((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y))) + \[value TrackerName].tracks.3.track_y\", 1)\n        print(\"downLint=3, upR=checked, downRint=2\")\n        n\['fourth'].setLabel(\"<font color=#C9A6DF><b>4th Track ><b\\>\")        \n\n#---------------------------------------------------------------------------------------------------------------------------------------- \n\n        \nelif \"upRint\" in k.name() and k.value() == 3:\n    if n\['upL'].value() == True and n\['downLint'].value() == 1:\n        n\['fourth'].setAnimated(True)\n        n\['fourth'].setExpression(\"(((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x) - (\[value TrackerName].tracks.2.track_x - (((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x))\", 0)\n        n\['fourth'].setExpression(\"(((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y) - (\[value TrackerName].tracks.2.track_y - (((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y))\", 1)\n        print(\"upRint=3, upL=checked, downLint=1\")\n        n\['fourth'].setLabel(\"<font color=#C9A6DF><b>4th Track ><b\\>\")        \n        \n    if n\['upL'].value() == True and n\['downLint'].value() == 2:\n        n\['fourth'].setAnimated(True)\n        n\['fourth'].setAnimated(True)\n        n\['fourth'].setExpression(\"\[value TrackerName].tracks.3.track_x + ((((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x) - (\[value TrackerName].tracks.2.track_x - (((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x))) - \[value TrackerName].tracks.3.track_x- (2*((\[value TrackerName].tracks.3.track_x)-\[value TrackerName].tracks.2.track_x))\", 0)\n        n\['fourth'].setExpression(\"\[value TrackerName].tracks.3.track_y + ((((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y) - (\[value TrackerName].tracks.2.track_y - (((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y))) - \[value TrackerName].tracks.3.track_y- (2*((\[value TrackerName].tracks.3.track_y)-\[value TrackerName].tracks.2.track_y))\", 1)\n        print(\"upRint=3, upL=checked, downLint=2\")  \n        n\['fourth'].setLabel(\"<font color=#C9A6DF><b>4th Track ><b\\>\")              \n        \n    if n\['downR'].value() == True and n\['downLint'].value() == 1:\n        n\['fourth'].setAnimated(True)\n        n\['fourth'].setExpression(\"(((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x) - (\[value TrackerName].tracks.2.track_x - (((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x))\", 0)\n        n\['fourth'].setExpression(\"(((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y) - (\[value TrackerName].tracks.2.track_y - (((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y))\", 1)\n        print(\"upRint=3, downR=checked, downLint=1\")\n        n\['fourth'].setLabel(\"<font color=#C9A6DF><b>4th Track ><b\\>\")        \n        \n    if n\['downR'].value() == True and n\['downLint'].value() == 2:\n        n\['fourth'].setAnimated(True)\n        n\['fourth'].setExpression(\"\[value TrackerName].tracks.3.track_x - ((((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x) - (\[value TrackerName].tracks.2.track_x - (((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x))) + \[value TrackerName].tracks.3.track_x \", 0)\n        n\['fourth'].setExpression(\"\[value TrackerName].tracks.3.track_y - ((((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y) - (\[value TrackerName].tracks.2.track_y - (((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y))) + \[value TrackerName].tracks.3.track_y\", 1)\n        print(\"upRint=3, downR=checked, downLint=2\")\n        n\['fourth'].setLabel(\"<font color=#C9A6DF><b>4th Track ><b\\>\")        \n    \n    if n\['downL'].value() == True and n\['upLint'].value() == 2:\n        n\['fourth'].setAnimated(True)\n        n\['fourth'].setExpression(\"\[value TrackerName].tracks.3.track_x - ((((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x) - (\[value TrackerName].tracks.2.track_x - (((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x))) + \[value TrackerName].tracks.3.track_x \", 0)\n        n\['fourth'].setExpression(\"\[value TrackerName].tracks.3.track_y - ((((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y) - (\[value TrackerName].tracks.2.track_y - (((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y))) + \[value TrackerName].tracks.3.track_y\", 1)\n        print(\"upRint=3, downL=checked, downLint=2\")    \n        n\['fourth'].setLabel(\"<font color=#C9A6DF><b>4th Track ><b\\>\")\n\n      \n        \n#----------------------------------------------------------------------------------------------------------------------------------------       \n\n\n"
 tile_color 0x7d4689ff
 selected true
 xpos 806
 ypos 365
 addUserKnob {20 User l 4thPin}
 addUserKnob {26 trackerToCreate l "<font color=#C9A6DF>@b;Tracker"}
 addUserKnob {1 TrackerName l "<font color=#DE5F80><b> ><b\\>"}
 addUserKnob {22 Select2D l Select t "This knob will write the name of the selected node" -STARTLINE T "group = nuke.thisNode()\ncheckboxes = \['upL', 'downL', 'upR', 'downR']\nintFields = \['upLint', 'downLint', 'upRint', 'downRint']\n\n\nwith nuke.root():\n\tTracker = nuke.selectedNode()\['name'].value()\ngroup\['TrackerName'].setValue(Tracker)\ngroup\['track1'].clearAnimated()\ngroup\['track1'].setExpression(\"parent.\[value TrackerName].tracks.1.track_x\", 0)\ngroup\['track1'].setExpression(\"parent.\[value TrackerName].tracks.1.track_y\", 1)\n\ngroup\['track2'].clearAnimated()\ngroup\['track2'].setExpression(\"parent.\[value TrackerName].tracks.2.track_x\", 0)\ngroup\['track2'].setExpression(\"parent.\[value TrackerName].tracks.2.track_y\", 1)\n\ngroup\['track3'].clearAnimated()\ngroup\['track3'].setExpression(\"parent.\[value TrackerName].tracks.3.track_x\", 0)\ngroup\['track3'].setExpression(\"parent.\[value TrackerName].tracks.3.track_y\", 1)\n\ngroup\['upL'].setValue(False)\ngroup\['upR'].setValue(False)\ngroup\['downR'].setValue(False)\ngroup\['downL'].setValue(False)\n\ngroup\['upLint'].setValue(0)\ngroup\['upRint'].setValue(0)\ngroup\['downRint'].setValue(0)\ngroup\['downLint'].setValue(0)\n\ngroup\['fourth'].setExpression(\"curve\", 0)\ngroup\['fourth'].setExpression(\"curve\", 1)\ngroup\['fourth'].clearAnimated()\ngroup\['fourth'].setLabel(\"<b>4th Track ><b\\>\")"}
 addUserKnob {26 ""}
 addUserKnob {3 upLint l " " t "First check the checkbox referring to the pin you want to create, then right in what order the tracks in your Tracker node are.\n\nEx: I want to create a pin on the upper right corner.\n      1- I check the up-right checkbox.\n      2 - In my Tracker, the first track is bottom-left, \n            so I write 1 in the bottom-left knob. The\n            second track is up-left, so I write 2 in the\n            up-left knob. The third track is bottom-right,\n            so I write 3 in the bottom-right knob.\n\n<b>The script updates when entering 3 in the knob<b\\>"}
 addUserKnob {6 upL l "@b;⇖      ⇗" t "First check the checkbox referring to the pin you want to create, then right in what order the tracks in your Tracker node are.\n\nEx: I want to create a pin on the upper right corner.\n      1- I check the up-right checkbox.\n      2 - In my Tracker, the first track is bottom-left, \n            so I write 1 in the bottom-left knob. The\n            second track is up-left, so I write 2 in the\n            up-left knob. The third track is bottom-right,\n            so I write 3 in the bottom-right knob.\n\n<b>The script updates when entering 3 in the knob<b\\>" -STARTLINE}
 addUserKnob {6 upR l "" t "First check the checkbox referring to the pin you want to create, then right in what order the tracks in your Tracker node are.\n\nEx: I want to create a pin on the upper right corner.\n      1- I check the up-right checkbox.\n      2 - In my Tracker, the first track is bottom-left, \n            so I write 1 in the bottom-left knob. The\n            second track is up-left, so I write 2 in the\n            up-left knob. The third track is bottom-right,\n            so I write 3 in the bottom-right knob.\n\n<b>The script updates when entering 3 in the knob<b\\>" -STARTLINE}
 addUserKnob {3 upRint l "" t "First check the checkbox referring to the pin you want to create, then right in what order the tracks in your Tracker node are.\n\nEx: I want to create a pin on the upper right corner.\n      1- I check the up-right checkbox.\n      2 - In my Tracker, the first track is bottom-left, \n            so I write 1 in the bottom-left knob. The\n            second track is up-left, so I write 2 in the\n            up-left knob. The third track is bottom-right,\n            so I write 3 in the bottom-right knob.\n\n<b>The script updates when entering 3 in the knob<b\\>" -STARTLINE}
 addUserKnob {3 downLint l " " t "First check the checkbox referring to the pin you want to create, then right in what order the tracks in your Tracker node are.\n\nEx: I want to create a pin on the upper right corner.\n      1- I check the up-right checkbox.\n      2 - In my Tracker, the first track is bottom-left, \n            so I write 1 in the bottom-left knob. The\n            second track is up-left, so I write 2 in the\n            up-left knob. The third track is bottom-right,\n            so I write 3 in the bottom-right knob.\n\n<b>The script updates when entering 3 in the knob<b\\>"}
 addUserKnob {6 downL l "⇙      ⇘" t "First check the checkbox referring to the pin you want to create, then right in what order the tracks in your Tracker node are.\n\nEx: I want to create a pin on the upper right corner.\n      1- I check the up-right checkbox.\n      2 - In my Tracker, the first track is bottom-left, \n            so I write 1 in the bottom-left knob. The\n            second track is up-left, so I write 2 in the\n            up-left knob. The third track is bottom-right,\n            so I write 3 in the bottom-right knob.\n\n<b>The script updates when entering 3 in the knob<b\\>" -STARTLINE}
 addUserKnob {6 downR l "" t "First check the checkbox referring to the pin you want to create, then right in what order the tracks in your Tracker node are.\n\nEx: I want to create a pin on the upper right corner.\n      1- I check the up-right checkbox.\n      2 - In my Tracker, the first track is bottom-left, \n            so I write 1 in the bottom-left knob. The\n            second track is up-left, so I write 2 in the\n            up-left knob. The third track is bottom-right,\n            so I write 3 in the bottom-right knob.\n\n<b>The script updates when entering 3 in the knob<b\\>" -STARTLINE}
 addUserKnob {3 downRint l "" t "First check the checkbox referring to the pin you want to create, then right in what order the tracks in your Tracker node are.\n\nEx: I want to create a pin on the upper right corner.\n      1- I check the up-right checkbox.\n      2 - In my Tracker, the first track is bottom-left, \n            so I write 1 in the bottom-left knob. The\n            second track is up-left, so I write 2 in the\n            up-left knob. The third track is bottom-right,\n            so I write 3 in the bottom-right knob.\n\n<b>The script updates when entering 3 in the knob<b\\>" -STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {22 refreshPin l Refresh! t "import nuke\n\nnode = nuke.thisNode()\nTrackerName = nuke.thisNode().knob( 'TrackerName' )\n\nif node:\n    fourth_knob = node.knob('fourth')\n\n    if fourth_knob:\n        for knob_name, knob in node.knobs().items():\n            if knob.Class() == 'Boolean_Knob' and knob.value():\n                if knob_name == 'to1':\n                    x_value = (((TrackerName.tracks.1.track_x - TrackerName.tracks.3.track_x)/2) + TrackerName.tracks.3.track_x) - (TrackerName.tracks.2.track_x - (((TrackerName.tracks.1.track_x - TrackerName.tracks.3.track_x)/2) + TrackerName.tracks.3.track_x))\n                    y_value = (((TrackerName.tracks.1.track_y - TrackerName.tracks.3.track_y)/2) + TrackerName.tracks.3.track_y) - (TrackerName.tracks.2.track_y - (((TrackerName.tracks.1.track_y - TrackerName.tracks.3.track_y)/2) + TrackerName.tracks.3.track_y))\n                    fourth_knob.setValue('x', float(x_value))\n                    fourth_knob.setValue('y', float(y_value))\n                    break\n                elif knob_name in ('to2', 'to3', 'to4'):\n                    x_value = float('numeric value for other checkboxes')\n                    y_value = float('numeric value for other checkboxes')\n                    fourth_knob.setValue('x', x_value)\n                    fourth_knob.setValue('y', y_value)\n                    break\n        else:\n            print(\"No checkboxes are checked.\")\n    else:\n        print(\"The 'fourth' knob was not found in the node.\")\nelse:\n    print(\"Node not found:\", node_name)\n\n\n\n\n--------------------------\n\n\n\n\n\n\n\n\n\n#nuke.thisNode().knob( 'fourth' ).setExpression( 'curve')\n\nnode = nuke.thisNode()\nx_outputKnob = nuke.thisNode().knob( 'fourth.x' )\ny_outputKnob = nuke.thisNode().knob( 'fourth.y' )\n\nif node:\n    for knob_name, knob in node.knobs().items():\n        if knob.Class() == 'Boolean_Knob' and knob.value():\n            if knob_name == 'to1':\n                x_expression = \"(((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x)- (\[value TrackerName].tracks.2.track_x - (((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x))\"\n                y_expression = \"(((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y) - (\[value TrackerName].tracks.2.track_y - (((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y))\"\nnuke.thisNode().knob( 'fourth.x' ).setExpression( '\{\}'.format(x_expression))\nnuke.thisNode().knob( 'fourth.y' ).setExpression( '\{\}'.format(y_expression))\n            \nelif knob_name == 'to2':\n                x_expression = 'expression for CheckboxKnob1'\n                y_expression = 'expression for CheckboxKnob1'\n\nelif knob_name == 'to3':\n                x_expression = 'expression for CheckboxKnob1'\n                y_expression = 'expression for CheckboxKnob1'\nelif knob_name == 'to4':\n                x_expression = 'expression for CheckboxKnob1'\n                y_expression = 'expression for CheckboxKnob1'\nelse:\n                x_expression = ''\n                y_expression = ''\n\n\n\n            break\n    else:\n        print(\"No checkboxes are checked.\")\nelse:\n    print(\"Node not found:\", node_name)\n\n\n\nnode = nuke.thisNode()\nx_outputKnob = nuke.thisNode().knob('fourth.x')\ny_outputKnob = nuke.thisNode().knob('fourth.y')\n\nif node:\n    for knob_name, knob in node.knobs().items():\n        if knob.Class() == 'Boolean_Knob' and knob.value():\n            if knob_name == 'to1':\n                x_expression = \"(((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x)- (\[value TrackerName].tracks.2.track_x - (((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x))\"\n                y_expression = \"(((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y) - (\[value TrackerName].tracks.2.track_y - (((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y))\"\n                x_outputKnob.setExpression(x_expression)\n                y_outputKnob.setExpression(y_expression)\n                break\n            elif knob_name in ('to2', 'to3', 'to4'):\n                x_expression = 'expression for other checkboxes'\n                y_expression = 'expression for other checkboxes'\n                x_outputKnob.setExpression(x_expression)\n                y_outputKnob.setExpression(y_expression)\n                break\n    else:\n        print(\"No checkboxes are checked.\")\nelse:\n    print(\"Node not found:\", node_name)\n_________________________________________________________________________________________________________\n\n\tx_target_knob = node\[x_outputKnob]\n\ty_target_knob = node\[y_outputKnob]\n\tx_target_knob.setExpression(x_expression)\n\ty_target_knob.setExpression(y_expression)\n\nnewRef = nuke.thisNode().knob('newRef').value()\nnodeName = nuke.thisNode().knob('nodeName').value()\n\nnuke.toNode(nodeName).knob( 'translate' ).setExpression( 'curve')\nnuke.toNode(nodeName).knob( 'rotate' ).setExpression( 'curve')\nnuke.toNode(nodeName).knob( 'scale' ).setExpression( 'curve')\nnuke.toNode(nodeName).knob( 'skewX' ).setExpression( 'curve')\nnuke.toNode(nodeName).knob( 'skewY' ).setExpression( 'curve')\n\ntransVal = nuke.toNode(nodeName).knob('translate').valueAt(newRef)\nrotVal = nuke.toNode(nodeName).knob('rotate').valueAt(newRef)\nscaleVal = nuke.toNode(nodeName).knob('scale').valueAt(newRef)\nskewXVal = nuke.toNode(nodeName).knob('skewX').valueAt(newRef)\nskewYVal = nuke.toNode(nodeName).knob('skewY').valueAt(newRef)\n\n\nnuke.toNode(nodeName).knob( 'translate' ).setExpression( 'curve - \{\}'.format(transVal\[0]), 0)\nnuke.toNode(nodeName).knob( 'translate' ).setExpression( 'curve - \{\}'.format(transVal\[1]), 1)\nnuke.toNode(nodeName).knob( 'rotate' )     .setExpression( 'curve - \{\}'.format(rotVal))\nnuke.toNode(nodeName).knob( 'scale' )       .setExpression( 'curve - \{\}+1'.format(scaleVal))\nnuke.toNode(nodeName).knob( 'skewX' )    .setExpression( 'curve - \{\}'.format(skewXVal))\nnuke.toNode(nodeName).knob( 'skewY' )     .setExpression( 'curve - \{\}'.format(skewYVal))\n\nnuke.toNode(nodeName).knob( 'label' ).setValue(nuke.tcl( 'value newRef' ))" +INVISIBLE T "import nuke\n\nnode = nuke.thisNode()\nfourth_knob = node.knob('fourth')\n\nif fourth_knob:\n        for knob_name, knob in node.knobs().items():\n            if knob.Class() == 'Boolean_Knob' and knob.value():\n                x_value, y_value = None, None\n                if knob_name == 'to1':\n                    x_value = \"(((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x) - (\[value TrackerName].tracks.2.track_x - (((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x))\"\n                    y_value = \"(((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y) - (\[value TrackerName].tracks.2.track_y - (((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y))\"\n                    \n                elif knob_name == 'to2':\n                    x_value = \"(((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x) - (\[value TrackerName].tracks.2.track_x - (((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x))\"\n                    y_value = \"(((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y) - (\[value TrackerName].tracks.2.track_y - (((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y))\"\n                    \n                elif knob_name == 'to3':\n                    x_value = \"(((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x) - (\[value TrackerName].tracks.2.track_x - (((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x))\"\n                    y_value = \"(((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y) - (\[value TrackerName].tracks.2.track_y - (((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y))\"\n                    \n                elif knob_name == 'to4':\n                    x_value = \"(((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x) - (\[value TrackerName].tracks.2.track_x - (((\[value TrackerName].tracks.1.track_x - \[value TrackerName].tracks.3.track_x)/2) + \[value TrackerName].tracks.3.track_x))\"\n                    y_value = \"(((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y) - (\[value TrackerName].tracks.2.track_y - (((\[value TrackerName].tracks.1.track_y - \[value TrackerName].tracks.3.track_y)/2) + \[value TrackerName].tracks.3.track_y))\"   \n\n                                     \nfourth_knob.setExpression(x_value, 0)\nfourth_knob.setExpression(y_value, 1)\nprint (y_value)" +STARTLINE}
 addUserKnob {12 track1 l "@b;1st Track"}
 track1 {{"parent.\[value TrackerName].tracks.1.track_x"} {"parent.\[value TrackerName].tracks.1.track_y"}}
 addUserKnob {12 track2 l "@b;2nd Track"}
 track2 {{"parent.\[value TrackerName].tracks.2.track_x"} {"parent.\[value TrackerName].tracks.2.track_y"}}
 addUserKnob {12 track3 l "@b;3rd Track"}
 track3 {{"parent.\[value TrackerName].tracks.3.track_x"} {"parent.\[value TrackerName].tracks.3.track_y"}}
 addUserKnob {26 ""}
 addUserKnob {12 fourth l "<font color=#C9A6DF><b>4th Track ><b\\>"}
 addUserKnob {26 ""}
 addUserKnob {22 Bake l Bake! T "import nuke\n\ngroup_node = nuke.thisNode()\ntracker_name = group_node\['TrackerName'].value()\ntracker_node = nuke.toNode(tracker_name)\nref_frame = int(tracker_node\['reference_frame'].value())\n\ngroup_node.setSelected(True)\ncorner_pin_node = nuke.createNode('CornerPin2D')\ncorner_pin_node.setName(tracker_name + \"_CornerPin1\")\nframe_range = nuke.getInput(\"Enter the first and last frame to copy:\", \"1001-1100\")\n\ntry:\n    first_frame, last_frame = map(int, frame_range.split('-'))\nexcept (ValueError, TypeError):\n    nuke.message(\"Invalid frame range. Please enter a valid frame range.\")\n\nfor i in range(1, 4):\n    track_knob = group_node\['track\{\}'.format(i)]\n    cornerpin_knob = corner_pin_node\['to\{\}'.format(i)]\n\n    corner_pin_node\['to\{\}'.format(i)].setExpression(\"parent.\"+group_node.name()+\".track\{\}\".format(i))\n    corner_pin_node\['from\{\}'.format(i)].setExpression(\"parent.\"+group_node.name()+\".track\{\}\".format(i))    \n    for frame in range(first_frame, last_frame + 1):\n        value = cornerpin_knob.getValueAt(frame)\n        cornerpin_knob.setValueAt(value\[0], frame, 0)  # Set x coordinate\n        cornerpin_knob.setValueAt(value\[1], frame, 1)  # Set y coordinate    \n        \ncorner_pin_node\['to4'].setExpression(\"parent.\"+group_node.name()+\".fourth\")\nfor frame in range(first_frame, last_frame + 1):\n    value = corner_pin_node\['to4'].getValueAt(frame)\n    corner_pin_node\['to4'].setValueAt(value\[0], frame, 0)  # Set x coordinate\n    corner_pin_node\['to4'].setValueAt(value\[1], frame, 1)  # Set y coordinate\n\nfor i in range(1, 5):\n    corner_pin_node\['to\{\}'.format(i)].setExpression(\"curve\")\n    to_value = corner_pin_node\['to\{\}'.format(i)].getValueAt(ref_frame)\n    corner_pin_node\['from\{\}'.format(i)].setValueAt(to_value\[0], ref_frame, 0)  # Set x coordinate\n    corner_pin_node\['from\{\}'.format(i)].setValueAt(to_value\[1], ref_frame, 1)  # Set y coordinate   \n    corner_pin_node\['from\{\}'.format(i)].clearAnimated() \n\nn\[\"rebake\"].setVisible(False)\nprint(\"The bakery has successfully baked a CornerPin\")    " +STARTLINE}
 addUserKnob {26 rebake l "" -STARTLINE T "   Will need to bake!"}
 addUserKnob {26 ""}
 addUserKnob {26 About l "" +STARTLINE T "<font color=#DFCAE0><font size=3> v2 | <font size=1> Victor Rouillard &copy; "}
}
