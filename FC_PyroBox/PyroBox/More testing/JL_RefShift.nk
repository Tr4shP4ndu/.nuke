NoOp {
 name JL_RefShift
 knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"pulldown\":\n    \n    if n\[\"pulldown\"].value() == \"Tracker\":\n    \n        n\[\"python_button_2\"].setVisible(False)\n        n\[\"check_refshift\"].setVisible(True)\n        n\[\"python_button\"].setVisible(True)\n        n\[\"method\"].setVisible(True)\n        n\[\"text_1\"].setVisible(True)\n    \n    if n\[\"pulldown\"].value() == \"Selected Node\":\n    \n        n\[\"python_button_2\"].setVisible(True)\n        n\[\"check_refshift\"].setVisible(False)\n        n\[\"python_button\"].setVisible(False)\n        n\[\"method\"].setVisible(False)\n        n\[\"text_1\"].setVisible(False)\n    \n"
 tile_color 0x923b00ff
 label "Method: \[value pulldown]"
 selected true
 addUserKnob {20 User l JL_RefShift}
 addUserKnob {4 pulldown l "" t "\n<b>Tracker:</b>\nWhen we press \"Create\" it will generate the \"Transform\" or \"CornerPin\" of the tracker to which the input is connected.\n\n<b>Selected Node:</b>\nWhen we press \"Create\" it will generate the \"Transform\" or \"CornerPin\" of the selected node.\n" +STARTLINE M {Tracker "Selected Node" "" "" "" "" "" "" "" "" ""}}
 addUserKnob {22 python_button_2 l Create -STARTLINE +HIDDEN T "z = nuke.selectedNodes()\nn = nuke.thisNode()\nposx = int( n\[\"xpos\"].value() )\nposy = int( n\[\"ypos\"].value() )\n\n\nif len(z) == 1:\n    if nuke.selectedNode().Class() == \"Transform\" or nuke.selectedNode().Class() == \"CornerPin2D\":\n        \n        bypass = True\n    \n        nuke.nodeCopy(nukescripts.cut_paste_file())\n        nuke.selectedNode().setSelected(False)\n        nuke.nodePaste(nukescripts.cut_paste_file())\n        nuke.selectedNode().setXpos(posx + 150)\n        nuke.selectedNode().setYpos(posy)\n        \n    else:\n        \n        bypass = False\n        nuke.message(\"You must select a Transform/CornerPin node\")\n        \n\n\n\n    \n    \nelse:\n    \n    bypass = False\n    nuke.message(\"You must select a single node\")\n    \n    \n####Create RefShift\n\nif bypass:\n\n    target_node = nuke.selectedNode()\n\n    #knobs creation\n    tab = nuke.Tab_Knob(\"RefShift\")\n    new_ref = nuke.Int_Knob(\"newref\",\"New Reference\")\n    current = nuke.PyScript_Knob(\"current\",\"Current Frame\",\"nuke.thisNode()\['newref'].setValue(nuke.frame())\")\n    divider_line = nuke.Text_Knob(\"ttt\",\"\")\n    author = nuke.Text_Knob(\"author\",\"\",\"JL_RefShift v1.0 | Joserra Lastras 2024\")\n\n    target_node.addKnob(tab)\n    target_node.addKnob(new_ref)\n    target_node.addKnob(current)\n    target_node.addKnob(divider_line)\n    target_node.addKnob(author)\n    target_node\[\"current\"].clearFlag(nuke.STARTLINE)\n\n    \n    #tab creation\n    target_node\[\"newref\"].setValue(nuke.frame())\n\n    if target_node.Class() == \"Transform\":\n        target_node\[\"translate\"].setExpression(\"curve-curve(\[value newref])\")\n        target_node\[\"rotate\"].setExpression(\"curve-curve(\[value newref])\")\n        target_node\[\"scale\"].setExpression(\"(curve-1)-(curve(\[value newref])-1)+1\")\n        target_node\[\"skewX\"].setExpression(\"curve-curve(\[value newref])\")\n        target_node\[\"skewY\"].setExpression(\"curve-curve(\[value newref])\")\n        target_node\[\"label\"].setValue(\"Ref frame: \[value newref], RefShifted\")\n    elif target_node.Class() == \"CornerPin2D\":\n        target_node\[\"from1\"].setExpression(\"to1.x(\[value newref])\",0)\n        target_node\[\"from1\"].setExpression(\"to1.y(\[value newref])\",1)\n    \n        target_node\[\"from2\"].setExpression(\"to2.x(\[value newref])\",0)\n        target_node\[\"from2\"].setExpression(\"to2.y(\[value newref])\",1)\n    \n        target_node\[\"from3\"].setExpression(\"to3.x(\[value newref])\",0)\n        target_node\[\"from3\"].setExpression(\"to3.y(\[value newref])\",1)\n    \n        target_node\[\"from4\"].setExpression(\"to4.x(\[value newref])\",0)\n        target_node\[\"from4\"].setExpression(\"to4.y(\[value newref])\",1)\n    \n        target_node\[\"label\"].setValue(\"Ref frame: \[value newref], RefShifted\")"}
 addUserKnob {6 check_refshift l "Insert RefShift" t "If checked when creating our Transform or CornerPin, it will insert a new tab that will allow us to choose the reference frame whenever we need it." -STARTLINE}
 check_refshift true
 addUserKnob {26 text_1 l "" +STARTLINE}
 addUserKnob {4 method l "" +STARTLINE M {"Transform (match-move, baked)" "Transform (stabilize, baked)" "CornerPin2D (use transform ref frame, baked)" "" "" ""}}
 addUserKnob {22 python_button l Create -STARTLINE T "z = nuke.thisNode()\n\nif z.input(0) and z.input(0).Class() == \"Tracker4\":\n    \n    all_nodes = nuke.allNodes()\n\n    #choose method for tracker\n    k = str( z\[\"method\"].value() )\n    \n    #get values from tracker\n    ref = str( int( z.input(0)\[\"reference_frame\"].value() ) )\n    color = z.input(0)\[\"tile_color\"].value()\n    \n    z.input(0)\[\"cornerPinOptions\"].setValue(k)\n    z.input(0)\[\"createCornerPin\"].execute()\n    \n    \n    #find created node\n    \n    all_nodes_after = nuke.allNodes()\n    \n    for n in all_nodes_after:\n        if n not in all_nodes:\n            target_node = n\[\"name\"].value()\n            target_node = nuke.toNode(target_node)\n            \n    #set ref frame and color\n    target_node\[\"label\"].setValue(\"Ref frame: \{\}\".format(ref))\n    target_node\[\"tile_color\"].setValue(color)\n    \n    if int(z\[\"check_refshift\"].value())==1:\n        \n        #knobs creation\n        tab = nuke.Tab_Knob(\"RefShift\")\n        new_ref = nuke.Int_Knob(\"newref\",\"New Reference\")\n        current = nuke.PyScript_Knob(\"current\",\"Current Frame\",\"nuke.thisNode()\['newref'].setValue(nuke.frame())\")\n        divider_line = nuke.Text_Knob(\"ttt\",\"\")\n        author = nuke.Text_Knob(\"author\",\"\",\"JL_RefShift v1.0 | Joserra Lastras 2024\")\n        \n        target_node.addKnob(tab)\n        target_node.addKnob(new_ref)\n        target_node.addKnob(current)\n        target_node.addKnob(divider_line)\n        target_node.addKnob(author)\n        target_node\[\"current\"].clearFlag(nuke.STARTLINE)\n        \n        target_node\[\"label\"].setValue(\"Ref frame: \{\}, RefShifted\".format(ref))\n        #tab creation\n        target_node\[\"newref\"].setValue(int(ref))\n        #set knobs expressions for match_move and stabilize\n        method_selected = z\[\"method\"].getValue()\n        method_selected = int(method_selected)\n        \n        if method_selected == 0 or method_selected == 1:\n            target_node\[\"translate\"].setExpression(\"curve-curve(\[value newref])\")\n            target_node\[\"rotate\"].setExpression(\"curve-curve(\[value newref])\")\n            target_node\[\"scale\"].setExpression(\"(curve-1)-(curve(\[value newref])-1)+1\")\n            target_node\[\"skewX\"].setExpression(\"curve-curve(\[value newref])\")\n            target_node\[\"skewY\"].setExpression(\"curve-curve(\[value newref])\")\n            target_node\[\"label\"].setValue(\"Ref frame: \[value newref], RefShifted\")\n        elif method_selected == 2:\n            target_node\[\"from1\"].setExpression(\"to1.x(\[value newref])\",0)\n            target_node\[\"from1\"].setExpression(\"to1.y(\[value newref])\",1)\n            \n            target_node\[\"from2\"].setExpression(\"to2.x(\[value newref])\",0)\n            target_node\[\"from2\"].setExpression(\"to2.y(\[value newref])\",1)\n            \n            target_node\[\"from3\"].setExpression(\"to3.x(\[value newref])\",0)\n            target_node\[\"from3\"].setExpression(\"to3.y(\[value newref])\",1)\n            \n            target_node\[\"from4\"].setExpression(\"to4.x(\[value newref])\",0)\n            target_node\[\"from4\"].setExpression(\"to4.y(\[value newref])\",1)\n            \n            target_node\[\"label\"].setValue(\"Ref frame: \[value newref], RefShifted\")\n\n\n\nelse:\n    nuke.message(\"No input!!!\")"}
 addUserKnob {26 ""}
 addUserKnob {26 text l "" +STARTLINE T "JL_RefShift v1.0 | Joserra Lastras 2024"}
 addUserKnob {26 web l "" +STARTLINE T "<a href=\"https://www.joserralastras.com/\"><span style=\"color:#5f5f5f;\">www.joserralastras.com</a>"}
}
