set cut_paste_input [stack 0]
version 15.0 v1
BackdropNode {
 inputs 0
 name BackdropNode10
 tile_color 0xe0e0eff
 label <center>SCREENCLEAN
 note_font "Verdana Bold"
 note_font_size 60
 selected true
 xpos 238
 ypos 899
 appearance Border
 border_width 40
 bdwidth 866
 bdheight 1397
}
BackdropNode {
 inputs 0
 name BackdropNode11
 tile_color 0x880000ff
 label <center>CACHE
 note_font "Verdana Bold"
 note_font_size 60
 selected true
 xpos 491
 ypos 1656
 bdwidth 339
 bdheight 479
}
BackdropNode {
 inputs 0
 name BackdropNode12
 tile_color 0xe0e0eff
 label "<center>FG ELEMENTS"
 note_font "Verdana Bold"
 note_font_size 60
 selected true
 xpos -2656
 ypos 2554
 appearance Border
 border_width 40
 bdwidth 7028
 bdheight 5881
}
BackdropNode {
 inputs 0
 name BackdropNode13
 tile_color 0xe0e0eff
 label "<center>CORE DESPILL"
 note_font "Verdana Bold"
 note_font_size 60
 selected true
 xpos -2417
 ypos 3157
 appearance Border
 border_width 40
 bdwidth 866
 bdheight 1397
}
BackdropNode {
 inputs 0
 name BackdropNode14
 tile_color 0xe0e0eff
 label "<center>CORE DESPILL"
 note_font "Verdana Bold"
 note_font_size 60
 selected true
 xpos -1432
 ypos 3162
 appearance Border
 border_width 40
 bdwidth 1544
 bdheight 3420
}
BackdropNode {
 inputs 0
 name BackdropNode15
 tile_color 0x880000ff
 label <center>CACHE
 note_font "Verdana Bold"
 note_font_size 60
 selected true
 xpos -829
 ypos 6033
 bdwidth 339
 bdheight 479
}
BackdropNode {
 inputs 0
 name BackdropNode16
 tile_color 0xe0e0eff
 label "<center>CORE KEY"
 note_font "Verdana Bold"
 note_font_size 60
 selected true
 xpos 878
 ypos 3162
 appearance Border
 border_width 40
 bdwidth 1544
 bdheight 3420
}
BackdropNode {
 inputs 0
 name BackdropNode17
 tile_color 0xe0e0eff
 label "<center>CORE DESPILL"
 note_font "Verdana Bold"
 note_font_size 60
 selected true
 xpos 2638
 ypos 3162
 appearance Border
 border_width 40
 bdwidth 1544
 bdheight 3420
}
BackdropNode {
 inputs 0
 name BackdropNode18
 tile_color 0x880000ff
 label <center>CACHE
 note_font "Verdana Bold"
 note_font_size 60
 selected true
 xpos 3241
 ypos 7209
 bdwidth 339
 bdheight 479
}
BackdropNode {
 inputs 0
 name BackdropNode19
 tile_color 0x880000ff
 label <center>CACHE
 note_font "Verdana Bold"
 note_font_size 60
 selected true
 xpos 3241
 ypos 6072
 bdwidth 339
 bdheight 479
}
BackdropNode {
 inputs 0
 name BackdropNode20
 tile_color 0x880000ff
 label <center>CACHE
 note_font "Verdana Bold"
 note_font_size 60
 selected true
 xpos -829
 ypos 7905
 bdwidth 339
 bdheight 479
}
BackdropNode {
 inputs 0
 name BackdropNode21
 tile_color 0xe0e0eff
 label "<center>BG BLEND"
 note_font "Verdana Bold"
 note_font_size 60
 selected true
 xpos -1150
 ypos 8574
 appearance Border
 border_width 40
 bdwidth 1079
 bdheight 996
}
BackdropNode {
 inputs 0
 name BackdropNode22
 tile_color 0xe0e0eff
 label "<center>EDGE BLEND"
 note_font "Verdana Bold"
 note_font_size 60
 selected true
 xpos -1146
 ypos 9639
 appearance Border
 border_width 40
 bdwidth 1079
 bdheight 996
}
BackdropNode {
 inputs 0
 name BackdropNode23
 tile_color 0xe0e0eff
 label "<center>FG OVER"
 note_font "Verdana Bold"
 note_font_size 60
 selected true
 xpos -4324
 ypos 10717
 appearance Border
 border_width 40
 bdwidth 509
 bdheight 837
}
BackdropNode {
 inputs 0
 name BackdropNode24
 tile_color 0xe0e0eff
 label <center>ENV
 note_font "Verdana Bold"
 note_font_size 60
 selected true
 xpos -4334
 ypos 7481
 appearance Border
 border_width 40
 bdwidth 509
 bdheight 837
}
BackdropNode {
 inputs 0
 name BackdropNode25
 tile_color 0xe0e0eff
 label "<center>REGRAIN SETUP"
 note_font "Verdana Bold"
 note_font_size 60
 selected true
 xpos -4649
 ypos 12235
 appearance Border
 border_width 40
 bdwidth 898
 bdheight 946
}
BackdropNode {
 inputs 0
 name BackdropNode30
 tile_color 0x880000ff
 label <center>WRITE
 note_font "Verdana Bold"
 note_font_size 60
 selected true
 xpos -4679
 ypos 13242
 bdwidth 946
 bdheight 878
}
BackdropNode {
 inputs 0
 name BackdropNode26
 tile_color 0xc0c0cff
 label <center>DASGRAIN
 note_font "Verdana Bold"
 note_font_size 42
 selected true
 xpos -4188
 ypos 12482
 bdwidth 312
 bdheight 320
 z_order 1
}
BackdropNode {
 inputs 0
 name BackdropNode27
 tile_color 0xff
 label <center>CLEANER
 note_font "Verdana Bold"
 note_font_size 42
 selected true
 xpos -4188
 ypos 12818
 bdwidth 312
 bdheight 320
 z_order 1
}
BackdropNode {
 inputs 0
 name BackdropNode28
 tile_color 0xc0c0cff
 label <center>HELPER
 note_font "Verdana Bold"
 note_font_size 42
 selected true
 xpos -4526
 ypos 12789
 bdwidth 322
 bdheight 180
 z_order 1
}
BackdropNode {
 inputs 0
 name BackdropNode29
 tile_color 0xc5710fff
 label <center>PLATE/DEGRAIN
 note_font "Verdana Bold"
 note_font_size 42
 selected true
 xpos -4600
 ypos 12355
 bdwidth 401
 bdheight 366
 z_order 1
}
push $cut_paste_input
NoOp {
 name fc_Doppelganger1
 tile_color 0x349739ff
 label "\n\[knob Name]\n\n-"
 note_font "Verdana Bold"
 note_font_size 15
 note_font_color 0x94dcfeff
 selected true
 xpos 620
 ypos 1130
 hide_input true
 addUserKnob {20 TG}
 addUserKnob {26 ""}
 addUserKnob {26 Divider l "<font color=\"lightblue\">Name" -STARTLINE}
 addUserKnob {1 Name l "" t "Type the name of the node you want to connect to in here" +STARTLINE}
 Name CLEAN
 addUserKnob {22 Connect l "<font color=\"lightblue\">Connect" -STARTLINE T "THIS = nuke.thisNode()\nPARENT = THIS\['Name'].getValue()\nE = nuke.exists(PARENT)\n\nif E == True:\n    v = nuke.toNode(PARENT)\n    THIS.setInput(0,v)\n    firstInput = THIS.input(0) \n    colour = firstInput\['tile_color'].getValue()\n    if firstInput is not None:\n        THIS\['tile_color'].setValue(int(colour)) \n    else: \n        pass\n    \nelse:\n    pass\n    nuke.message('There is no node named that')\n    \n\nnukescripts.clear_selection_recursive() \n\n\n"}
 addUserKnob {26 ""}
 addUserKnob {22 Find l "<font color=\"lightblue\">Find Connected" t "This will show you the node Doppelganger is connected to" -STARTLINE T "THIS = nuke.thisNode()\nPARENT = THIS.knob('Name').getValue()\nE = nuke.exists(PARENT)\n\nif E == True:\n    v = nuke.toNode(PARENT)\n    nuke.zoom( 2, \[ v.xpos(), v.ypos() ])\nelse:\n    pass\n    nuke.message('Cannot find that node')\n    \n\nnukescripts.clear_selection_recursive() \n\n"}
 addUserKnob {22 ConnectAll l "<font color=\"lightblue\">Connect all Doppelgangers" t "This will connect all Doppelgangers in your script. Handy if you have pasted a large script" -STARTLINE T "for s in nuke.allNodes():\n    classTypes = \['NoOp']\n    for n in classTypes:\n        if n in s.Class():\n            try:\n                s\['Connect'].execute()\n            except:\n                pass"}
 addUserKnob {26 ""}
 addUserKnob {20 Help}
 addUserKnob {26 ""}
 addUserKnob {26 Tip l :?: T "Doppelganger acts as a bridge between your Read nodes and your script\n\nUse this instead of duplicating a camera or geo or a plate over and over\n\nJust type in the name of the node and press connect\n\nAs a tip, add a NoOp underneath your Plate and call it 'Plate'. This will then make it easier to remember\n\nAny questions contact Thomas Greenhalgh\ntomgreenhalgh125@gmail.com\n"}
 addUserKnob {26 ""}
}
Dot {
 name Dot16
 selected true
 xpos 654
 ypos 1314
}
IBKColourV3 {
 name IBKColourV3_1
 selected true
 xpos 620
 ypos 1413
 erode 2
 multi 1
}
IBKColourV3 {
 name IBKColourV3_2
 selected true
 xpos 620
 ypos 1479
 off {{parent.IBKColourV3_1.off} {parent.IBKColourV3_1.off} {parent.IBKColourV3_1.off}}
 mult {{parent.IBKColourV3_1.mult} {parent.IBKColourV3_1.mult} {parent.IBKColourV3_1.mult}}
 erode 1
 multi 2
}
IBKColourV3 {
 name IBKColourV3_3
 selected true
 xpos 620
 ypos 1503
 off {{parent.IBKColourV3_1.off} {parent.IBKColourV3_1.off} {parent.IBKColourV3_1.off}}
 mult {{parent.IBKColourV3_1.mult} {parent.IBKColourV3_1.mult} {parent.IBKColourV3_1.mult}}
 erode 1
 multi 4
}
IBKColourV3 {
 name IBKColourV3_4
 selected true
 xpos 620
 ypos 1527
 off {{parent.IBKColourV3_1.off} {parent.IBKColourV3_1.off} {parent.IBKColourV3_1.off}}
 mult {{parent.IBKColourV3_1.mult} {parent.IBKColourV3_1.mult} {parent.IBKColourV3_1.mult}}
 erode 1
 multi 8
}
IBKColourV3 {
 name IBKColourV3_5
 selected true
 xpos 620
 ypos 1551
 off {{parent.IBKColourV3_1.off} {parent.IBKColourV3_1.off} {parent.IBKColourV3_1.off}}
 mult {{parent.IBKColourV3_1.mult} {parent.IBKColourV3_1.mult} {parent.IBKColourV3_1.mult}}
 erode 1
 multi 16
}
IBKColourV3 {
 name IBKColourV3_6
 selected true
 xpos 620
 ypos 1575
 off {{parent.IBKColourV3_1.off} {parent.IBKColourV3_1.off} {parent.IBKColourV3_1.off}}
 mult {{parent.IBKColourV3_1.mult} {parent.IBKColourV3_1.mult} {parent.IBKColourV3_1.mult}}
 erode 1
 multi 32
}
IBKColourV3 {
 name IBKColourV3_7
 selected true
 xpos 620
 ypos 1599
 off {{parent.IBKColourV3_1.off} {parent.IBKColourV3_1.off} {parent.IBKColourV3_1.off}}
 mult {{parent.IBKColourV3_1.mult} {parent.IBKColourV3_1.mult} {parent.IBKColourV3_1.mult}}
 erode 1
 multi 64
}
IBKColourV3 {
 name IBKColourV3_8
 selected true
 xpos 620
 ypos 1623
 off {{parent.IBKColourV3_1.off} {parent.IBKColourV3_1.off} {parent.IBKColourV3_1.off}}
 mult {{parent.IBKColourV3_1.mult} {parent.IBKColourV3_1.mult} {parent.IBKColourV3_1.mult}}
 erode 1
 multi 128
}
Dot {
 name Dot18
 selected true
 xpos 654
 ypos 1770
}
set Nbaa76400 [stack 0]
Dot {
 name Dot20
 selected true
 xpos 544
 ypos 1770
}
StickyNote {
 inputs 0
 name StickyNote1
 tile_color 0xff
 label PRECOMP
 note_font "Verdana Bold"
 note_font_size 20
 selected true
 xpos 530
 ypos 1738
}
StickyNote {
 inputs 0
 name StickyNote3
 tile_color 0xff
 label "Sample screen colour(s) from fg or create \na cleant plate from the denoise pipe."
 note_font "Verdana Bold"
 note_font_size 15
 selected true
 xpos 178
 ypos 2726
}
NoOp {
 inputs 0
 name fc_Doppelganger2
 tile_color 0x349739ff
 label "\n\[knob Name]\n\n-"
 note_font "Verdana Bold"
 note_font_size 15
 note_font_color 0x94dcfeff
 selected true
 xpos 634
 ypos 2618
 hide_input true
 addUserKnob {20 TG}
 addUserKnob {26 ""}
 addUserKnob {26 Divider l "<font color=\"lightblue\">Name" -STARTLINE}
 addUserKnob {1 Name l "" t "Type the name of the node you want to connect to in here" +STARTLINE}
 Name CLEAN
 addUserKnob {22 Connect l "<font color=\"lightblue\">Connect" -STARTLINE T "THIS = nuke.thisNode()\nPARENT = THIS\['Name'].getValue()\nE = nuke.exists(PARENT)\n\nif E == True:\n    v = nuke.toNode(PARENT)\n    THIS.setInput(0,v)\n    firstInput = THIS.input(0) \n    colour = firstInput\['tile_color'].getValue()\n    if firstInput is not None:\n        THIS\['tile_color'].setValue(int(colour)) \n    else: \n        pass\n    \nelse:\n    pass\n    nuke.message('There is no node named that')\n    \n\nnukescripts.clear_selection_recursive() \n\n\n"}
 addUserKnob {26 ""}
 addUserKnob {22 Find l "<font color=\"lightblue\">Find Connected" t "This will show you the node Doppelganger is connected to" -STARTLINE T "THIS = nuke.thisNode()\nPARENT = THIS.knob('Name').getValue()\nE = nuke.exists(PARENT)\n\nif E == True:\n    v = nuke.toNode(PARENT)\n    nuke.zoom( 2, \[ v.xpos(), v.ypos() ])\nelse:\n    pass\n    nuke.message('Cannot find that node')\n    \n\nnukescripts.clear_selection_recursive() \n\n"}
 addUserKnob {22 ConnectAll l "<font color=\"lightblue\">Connect all Doppelgangers" t "This will connect all Doppelgangers in your script. Handy if you have pasted a large script" -STARTLINE T "for s in nuke.allNodes():\n    classTypes = \['NoOp']\n    for n in classTypes:\n        if n in s.Class():\n            try:\n                s\['Connect'].execute()\n            except:\n                pass"}
 addUserKnob {26 ""}
 addUserKnob {20 Help}
 addUserKnob {26 ""}
 addUserKnob {26 Tip l :?: T "Doppelganger acts as a bridge between your Read nodes and your script\n\nUse this instead of duplicating a camera or geo or a plate over and over\n\nJust type in the name of the node and press connect\n\nAs a tip, add a NoOp underneath your Plate and call it 'Plate'. This will then make it easier to remember\n\nAny questions contact Thomas Greenhalgh\ntomgreenhalgh125@gmail.com\n"}
 addUserKnob {26 ""}
}
Dot {
 name Dot39
 tile_color 0xff0000ff
 label FG
 note_font "Verdana Bold"
 note_font_size 15
 selected true
 xpos 669
 ypos 2788
}
set Nb40ff400 [stack 0]
Dot {
 name Dot34
 tile_color 0xff0000ff
 label SCREEN
 note_font "Verdana Bold"
 note_font_size 15
 selected true
 xpos 339
 ypos 2788
}
Dot {
 name Dot35
 selected true
 xpos 339
 ypos 2908
}
add_layer {screen_colour screen_colour.red screen_colour.green screen_colour.blue screen_colour.alpha}
Shuffle2 {
 fromInput1 {{0} B}
 out1 screen_colour
 fromInput2 {{0} B}
 mappings "4 rgba.red 0 0 screen_colour.red 0 0 rgba.green 0 1 screen_colour.green 0 1 rgba.blue 0 2 screen_colour.blue 0 2 rgba.alpha 0 3 screen_colour.alpha 0 3"
 name Shuffle3
 selected true
 xpos 415
 ypos 2905
}
Dot {
 name Dot36
 selected true
 xpos 449
 ypos 3030
}
push $Nb40ff400
Dot {
 name Dot37
 tile_color 0xff0000ff
 label FG_DENOISE
 note_font "Verdana Bold"
 note_font_size 15
 selected true
 xpos 984
 ypos 2788
}
Dot {
 name Dot38
 selected true
 xpos 984
 ypos 2908
}
add_layer {fg_denoise_plate fg_denoise_plate.red fg_denoise_plate.green fg_denoise_plate.blue fg_denoise_plate.alpha}
Shuffle2 {
 fromInput1 {{0} B}
 out1 fg_denoise_plate
 fromInput2 {{0} B}
 mappings "4 rgba.red 0 0 fg_denoise_plate.red 0 0 rgba.green 0 1 fg_denoise_plate.green 0 1 rgba.blue 0 2 fg_denoise_plate.blue 0 2 rgba.alpha 0 3 fg_denoise_plate.alpha 0 3"
 name Shuffle4
 selected true
 xpos 855
 ypos 2905
}
push $Nb40ff400
Copy {
 inputs 2
 from0 rgba.alpha
 to0 rgba.alpha
 channels fg_denoise_plate
 name Copy4
 selected true
 xpos 635
 ypos 2893
}
Copy {
 inputs 2
 from0 rgba.alpha
 to0 rgba.alpha
 channels screen_colour
 name Copy5
 selected true
 xpos 635
 ypos 3015
}
Dot {
 name Dot40
 selected true
 xpos 669
 ypos 3330
}
set Nbbbb8400 [stack 0]
Dot {
 name Dot24
 selected true
 xpos -666
 ypos 3330
}
set Nc6617800 [stack 0]
Dot {
 name Dot25
 selected true
 xpos -666
 ypos 3642
}
set Na4bc4c00 [stack 0]
Dot {
 name Dot27
 selected true
 xpos -446
 ypos 3642
}
set Na4bc5800 [stack 0]
Group {
 name PxF_KillSpill
 help "Remove red/green/blue spill."
 tile_color 0x733520ff
 selected true
 xpos -480
 ypos 3711
 addUserKnob {20 PxF_KillSpill}
 addUserKnob {4 back_color l screenColor t "Which type of spill to remove." M {red green blue "" "" ""}}
 back_color green
 addUserKnob {7 supp l suppression t "Bias the mix of channels used to cap the 'spill' channel.\nFor example when removing 'green spill':\n0 = green channel is capped by the red channel.\n\n0.5 = green channel is capped by half-mix of red and blue channels.\n\n1 = green channel is capped by the blue channel." R -1 2}
 supp 0.5
 addUserKnob {7 masterMult l limiter t "Gain applied to the 'cap' channel to make the suppression more or less aggressive." R 0 10}
 masterMult 1
 addUserKnob {18 SpillTweak l spillTweak t "Adjust the luminance and color of the spill areas." R -10 10}
 SpillTweak 1
 addUserKnob {6 SpillTweak_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {7 mix t "Dissolve between the original (0) and the full effect (1)."}
 mix 1
 addUserKnob {26 ""}
 addUserKnob {26 Credits l "" t "PxF_KillSpill 2.5.3 - &copy; 2011-2023 - Xavier Bourque - pixelfudger.com \n\nPixelfudger gizmos are free to use for personal and commercial use as long as you leave the credit text intact in the gizmo's knobs and in the source files. " +STARTLINE T "<font size=2>PxF_KillSpill 2.5.3 - &copy; 2011-2023 - </font><a href=\"http://www.xavierbourque.com\"><font color=\"#bbbbbb\" size=2>Xavier Bourque</a></font> - <a href=\"http://www.pixelfudger.com\"><font color=\"#bbbbbb\" size=2>pixelfudger.com</a></font> - <a href=\"http://www.pixelfudger.com/userguides/PxF_KillSpill.html\"><font color=\"#bbbbbb\" size=2>Video Tutorial</a></font>"}
}
 Input {
  inputs 0
  name mask
  xpos -228
  ypos 853
  number 1
 }
 Input {
  inputs 0
  name img
  xpos -496
  ypos -217
 }
 Dot {
  name Dot3
  xpos -462
  ypos -140
 }
set Na4be6800 [stack 0]
 Dot {
  name Dot2
  xpos -689
  ypos 208
 }
 Dot {
  name Dot4
  xpos -729
  ypos 756
 }
set Na4be7000 [stack 0]
push $Na4be6800
 Dot {
  name Dot1
  xpos -156
  ypos 744
 }
push $Na4be6800
push $Na4be6800
 Shuffle {
  red blue
  green blue
  alpha black
  name Blue
  xpos 187
  ypos 28
 }
set Na4be7800 [stack 0]
push $Na4be6800
 Shuffle {
  red green
  blue green
  alpha black
  name Green
  xpos 76
  ypos 26
 }
set Na4be7c00 [stack 0]
push $Na4be6800
 Shuffle {
  green red
  blue red
  alpha black
  name Red
  xpos -17
  ypos 27
 }
set Nbc5b0000 [stack 0]
 Switch {
  inputs 3
  which {{back_color i}}
  name High
  xpos -17
  ypos 132
 }
push $Na4be7c00
push $Nbc5b0000
 Switch {
  inputs 2
  which {{"back_color == 0 ? 1 : back_color == 1 ? 0 : 0" i}}
  name LowA
  xpos 76
  ypos 132
 }
 Multiply {
  value {{"1 - supp" i}}
  name Multiply1
  xpos 76
  ypos 190
 }
push $Na4be7800
push $Na4be7c00
push 0
 Switch {
  inputs 3
  which {{"back_color == 0 ? 2 : back_color == 1 ? 2 : 1" i}}
  name LowB
  xpos 187
  ypos 140
 }
 Multiply {
  value {{supp i}}
  name Multiply2
  xpos 187
  ypos 187
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge1
  xpos 138
  ypos 299
 }
 Multiply {
  value {{masterMult i}}
  name Multiply3
  xpos 138
  ypos 327
 }
 Merge2 {
  inputs 2
  operation min
  name Merge10
  xpos -17
  ypos 371
 }
set Nbcd62000 [stack 0]
 ShuffleCopy {
  inputs 2
  red red
  green green
  name ShuffleBlue
  xpos -426
  ypos 371
 }
push $Na4be6800
push $Nbcd62000
 ShuffleCopy {
  inputs 2
  red red
  blue blue
  name ShuffleGreen
  xpos -526
  ypos 369
 }
push $Na4be6800
push $Nbcd62000
 ShuffleCopy {
  inputs 2
  green green
  blue blue
  name ShuffleRed
  xpos -630
  ypos 369
 }
 Switch {
  inputs 3
  which {{back_color i}}
  name Switch1
  xpos -526
  ypos 424
 }
set Nbcd63000 [stack 0]
push $Na4be6800
push $Nbcd63000
 Merge2 {
  inputs 2
  operation minus
  name Merge9
  xpos -338
  ypos 547
 }
 Saturation {
  saturation 0
  name Saturation1
  xpos -338
  ypos 586
 }
 ColorCorrect {
  gain {{SpillTweak.r i} {SpillTweak.g i} {SpillTweak.b i} {1 i}}
  name ColorCorrect1
  xpos -338
  ypos 655
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge11
  xpos -526
  ypos 655
 }
 ShuffleCopy {
  inputs 2
  name ShuffleCopy1
  xpos -526
  ypos 740
 }
 Keymix {
  inputs 3
  invertMask true
  bbox A
  name Keymix1
  xpos -526
  ypos 875
  disable {{"\[exists parent.input1] ? 0 : 1" i}}
 }
push $Na4be7000
 Dissolve {
  inputs 2
  which {{parent.mix}}
  name Dissolve1
  xpos -526
  ypos 946
 }
 Output {
  name Output1
  xpos -525
  ypos 1036
 }
end_group
Dot {
 name Dot26
 selected true
 xpos -446
 ypos 3764
}
push $Na4bc5800
Dot {
 name Dot28
 selected true
 xpos -295
 ypos 3642
}
Merge2 {
 inputs 2
 operation difference
 name Merge1
 selected true
 xpos -329
 ypos 3761
}
Shuffle {
 alpha blue
 name Shuffle1
 selected true
 xpos -329
 ypos 3831
}
Clamp {
 name Clamp1
 selected true
 xpos -329
 ypos 3915
}
Dot {
 name Dot41
 selected true
 xpos -295
 ypos 5898
}
push $Na4bc4c00
DespillMadness {
 name DespillMadness1
 note_font "Bitstream Vera Sans"
 selected true
 xpos -700
 ypos 3951
 maskChannel -rgba.alpha
}
add_layer {despillMask despillMask.alpha}
Copy {
 inputs 2
 from0 rgba.alpha
 to0 despillMask.alpha
 name Copy2
 selected true
 xpos -700
 ypos 5889
}
Remove {
 operation keep
 channels rgb
 channels2 despillMask
 name Remove1
 selected true
 xpos -700
 ypos 5985
}
Dot {
 name Dot42
 selected true
 xpos -666
 ypos 6147
}
set Nb4936c00 [stack 0]
Dot {
 name Dot43
 selected true
 xpos -776
 ypos 6147
}
StickyNote {
 inputs 0
 name StickyNote2
 tile_color 0xff
 label PRECOMP
 note_font "Verdana Bold"
 note_font_size 20
 selected true
 xpos -790
 ypos 6115
}
Dot {
 inputs 0
 name Dot19
 selected true
 xpos 544
 ypos 2001
}
push $Nbaa76400
Switch {
 inputs 2
 name Switch1
 selected true
 xpos 620
 ypos 1998
}
Dot {
 name Dot22
 selected true
 xpos 654
 ypos 2178
}
NoOp {
 name SCREENCLEAN
 tile_color 0x44b800ff
 label "\n<<       >>"
 note_font "Verdana Bold"
 note_font_size 12
 selected true
 xpos 620
 ypos 2232
}
set Nbaa77c00 [stack 0]
NoOp {
 name fc_Doppelganger3
 tile_color 0x44b800ff
 label "\n\[knob Name]\n\n-"
 note_font "Verdana Bold"
 note_font_size 15
 note_font_color 0x94dcfeff
 selected true
 xpos 2160
 ypos 3530
 hide_input true
 addUserKnob {20 TG}
 addUserKnob {26 ""}
 addUserKnob {26 Divider l "<font color=\"lightblue\">Name" -STARTLINE}
 addUserKnob {1 Name l "" t "Type the name of the node you want to connect to in here" +STARTLINE}
 Name SCREENCLEAN
 addUserKnob {22 Connect l "<font color=\"lightblue\">Connect" -STARTLINE T "THIS = nuke.thisNode()\nPARENT = THIS\['Name'].getValue()\nE = nuke.exists(PARENT)\n\nif E == True:\n    v = nuke.toNode(PARENT)\n    THIS.setInput(0,v)\n    firstInput = THIS.input(0) \n    colour = firstInput\['tile_color'].getValue()\n    if firstInput is not None:\n        THIS\['tile_color'].setValue(int(colour)) \n    else: \n        pass\n    \nelse:\n    pass\n    nuke.message('There is no node named that')\n    \n\nnukescripts.clear_selection_recursive() \n\n\n"}
 addUserKnob {26 ""}
 addUserKnob {22 Find l "<font color=\"lightblue\">Find Connected" t "This will show you the node Doppelganger is connected to" -STARTLINE T "THIS = nuke.thisNode()\nPARENT = THIS.knob('Name').getValue()\nE = nuke.exists(PARENT)\n\nif E == True:\n    v = nuke.toNode(PARENT)\n    nuke.zoom( 2, \[ v.xpos(), v.ypos() ])\nelse:\n    pass\n    nuke.message('Cannot find that node')\n    \n\nnukescripts.clear_selection_recursive() \n\n"}
 addUserKnob {22 ConnectAll l "<font color=\"lightblue\">Connect all Doppelgangers" t "This will connect all Doppelgangers in your script. Handy if you have pasted a large script" -STARTLINE T "for s in nuke.allNodes():\n    classTypes = \['NoOp']\n    for n in classTypes:\n        if n in s.Class():\n            try:\n                s\['Connect'].execute()\n            except:\n                pass"}
 addUserKnob {26 ""}
 addUserKnob {20 Help}
 addUserKnob {26 ""}
 addUserKnob {26 Tip l :?: T "Doppelganger acts as a bridge between your Read nodes and your script\n\nUse this instead of duplicating a camera or geo or a plate over and over\n\nJust type in the name of the node and press connect\n\nAs a tip, add a NoOp underneath your Plate and call it 'Plate'. This will then make it easier to remember\n\nAny questions contact Thomas Greenhalgh\ntomgreenhalgh125@gmail.com\n"}
 addUserKnob {26 ""}
}
Dot {
 name Dot50
 selected true
 xpos 2194
 ypos 3738
}
push $Nbbbb8400
Dot {
 name Dot49
 selected true
 xpos 1644
 ypos 3330
}
set Nef64cc00 [stack 0]
IBKGizmoV3 {
 inputs 2
 name IBKGizmoV3_1
 xpos 1610
 ypos 3735
}
Grade {
 channels alpha
 blackpoint 0.5
 whitepoint 0.9
 name Grade1
 selected true
 xpos 1610
 ypos 3855
}
Group {
 name Alpha_Chocker1
 tile_color 0xffc300ff
 selected true
 xpos 1610
 ypos 4023
 addUserKnob {20 User}
 addUserKnob {7 balance l "Edge Balance" R -1 1}
 addUserKnob {7 choke l "Edge Choke"}
 addUserKnob {7 smoothing l "Edge Smoothing" R 0 100}
 smoothing 2.5
 addUserKnob {7 blur l "Edge Blur" R 0 100}
 blur 9.5
 addUserKnob {7 expand l "Edge Contract / Expand" R -100 100}
 expand 5
}
 Input {
  inputs 0
  name Mask
  xpos -480
  ypos -9
  number 1
 }
 Shuffle {
  inputs 0
  alpha white
  name Shuffle2
  xpos -590
  ypos 111
 }
 ChannelMerge {
  inputs 2
  name ChannelMerge1
  xpos -480
  ypos 99
 }
 Input {
  inputs 0
  name Source
  xpos -208
  ypos -441
 }
 Dot {
  name Dot1
  xpos -174
  ypos -342
 }
set Nb3ce2400 [stack 0]
 Remove {
  operation keep
  channels alpha
  name Remove1
  xpos -208
  ypos -303
 }
 Blur {
  size {{parent.smoothing}}
  quality 5
  name Blur1
  xpos -208
  ypos -255
 }
 Grade {
  channels alpha
  blackpoint {{parent.choke*.49+parent.balance*.49}}
  whitepoint {{1-parent.choke*.49+parent.balance*.49}}
  name Grade1
  xpos -208
  ypos -201
 }
 FilterErode {
  size {{parent.expand}}
  name FilterErode1
  xpos -208
  ypos -145
 }
 Clamp {
  name Clamp1
  xpos -208
  ypos -87
 }
 Blur {
  size {{parent.blur}}
  quality 5
  name Blur2
  xpos -208
  ypos -39
 }
push $Nb3ce2400
 Dot {
  name Dot2
  xpos -6
  ypos -342
 }
 Dot {
  name Dot3
  xpos -6
  ypos 30
 }
set Nbb9b8400 [stack 0]
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos -208
  ypos 21
 }
set Nbb9b8800 [stack 0]
push $Nbb9b8400
 Dot {
  name Dot4
  xpos -6
  ypos 114
 }
 Keymix {
  inputs 3
  name Keymix1
  xpos -208
  ypos 105
 }
 Output {
  name Output1
  xpos -208
  ypos 159
 }
push $Nbb9b8800
 Viewer {
  frame_range 1-100
  name Viewer1
  xpos -391
  ypos -321
 }
end_group
Shuffle {
 red alpha
 green alpha
 blue alpha
 name Shuffle2
 selected true
 xpos 1610
 ypos 4239
}
Grade {
 channels rgba
 blackpoint 0.1
 name Grade2
 selected true
 xpos 1610
 ypos 4383
}
NoOp {
 name COREKEY
 tile_color 0xffffffff
 label "\n<<       >>"
 note_font "Verdana Bold"
 note_font_size 12
 selected true
 xpos 1610
 ypos 4536
}
Shuffle {
 in alpha
 name Shuffle5
 selected true
 xpos 1610
 ypos 6231
}
Dot {
 name Dot51
 selected true
 xpos 1644
 ypos 6532
}
set Nb9a91000 [stack 0]
Dot {
 name Dot53
 selected true
 xpos 1644
 ypos 7026
}
Dot {
 inputs 0
 name Dot58
 selected true
 xpos 3294
 ypos 6417
}
push $Nef64cc00
Dot {
 name Dot59
 selected true
 xpos 3404
 ypos 3330
}
Clamp {
 name Clamp3
 selected true
 xpos 3370
 ypos 5937
}
Shuffle {
 in alpha
 green red
 blue red
 alpha red
 name Shuffle6
 selected true
 xpos 3370
 ypos 5973
}
Remove {
 operation keep
 channels rgba
 name Remove2
 selected true
 xpos 3370
 ypos 6039
}
Dot {
 name Dot52
 selected true
 xpos 3404
 ypos 6186
}
set N78da800 [stack 0]
Switch {
 inputs 2
 name Switch4
 selected true
 xpos 3370
 ypos 6414
}
NoOp {
 name SOFTKEY
 tile_color 0xffffffff
 label "\n<<       >>"
 note_font "Verdana Bold"
 note_font_size 12
 selected true
 xpos 3370
 ypos 6471
}
Merge2 {
 inputs 2
 operation screen
 name Merge2
 selected true
 xpos 3370
 ypos 7018
}
Clamp {
 name Clamp2
 selected true
 xpos 3370
 ypos 7137
}
Dot {
 name Dot54
 selected true
 xpos 3404
 ypos 7323
}
set N78b6000 [stack 0]
Dot {
 name Dot55
 selected true
 xpos 3294
 ypos 7323
}
StickyNote {
 inputs 0
 name StickyNote4
 tile_color 0xff
 label PRECOMP
 note_font "Verdana Bold"
 note_font_size 20
 selected true
 xpos 3280
 ypos 7291
}
Dot {
 inputs 0
 name Dot56
 selected true
 xpos 3294
 ypos 7554
}
push $N78b6000
NoOp {
 name ALPHA
 tile_color 0xffffffff
 label "\n<<       >>"
 note_font "Verdana Bold"
 note_font_size 12
 selected true
 xpos 3370
 ypos 7608
}
set N78b7c00 [stack 0]
Switch {
 inputs 2
 name Switch3
 selected true
 xpos 3370
 ypos 7551
}
push $N78da800
Dot {
 name Dot57
 selected true
 xpos 3294
 ypos 6186
}
StickyNote {
 inputs 0
 name StickyNote5
 tile_color 0xff
 label PRECOMP
 note_font "Verdana Bold"
 note_font_size 20
 selected true
 xpos 3280
 ypos 6154
}
push $N78b7c00
Dot {
 name Dot60
 selected true
 xpos 3404
 ypos 7818
}
push $Nc6617800
Dot {
 name Dot23
 selected true
 xpos -1984
 ypos 3330
}
Dot {
 name Dot29
 selected true
 xpos -1984
 ypos 3522
}
set Nbbbb8c00 [stack 0]
Dot {
 name Dot30
 selected true
 xpos -1764
 ypos 3522
}
Dot {
 name Dot31
 selected true
 xpos -1764
 ypos 3858
}
set Nbbbb9400 [stack 0]
Dot {
 name Dot32
 selected true
 xpos -1764
 ypos 4074
}
push $Nbbbb8c00
Dot {
 name Dot33
 tile_color 0xff
 label DESPILL
 note_font "Verdana Bold"
 note_font_size 15
 selected true
 xpos -1984
 ypos 3618
}
add_layer {fg_plate fg_plate.red fg_plate.green fg_plate.blue fg_plate.alpha}
Group {
 name fc_Despill
 selected true
 xpos -2018
 ypos 3735
 addUserKnob {20 User}
 addUserKnob {18 despill_colour l "despill colour" R 0 4}
 despill_colour {0 0 1}
 addUserKnob {6 despill_colour_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 _1 l "" +STARTLINE}
 addUserKnob {18 despill_bias l "despill bias"}
 despill_bias {0.5 0.5 0.5}
 addUserKnob {6 despill_bias_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {7 balance t "The Balance control can be used to adjust the weighting of secondary channels in the despill operation.\n\nAll common despill algorithms can be achieved with values on this slider.\n\naverage = 0.5\n\nThis control behaves in the same way as the keylight screen balance"}
 balance 0.9
 addUserKnob {7 limit t "Adjust the colour range affected by despill, a limit of less than 1 will affect a greated range, whilst a limit of more than 1 will reduce the range.\n\nThis control behaves in same way as the DespillMadness fine tune." R 0.5 1.5}
 limit 0.75
 addUserKnob {7 strength t "A multiply control to adjust the mix or strength of the despill applied.\n\nThis control behaves in the same way as the keylight screen gain." R 0 2}
 strength 1
 addUserKnob {26 _2 l "" +STARTLINE}
 addUserKnob {18 restore_luminance l luminance t "When set to 1, this control is restoring the luminance liost in the despill. THis can also be thought of as a target coliur for your screen and manipulating the colour channel will allow you to get a spill colour and luminance suitable for your shot." R -1 2}
 restore_luminance {2.9 1.9 2.1}
 addUserKnob {6 restore_luminance_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 restore_luminance_panelDropped true
 addUserKnob {4 luminance_math l "" +STARTLINE M {"Rec 709" "Ccir 601" Average Maximum ""}}
 addUserKnob {26 _3 l "" +STARTLINE}
 addUserKnob {6 black_clamp l "black clamp" +STARTLINE}
 addUserKnob {26 _4 l "" +STARTLINE}
 addUserKnob {41 in l "in 1" T Shuffle2.in}
 addUserKnob {41 in_2 l "in 1" T Shuffle5.in}
 addUserKnob {41 in_1 l "in 1" T Shuffle9.in}
 addUserKnob {41 in_4 l "in 1" T Shuffle13.in}
 addUserKnob {41 in_3 l "in 1" T Shuffle17.in}
 addUserKnob {41 in_5 l "in 1" T Shuffle21.in}
}
 StickyNote {
  inputs 0
  name StickyNote1
  label "StrongestColour.which == 0 ? -parent.despill_colour.r*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.r*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.r*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.g*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.g*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.g*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.b*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.b*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.b*clamp(1/blue_value,0,1000000):\n0"
  xpos -2040
  ypos 561
 }
 StickyNote {
  inputs 0
  name StickyNote2
  label "StrongestColour.which == 0 ? -parent.despill_colour.r*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.r*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.r*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.g*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.g*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.g*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.b*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.b*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.b*clamp(1/blue_value,0,1000000):\n0"
  xpos -3662
  ypos 552
 }
 StickyNote {
  inputs 0
  name StickyNote3
  label "StrongestColour.which == 0 ? -parent.despill_colour.r*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.r*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.r*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.g*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.g*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.g*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.b*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.b*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.b*clamp(1/blue_value,0,1000000):\n0"
  xpos -5312
  ypos 553
 }
 Input {
  inputs 0
  name Input1
  xpos -208
  ypos -465
 }
 Dot {
  name Dot1
  xpos -174
  ypos -222
 }
set Nb49c9000 [stack 0]
 Dot {
  name Dot2
  xpos -1876
  ypos -219
 }
set Nb49c9400 [stack 0]
 Dot {
  name Dot18
  xpos -3498
  ypos -228
 }
set Nb49c9800 [stack 0]
 Dot {
  name Dot33
  xpos -5148
  ypos -227
 }
set Nb49c9c00 [stack 0]
 Dot {
  name Dot47
  xpos -6686
  ypos -227
 }
set Nb49e0000 [stack 0]
 Dot {
  name Dot63
  xpos -8258
  ypos -227
 }
set Nb49e0400 [stack 0]
 Dot {
  name Dot78
  xpos -9796
  ypos -227
 }
 Shuffle {
  name Shuffle21
  label "\[value in]"
  xpos -9830
  ypos -39
 }
 Dot {
  name Dot79
  xpos -9796
  ypos 106
 }
set Nb49e1000 [stack 0]
 Dot {
  name Dot80
  xpos -9576
  ypos 106
 }
set Nb49e1400 [stack 0]
 Dot {
  name Dot81
  xpos -8696
  ypos 106
 }
push $Nb49e1400
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  name bias5
  xpos -9610
  ypos 223
 }
 Dot {
  name Dot82
  xpos -9576
  ypos 349
 }
set Nb3aa4000 [stack 0]
 Dot {
  name Dot83
  xpos -9356
  ypos 349
 }
 Expression {
  temp_name0 redweight
  temp_expr0 ((b*parent.balance)+(g*(1-parent.balance)))
  temp_name1 greenweight
  temp_expr1 ((b*parent.balance)+(r*(1-parent.balance)))
  temp_name2 blueweight
  temp_expr2 ((g*parent.balance)+(r*(1-parent.balance)))
  expr0 clamp(r-(redweight*parent.limit),0,1000000)
  expr1 clamp(r-(greenweight*parent.limit),0,1000000)
  expr2 clamp(r-(blueweight*parent.limit),0,1000000)
  name ClampedKey5
  xpos -9390
  ypos 391
 }
 Dot {
  name Dot84
  xpos -9356
  ypos 443
 }
set Nb3aa4c00 [stack 0]
 Dot {
  name Dot85
  xpos -9024
  ypos 443
 }
set Nb3aa5000 [stack 0]
 Shuffle {
  red blue
  green blue
  alpha blue
  name Shuffle22
  label "\[value in]"
  xpos -8950
  ypos 529
 }
push $Nb3aa5000
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle23
  label "\[value in]"
  xpos -9060
  ypos 532
 }
push $Nb3aa5000
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle24
  label "\[value in]"
  xpos -9170
  ypos 532
 }
 Switch {
  inputs 3
  which {{StrongestColour.which}}
  name Switch6
  xpos -9060
  ypos 610
 }
 Dot {
  name Dot86
  xpos -9026
  ypos 733
 }
push $Nb3aa4c00
 Grade {
  add {{parent.StrongestColour.red} {parent.StrongestColour.green} {parent.StrongestColour.blue} 0}
  name KeylightOffset5
  xpos -9390
  ypos 559
  addUserKnob {20 User}
  addUserKnob {7 red_value}
  red_value {{parent.despill_colour.r-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.g*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 green_value}
  green_value {{parent.despill_colour.g-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 blue_value}
  blue_value {{parent.despill_colour.b-(((parent.despill_colour.g*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge21
  xpos -9390
  ypos 727
 }
 Dot {
  name Dot87
  xpos -9356
  ypos 802
 }
push $Nb3aa4000
 Merge2 {
  inputs 2
  operation plus
  name Merge22
  xpos -9610
  ypos 799
 }
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  reverse true
  name Grade6
  xpos -9610
  ypos 871
 }
 Dot {
  name Dot88
  xpos -9576
  ypos 970
 }
push $Nb49e1000
 MergeExpression {
  inputs 2
  expr0 Br+(Ar-Br)*parent.strength
  expr1 Bg+(Ag-Bg)*parent.strength
  expr2 Bb+(Ab-Bb)*parent.strength
  name MergeExpression6
  xpos -9830
  ypos 967
 }
 Dot {
  name Dot89
  xpos -9796
  ypos 1138
 }
set Nbb016400 [stack 0]
 Merge2 {
  inputs 2
  operation minus
  name Merge23
  xpos -8730
  ypos 1135
 }
 Dot {
  name Dot90
  xpos -8696
  ypos 1186
 }
set Nbb016c00 [stack 0]
 Saturation {
  mode Maximum
  name Saturation21
  xpos -8510
  ypos 1231
 }
push $Nbb016c00
 Saturation {
  mode Average
  name Saturation22
  xpos -8620
  ypos 1231
 }
push $Nbb016c00
 Saturation {
  mode "Ccir 601"
  name Saturation23
  xpos -8840
  ypos 1231
 }
push $Nbb016c00
 Saturation {
  name Saturation24
  xpos -8950
  ypos 1231
 }
 Switch {
  inputs 4
  which {{parent.luminance_math}}
  name SwitchMaths5
  xpos -8730
  ypos 1327
 }
 Multiply {
  value {{parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance}}
  name Multiply6
  xpos -8730
  ypos 1393
 }
 Dot {
  name Dot91
  xpos -8696
  ypos 1474
 }
push $Nbb016400
 Merge2 {
  inputs 2
  operation plus
  name Merge24
  xpos -9830
  ypos 1471
 }
 Clamp {
  name Clamp6
  xpos -9830
  ypos 1633
  disable {{!parent.black_clamp}}
 }
 Dot {
  name Dot92
  xpos -9796
  ypos 2634
 }
push $Nb49e0400
 Shuffle {
  name Shuffle17
  label "\[value in]"
  xpos -8292
  ypos -39
 }
 Dot {
  name Dot64
  xpos -8258
  ypos 106
 }
set N8e8fc00 [stack 0]
 Dot {
  name Dot65
  xpos -8038
  ypos 106
 }
set N10022000 [stack 0]
 Dot {
  name Dot66
  xpos -7158
  ypos 106
 }
push $N10022000
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  name bias4
  xpos -8072
  ypos 223
 }
 Dot {
  name Dot67
  xpos -8038
  ypos 349
 }
set N10022c00 [stack 0]
 Dot {
  name Dot68
  xpos -7818
  ypos 349
 }
 Expression {
  temp_name0 redweight
  temp_expr0 ((b*parent.balance)+(g*(1-parent.balance)))
  temp_name1 greenweight
  temp_expr1 ((b*parent.balance)+(r*(1-parent.balance)))
  temp_name2 blueweight
  temp_expr2 ((g*parent.balance)+(r*(1-parent.balance)))
  expr0 clamp(r-(redweight*parent.limit),0,1000000)
  expr1 clamp(r-(greenweight*parent.limit),0,1000000)
  expr2 clamp(r-(blueweight*parent.limit),0,1000000)
  name ClampedKey4
  xpos -7852
  ypos 391
 }
 Dot {
  name Dot69
  xpos -7818
  ypos 443
 }
set N10023800 [stack 0]
 Dot {
  name Dot70
  xpos -7486
  ypos 443
 }
set N10023c00 [stack 0]
 Shuffle {
  red blue
  green blue
  alpha blue
  name Shuffle18
  label "\[value in]"
  xpos -7412
  ypos 529
 }
push $N10023c00
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle19
  label "\[value in]"
  xpos -7522
  ypos 532
 }
push $N10023c00
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle20
  label "\[value in]"
  xpos -7632
  ypos 532
 }
 Switch {
  inputs 3
  which {{StrongestColour.which}}
  name Switch5
  xpos -7522
  ypos 610
 }
 Dot {
  name Dot71
  xpos -7488
  ypos 733
 }
push $N10023800
 Grade {
  add {{parent.StrongestColour.red} {parent.StrongestColour.green} {parent.StrongestColour.blue} 0}
  name KeylightOffset4
  xpos -7852
  ypos 559
  addUserKnob {20 User}
  addUserKnob {7 red_value}
  red_value {{parent.despill_colour.r-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.g*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 green_value}
  green_value {{parent.despill_colour.g-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 blue_value}
  blue_value {{parent.despill_colour.b-(((parent.despill_colour.g*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge17
  xpos -7852
  ypos 727
 }
 Dot {
  name Dot72
  xpos -7818
  ypos 802
 }
push $N10022c00
 Merge2 {
  inputs 2
  operation plus
  name Merge18
  xpos -8072
  ypos 799
 }
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  reverse true
  name Grade5
  xpos -8072
  ypos 871
 }
 Dot {
  name Dot73
  xpos -8038
  ypos 970
 }
push $N8e8fc00
 MergeExpression {
  inputs 2
  expr0 Br+(Ar-Br)*parent.strength
  expr1 Bg+(Ag-Bg)*parent.strength
  expr2 Bb+(Ab-Bb)*parent.strength
  name MergeExpression5
  xpos -8292
  ypos 967
 }
 Dot {
  name Dot74
  xpos -8258
  ypos 1138
 }
set Nb8d39000 [stack 0]
 Merge2 {
  inputs 2
  operation minus
  name Merge19
  xpos -7192
  ypos 1135
 }
 Dot {
  name Dot75
  xpos -7158
  ypos 1186
 }
set Nb8d39800 [stack 0]
 Saturation {
  mode Maximum
  name Saturation17
  xpos -6972
  ypos 1231
 }
push $Nb8d39800
 Saturation {
  mode Average
  name Saturation18
  xpos -7082
  ypos 1231
 }
push $Nb8d39800
 Saturation {
  mode "Ccir 601"
  name Saturation19
  xpos -7302
  ypos 1231
 }
push $Nb8d39800
 Saturation {
  name Saturation20
  xpos -7412
  ypos 1231
 }
 Switch {
  inputs 4
  which {{parent.luminance_math}}
  name SwitchMaths4
  xpos -7192
  ypos 1327
 }
 Multiply {
  value {{parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance}}
  name Multiply5
  xpos -7192
  ypos 1393
 }
 Dot {
  name Dot76
  xpos -7158
  ypos 1474
 }
push $Nb8d39000
 Merge2 {
  inputs 2
  operation plus
  name Merge20
  xpos -8292
  ypos 1471
 }
 Clamp {
  name Clamp5
  xpos -8292
  ypos 1633
  disable {{!parent.black_clamp}}
 }
 Dot {
  name Dot77
  xpos -8256
  ypos 2418
 }
push $Nb49e0000
 Shuffle {
  in screen_colour
  name Shuffle13
  label "\[value in]"
  xpos -6720
  ypos -39
 }
 Dot {
  name Dot49
  xpos -6686
  ypos 106
 }
set N7858800 [stack 0]
 Dot {
  name Dot50
  xpos -6466
  ypos 106
 }
set N7858c00 [stack 0]
 Dot {
  name Dot51
  xpos -5586
  ypos 106
 }
push $N7858c00
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  name bias3
  xpos -6500
  ypos 223
 }
 Dot {
  name Dot52
  xpos -6466
  ypos 349
 }
set N7859800 [stack 0]
 Dot {
  name Dot53
  xpos -6246
  ypos 349
 }
 Expression {
  temp_name0 redweight
  temp_expr0 ((b*parent.balance)+(g*(1-parent.balance)))
  temp_name1 greenweight
  temp_expr1 ((b*parent.balance)+(r*(1-parent.balance)))
  temp_name2 blueweight
  temp_expr2 ((g*parent.balance)+(r*(1-parent.balance)))
  expr0 clamp(r-(redweight*parent.limit),0,1000000)
  expr1 clamp(r-(greenweight*parent.limit),0,1000000)
  expr2 clamp(r-(blueweight*parent.limit),0,1000000)
  name ClampedKey3
  xpos -6280
  ypos 391
 }
 Dot {
  name Dot54
  xpos -6246
  ypos 443
 }
set N7878400 [stack 0]
 Dot {
  name Dot55
  xpos -5914
  ypos 443
 }
set N7878800 [stack 0]
 Shuffle {
  red blue
  green blue
  alpha blue
  name Shuffle14
  label "\[value in]"
  xpos -5840
  ypos 529
 }
push $N7878800
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle15
  label "\[value in]"
  xpos -5950
  ypos 532
 }
push $N7878800
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle16
  label "\[value in]"
  xpos -6060
  ypos 532
 }
 Switch {
  inputs 3
  which {{StrongestColour.which}}
  name Switch4
  xpos -5950
  ypos 610
 }
 Dot {
  name Dot56
  xpos -5916
  ypos 733
 }
push $N7878400
 Grade {
  add {{parent.StrongestColour.red} {parent.StrongestColour.green} {parent.StrongestColour.blue} 0}
  name KeylightOffset3
  xpos -6280
  ypos 559
  addUserKnob {20 User}
  addUserKnob {7 red_value}
  red_value {{parent.despill_colour.r-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.g*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 green_value}
  green_value {{parent.despill_colour.g-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 blue_value}
  blue_value {{parent.despill_colour.b-(((parent.despill_colour.g*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge13
  xpos -6280
  ypos 727
 }
 Dot {
  name Dot57
  xpos -6246
  ypos 802
 }
push $N7859800
 Merge2 {
  inputs 2
  operation plus
  name Merge14
  xpos -6500
  ypos 799
 }
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  reverse true
  name Grade4
  xpos -6500
  ypos 871
 }
 Dot {
  name Dot58
  xpos -6466
  ypos 970
 }
push $N7858800
 MergeExpression {
  inputs 2
  expr0 Br+(Ar-Br)*parent.strength
  expr1 Bg+(Ag-Bg)*parent.strength
  expr2 Bb+(Ab-Bb)*parent.strength
  name MergeExpression4
  xpos -6720
  ypos 967
 }
 Dot {
  name Dot59
  xpos -6686
  ypos 1138
 }
set Nb4c39c00 [stack 0]
 Merge2 {
  inputs 2
  operation minus
  name Merge15
  xpos -5620
  ypos 1135
 }
 Dot {
  name Dot60
  xpos -5586
  ypos 1186
 }
set Nb44bc400 [stack 0]
 Saturation {
  mode Maximum
  name Saturation13
  xpos -5400
  ypos 1231
 }
push $Nb44bc400
 Saturation {
  mode Average
  name Saturation14
  xpos -5510
  ypos 1231
 }
push $Nb44bc400
 Saturation {
  mode "Ccir 601"
  name Saturation15
  xpos -5730
  ypos 1231
 }
push $Nb44bc400
 Saturation {
  name Saturation16
  xpos -5840
  ypos 1231
 }
 Switch {
  inputs 4
  which {{parent.luminance_math}}
  name SwitchMaths3
  xpos -5620
  ypos 1327
 }
 Multiply {
  value {{parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance}}
  name Multiply4
  xpos -5620
  ypos 1393
 }
 Dot {
  name Dot61
  xpos -5586
  ypos 1474
 }
push $Nb4c39c00
 Merge2 {
  inputs 2
  operation plus
  name Merge16
  xpos -6720
  ypos 1471
 }
 Clamp {
  name Clamp4
  xpos -6720
  ypos 1633
  disable {{!parent.black_clamp}}
 }
 Dot {
  name Dot62
  xpos -6686
  ypos 2218
 }
push $Nb49c9c00
 Shuffle {
  in fg_denoise_plate
  name Shuffle9
  label "\[value in]"
  xpos -5182
  ypos -39
 }
 Dot {
  name Dot34
  xpos -5148
  ypos 106
 }
set Nbc567400 [stack 0]
 Dot {
  name Dot35
  xpos -4928
  ypos 106
 }
set Nbc567800 [stack 0]
 Dot {
  name Dot36
  xpos -4048
  ypos 106
 }
push $Nbc567800
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  name bias2
  xpos -4962
  ypos 223
 }
 Dot {
  name Dot37
  xpos -4928
  ypos 349
 }
set Nb5082400 [stack 0]
 Dot {
  name Dot38
  xpos -4708
  ypos 349
 }
 Expression {
  temp_name0 redweight
  temp_expr0 ((b*parent.balance)+(g*(1-parent.balance)))
  temp_name1 greenweight
  temp_expr1 ((b*parent.balance)+(r*(1-parent.balance)))
  temp_name2 blueweight
  temp_expr2 ((g*parent.balance)+(r*(1-parent.balance)))
  expr0 clamp(r-(redweight*parent.limit),0,1000000)
  expr1 clamp(r-(greenweight*parent.limit),0,1000000)
  expr2 clamp(r-(blueweight*parent.limit),0,1000000)
  name ClampedKey2
  xpos -4742
  ypos 391
 }
 Dot {
  name Dot39
  xpos -4708
  ypos 443
 }
set Nb5083000 [stack 0]
 Dot {
  name Dot40
  xpos -4376
  ypos 443
 }
set Nb5083400 [stack 0]
 Shuffle {
  red blue
  green blue
  alpha blue
  name Shuffle10
  label "\[value in]"
  xpos -4302
  ypos 529
 }
push $Nb5083400
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle11
  label "\[value in]"
  xpos -4412
  ypos 532
 }
push $Nb5083400
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle12
  label "\[value in]"
  xpos -4522
  ypos 532
 }
 Switch {
  inputs 3
  which {{StrongestColour.which}}
  name Switch3
  xpos -4412
  ypos 610
 }
 Dot {
  name Dot41
  xpos -4378
  ypos 733
 }
push $Nb5083000
 Grade {
  add {{parent.StrongestColour.red} {parent.StrongestColour.green} {parent.StrongestColour.blue} 0}
  name KeylightOffset2
  xpos -4742
  ypos 559
  addUserKnob {20 User}
  addUserKnob {7 red_value}
  red_value {{parent.despill_colour.r-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.g*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 green_value}
  green_value {{parent.despill_colour.g-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 blue_value}
  blue_value {{parent.despill_colour.b-(((parent.despill_colour.g*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge9
  xpos -4742
  ypos 727
 }
 Dot {
  name Dot42
  xpos -4708
  ypos 802
 }
push $Nb5082400
 Merge2 {
  inputs 2
  operation plus
  name Merge10
  xpos -4962
  ypos 799
 }
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  reverse true
  name Grade3
  xpos -4962
  ypos 871
 }
 Dot {
  name Dot43
  xpos -4928
  ypos 970
 }
push $Nbc567400
 MergeExpression {
  inputs 2
  expr0 Br+(Ar-Br)*parent.strength
  expr1 Bg+(Ag-Bg)*parent.strength
  expr2 Bb+(Ab-Bb)*parent.strength
  name MergeExpression3
  xpos -5182
  ypos 967
 }
 Dot {
  name Dot44
  xpos -5148
  ypos 1138
 }
set Nabd90800 [stack 0]
 Merge2 {
  inputs 2
  operation minus
  name Merge11
  xpos -4082
  ypos 1135
 }
 Dot {
  name Dot45
  xpos -4048
  ypos 1186
 }
set Nabd91000 [stack 0]
 Saturation {
  mode Maximum
  name Saturation9
  xpos -3862
  ypos 1231
 }
push $Nabd91000
 Saturation {
  mode Average
  name Saturation10
  xpos -3972
  ypos 1231
 }
push $Nabd91000
 Saturation {
  mode "Ccir 601"
  name Saturation11
  xpos -4192
  ypos 1231
 }
push $Nabd91000
 Saturation {
  name Saturation12
  xpos -4302
  ypos 1231
 }
 Switch {
  inputs 4
  which {{parent.luminance_math}}
  name SwitchMaths2
  xpos -4082
  ypos 1327
 }
 Multiply {
  value {{parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance}}
  name Multiply3
  xpos -4082
  ypos 1393
 }
 Dot {
  name Dot46
  xpos -4048
  ypos 1474
 }
push $Nabd90800
 Merge2 {
  inputs 2
  operation plus
  name Merge12
  xpos -5182
  ypos 1471
 }
 Clamp {
  name Clamp3
  xpos -5182
  ypos 1633
  disable {{!parent.black_clamp}}
 }
 Dot {
  name Dot48
  xpos -5148
  ypos 2026
 }
push $Nb49c9800
 Shuffle {
  in fg_plate
  name Shuffle5
  label "\[value in]"
  xpos -3532
  ypos -41
 }
 Dot {
  name Dot19
  xpos -3498
  ypos 105
 }
set Nb4c9a000 [stack 0]
 Dot {
  name Dot20
  xpos -3278
  ypos 105
 }
set Nb4c9a400 [stack 0]
 Dot {
  name Dot21
  xpos -2398
  ypos 105
 }
push $Nb4c9a400
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  name bias1
  xpos -3312
  ypos 222
 }
 Dot {
  name Dot22
  xpos -3278
  ypos 348
 }
set Nb4c9b000 [stack 0]
 Dot {
  name Dot23
  xpos -3058
  ypos 348
 }
 Expression {
  temp_name0 redweight
  temp_expr0 ((b*parent.balance)+(g*(1-parent.balance)))
  temp_name1 greenweight
  temp_expr1 ((b*parent.balance)+(r*(1-parent.balance)))
  temp_name2 blueweight
  temp_expr2 ((g*parent.balance)+(r*(1-parent.balance)))
  expr0 clamp(r-(redweight*parent.limit),0,1000000)
  expr1 clamp(r-(greenweight*parent.limit),0,1000000)
  expr2 clamp(r-(blueweight*parent.limit),0,1000000)
  name ClampedKey1
  xpos -3092
  ypos 390
 }
 Dot {
  name Dot24
  xpos -3058
  ypos 442
 }
set Nb4c9bc00 [stack 0]
 Dot {
  name Dot25
  xpos -2726
  ypos 442
 }
set Nb854c000 [stack 0]
 Shuffle {
  red blue
  green blue
  alpha blue
  name Shuffle6
  label "\[value in]"
  xpos -2652
  ypos 528
 }
push $Nb854c000
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle7
  label "\[value in]"
  xpos -2762
  ypos 531
 }
push $Nb854c000
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle8
  label "\[value in]"
  xpos -2872
  ypos 531
 }
 Switch {
  inputs 3
  which {{StrongestColour.which}}
  name Switch2
  xpos -2762
  ypos 609
 }
 Dot {
  name Dot26
  xpos -2728
  ypos 732
 }
push $Nb4c9bc00
 Grade {
  add {{parent.StrongestColour.red} {parent.StrongestColour.green} {parent.StrongestColour.blue} 0}
  name KeylightOffset1
  xpos -3092
  ypos 558
  addUserKnob {20 User}
  addUserKnob {7 red_value}
  red_value {{parent.despill_colour.r-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.g*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 green_value}
  green_value {{parent.despill_colour.g-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 blue_value}
  blue_value {{parent.despill_colour.b-(((parent.despill_colour.g*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge5
  xpos -3092
  ypos 726
 }
 Dot {
  name Dot27
  xpos -3058
  ypos 801
 }
push $Nb4c9b000
 Merge2 {
  inputs 2
  operation plus
  name Merge6
  xpos -3312
  ypos 798
 }
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  reverse true
  name Grade2
  xpos -3312
  ypos 870
 }
 Dot {
  name Dot28
  xpos -3278
  ypos 969
 }
push $Nb4c9a000
 MergeExpression {
  inputs 2
  expr0 Br+(Ar-Br)*parent.strength
  expr1 Bg+(Ag-Bg)*parent.strength
  expr2 Bb+(Ab-Bb)*parent.strength
  name MergeExpression2
  xpos -3532
  ypos 966
 }
 Dot {
  name Dot29
  xpos -3498
  ypos 1137
 }
set Nbc425400 [stack 0]
 Merge2 {
  inputs 2
  operation minus
  name Merge7
  xpos -2432
  ypos 1134
 }
 Dot {
  name Dot30
  xpos -2398
  ypos 1185
 }
set Nbc425c00 [stack 0]
 Saturation {
  mode Maximum
  name Saturation5
  xpos -2212
  ypos 1230
 }
push $Nbc425c00
 Saturation {
  mode Average
  name Saturation6
  xpos -2322
  ypos 1230
 }
push $Nbc425c00
 Saturation {
  mode "Ccir 601"
  name Saturation7
  xpos -2542
  ypos 1230
 }
push $Nbc425c00
 Saturation {
  name Saturation8
  xpos -2652
  ypos 1230
 }
 Switch {
  inputs 4
  which {{parent.luminance_math}}
  name SwitchMaths1
  xpos -2432
  ypos 1326
 }
 Multiply {
  value {{parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance}}
  name Multiply2
  xpos -2432
  ypos 1392
 }
 Dot {
  name Dot31
  xpos -2398
  ypos 1473
 }
push $Nbc425400
 Merge2 {
  inputs 2
  operation plus
  name Merge8
  xpos -3532
  ypos 1470
 }
 Clamp {
  name Clamp2
  xpos -3532
  ypos 1632
  disable {{!parent.black_clamp}}
 }
 Dot {
  name Dot32
  xpos -3498
  ypos 1906
 }
push $Nb49c9400
 Shuffle {
  name Shuffle2
  label "\[value in]"
  xpos -1910
  ypos -33
 }
 Dot {
  name Dot3
  xpos -1876
  ypos 114
 }
set N200e6c00 [stack 0]
 Dot {
  name Dot4
  xpos -1656
  ypos 114
 }
set N200e7000 [stack 0]
 Dot {
  name Dot13
  xpos -776
  ypos 114
 }
push $N200e7000
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  name bias
  xpos -1690
  ypos 231
 }
 Dot {
  name Dot5
  xpos -1656
  ypos 357
 }
set N200e7c00 [stack 0]
 Dot {
  name Dot6
  xpos -1436
  ypos 357
 }
 Expression {
  temp_name0 redweight
  temp_expr0 ((b*parent.balance)+(g*(1-parent.balance)))
  temp_name1 greenweight
  temp_expr1 ((b*parent.balance)+(r*(1-parent.balance)))
  temp_name2 blueweight
  temp_expr2 ((g*parent.balance)+(r*(1-parent.balance)))
  expr0 clamp(r-(redweight*parent.limit),0,1000000)
  expr1 clamp(r-(greenweight*parent.limit),0,1000000)
  expr2 clamp(r-(blueweight*parent.limit),0,1000000)
  name ClampedKey
  xpos -1470
  ypos 399
 }
 Dot {
  name Dot7
  xpos -1436
  ypos 451
 }
set Nb0a60800 [stack 0]
 Dot {
  name Dot9
  xpos -1104
  ypos 451
 }
set Nb0a60c00 [stack 0]
 Shuffle {
  red blue
  green blue
  alpha blue
  name Shuffle4
  label "\[value in]"
  xpos -1030
  ypos 537
 }
push $Nb0a60c00
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle3
  label "\[value in]"
  xpos -1140
  ypos 540
 }
push $Nb0a60c00
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle1
  label "\[value in]"
  xpos -1250
  ypos 540
 }
 Switch {
  inputs 3
  which {{StrongestColour.which}}
  name Switch1
  xpos -1140
  ypos 618
 }
 Dot {
  name Dot8
  xpos -1106
  ypos 741
 }
push $Nb0a60800
 Grade {
  add {{parent.StrongestColour.red} {parent.StrongestColour.green} {parent.StrongestColour.blue} 0}
  name KeylightOffset
  xpos -1470
  ypos 567
  addUserKnob {20 User}
  addUserKnob {7 red_value}
  red_value {{parent.despill_colour.r-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.g*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 green_value}
  green_value {{parent.despill_colour.g-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 blue_value}
  blue_value {{parent.despill_colour.b-(((parent.despill_colour.g*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge1
  xpos -1470
  ypos 735
 }
 Dot {
  name Dot10
  xpos -1436
  ypos 810
 }
push $N200e7c00
 Merge2 {
  inputs 2
  operation plus
  name Merge2
  xpos -1690
  ypos 807
 }
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  reverse true
  name Grade1
  xpos -1690
  ypos 879
 }
 Dot {
  name Dot11
  xpos -1656
  ypos 978
 }
push $N200e6c00
 MergeExpression {
  inputs 2
  expr0 Br+(Ar-Br)*parent.strength
  expr1 Bg+(Ag-Bg)*parent.strength
  expr2 Bb+(Ab-Bb)*parent.strength
  name MergeExpression1
  xpos -1910
  ypos 975
 }
 Dot {
  name Dot12
  xpos -1876
  ypos 1146
 }
set N698a000 [stack 0]
 Merge2 {
  inputs 2
  operation minus
  name Merge3
  xpos -810
  ypos 1143
 }
 Dot {
  name Dot14
  xpos -776
  ypos 1194
 }
set N698a800 [stack 0]
 Saturation {
  mode Maximum
  name Saturation4
  xpos -590
  ypos 1239
 }
push $N698a800
 Saturation {
  mode Average
  name Saturation3
  xpos -700
  ypos 1239
 }
push $N698a800
 Saturation {
  mode "Ccir 601"
  name Saturation2
  xpos -920
  ypos 1239
 }
push $N698a800
 Saturation {
  name Saturation1
  xpos -1030
  ypos 1239
 }
 Switch {
  inputs 4
  which {{parent.luminance_math}}
  name SwitchMaths
  xpos -810
  ypos 1335
 }
 Multiply {
  value {{parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance}}
  name Multiply1
  xpos -810
  ypos 1401
 }
 Dot {
  name Dot15
  xpos -776
  ypos 1482
 }
push $N698a000
 Merge2 {
  inputs 2
  operation plus
  name Merge4
  xpos -1910
  ypos 1479
 }
 Clamp {
  name Clamp1
  xpos -1910
  ypos 1641
  disable {{!parent.black_clamp}}
 }
 Dot {
  name Dot16
  xpos -1876
  ypos 1746
 }
push $Nb49c9000
 NoOp {
  name StrongestColour
  xpos -208
  ypos -57
  addUserKnob {20 User}
  addUserKnob {7 red}
  red {{parent.despill_colour.r}}
  addUserKnob {7 green}
  green {{parent.despill_colour.g}}
  addUserKnob {7 blue}
  blue {{parent.despill_colour.b}}
  addUserKnob {3 which}
  which {{"\[python -execlocal node\\ =\\ nuke.thisNode()\\noffsetred\\ =\\ node\\\['red'\\].value()\\noffsetgreen\\ =\\ node\\\['green'\\].value()\\noffsetblue\\ =\\ node\\\['blue'\\].value()\\n\\nif\\ offsetgreen\\ >=\\ offsetblue\\ and\\ offsetgreen\\ >=\\ offsetred:\\n\\ \\ \\ ret\\ =\\ 1\\nelif\\ offsetblue\\ >=\\ offsetred:\\n\\ \\ \\ ret\\ =\\ 2\\nelse:\\n\\ \\ \\ ret\\ =\\ 0]"}}
 }
 Dot {
  name Dot17
  xpos -174
  ypos 450
 }
 ShuffleCopy {
  inputs 2
  in2 {{{Shuffle2.in}}}
  out {{{Shuffle2.in}}}
  name ShuffleCopy1
  label "\[value in]"
  xpos -208
  ypos 1737
  disable {{!clamp(out)}}
 }
 ShuffleCopy {
  inputs 2
  in2 {{{Shuffle5.in}}}
  out {{{Shuffle5.in}}}
  name ShuffleCopy2
  label "\[value in]"
  xpos -208
  ypos 1905
  disable {{!clamp(out)}}
 }
 ShuffleCopy {
  inputs 2
  in2 {{{Shuffle9.in}}}
  out {{{Shuffle9.in}}}
  name ShuffleCopy3
  label "\[value in]"
  xpos -208
  ypos 2025
  disable {{!clamp(out)}}
 }
 ShuffleCopy {
  inputs 2
  in2 {{{Shuffle13.in}}}
  out {{{Shuffle13.in}}}
  name ShuffleCopy4
  label "\[value in]"
  xpos -208
  ypos 2217
  disable {{!clamp(out)}}
 }
 ShuffleCopy {
  inputs 2
  in2 {{{Shuffle17.in}}}
  out {{{Shuffle17.in}}}
  name ShuffleCopy5
  label "\[value in]"
  xpos -208
  ypos 2409
  disable {{!clamp(out)}}
 }
 ShuffleCopy {
  inputs 2
  in2 {{{Shuffle21.in}}}
  out {{{Shuffle21.in}}}
  name ShuffleCopy6
  label "\[value in]"
  xpos -208
  ypos 2601
  disable {{!clamp(out)}}
 }
 Output {
  name Output1
  xpos -208
  ypos 3495
 }
 StickyNote {
  inputs 0
  name StickyNote4
  label "StrongestColour.which == 0 ? -parent.despill_colour.r*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.r*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.r*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.g*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.g*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.g*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.b*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.b*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.b*clamp(1/blue_value,0,1000000):\n0"
  xpos -6850
  ypos 553
 }
 StickyNote {
  inputs 0
  name StickyNote5
  label "StrongestColour.which == 0 ? -parent.despill_colour.r*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.r*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.r*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.g*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.g*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.g*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.b*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.b*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.b*clamp(1/blue_value,0,1000000):\n0"
  xpos -8422
  ypos 553
 }
 StickyNote {
  inputs 0
  name StickyNote6
  label "StrongestColour.which == 0 ? -parent.despill_colour.r*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.r*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.r*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.g*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.g*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.g*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.b*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.b*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.b*clamp(1/blue_value,0,1000000):\n0"
  xpos -9960
  ypos 553
 }
end_group
push $Nbbbb9400
Group {
 inputs 2
 name RestoreLuminance
 label "Y: \[value restore_luminance]"
 selected true
 xpos -2018
 ypos 3849
 addUserKnob {20 User l RestoreLuminance}
 addUserKnob {41 in l "in 1" T Shuffle1.in}
 addUserKnob {41 in2 l "in 2" T Shuffle1.in2}
 addUserKnob {26 _1 l "" +STARTLINE}
 addUserKnob {18 restore_luminance l "restore luminance" R -1 1}
 restore_luminance 1
 addUserKnob {6 restore_luminance_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {4 luminance_math l "" -STARTLINE M {"Rec 709" "Ccir 601" Average Maximum ""}}
 addUserKnob {6 black_clamp l "black clamp" t "Clamp minimum value to zero on all channels" +STARTLINE}
 addUserKnob {26 _2 l "" +STARTLINE}
 addUserKnob {6 output_spill l "output spill layer" +STARTLINE}
 output_spill true
 addUserKnob {6 output_spill_matte l "output spill matte layer" +STARTLINE}
 output_spill_matte true
}
 Input {
  inputs 0
  name Despill
  xpos -1030
  ypos 39
  number 1
 }
 Dot {
  name Dot1
  xpos -996
  ypos 162
 }
set N2018c800 [stack 0]
 Input {
  inputs 0
  name Original
  xpos -159
  ypos 25
 }
 Merge2 {
  inputs 2
  operation minus
  name Merge1
  xpos -159
  ypos 159
 }
 Shuffle {
  name Shuffle1
  label "\[value in]"
  xpos -159
  ypos 279
 }
 Dot {
  name Dot2
  label SPILL
  note_font "Verdana Bold"
  note_font_size 15
  xpos -126
  ypos 369
 }
set N2018d800 [stack 0]
add_layer {spill spill.red spill.green spill.blue spill.alpha}
 Shuffle {
  out spill
  name Shuffle4
  xpos -160
  ypos 831
 }
 Dot {
  name Dot5
  xpos -126
  ypos 930
 }
push $N2018d800
 Dot {
  name Dot3
  xpos -556
  ypos 369
 }
set Nb8fc0400 [stack 0]
 Saturation {
  saturation 0
  mode Maximum
  name Saturation4
  xpos -370
  ypos 447
 }
push $Nb8fc0400
 Saturation {
  saturation 0
  mode Average
  name Saturation3
  xpos -480
  ypos 447
 }
push $Nb8fc0400
 Saturation {
  saturation 0
  mode "Ccir 601"
  name Saturation2
  xpos -700
  ypos 447
 }
push $Nb8fc0400
 Saturation {
  saturation 0
  name Saturation1
  xpos -810
  ypos 447
 }
 Switch {
  inputs 4
  which {{parent.luminance_math}}
  name Switch1
  xpos -590
  ypos 519
 }
 Dot {
  name Dot4
  xpos -556
  ypos 594
 }
set Nb8fc1c00 [stack 0]
add_layer {spill_matte spill_matte.red spill_matte.green spill_matte.blue spill_matte.alpha}
 Shuffle {
  out spill_matte
  name Shuffle2
  xpos -590
  ypos 687
 }
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle3
  xpos -590
  ypos 759
 }
push $Nb8fc1c00
 Multiply {
  value {{parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance}}
  name Multiply1
  label "SCREEN COLOUR"
  xpos -810
  ypos 579
 }
push $N2018c800
 Merge2 {
  inputs 2
  operation plus
  also_merge all
  name Merge2
  label "RESTORE LUMINANCE"
  xpos -1030
  ypos 585
 }
 Copy {
  inputs 2
  channels spill_matte
  name Copy1
  xpos -1030
  ypos 747
  disable {{!parent.output_spill_matte}}
 }
 Copy {
  inputs 2
  channels spill
  name Copy2
  xpos -1030
  ypos 915
  disable {{!parent.output_spill}}
 }
 Output {
  name Output1
  xpos -1030
  ypos 1023
 }
end_group
Group {
 inputs 2
 name RestoreNoise
 label "\[value screen_colour]"
 selected true
 xpos -2018
 ypos 4065
 addUserKnob {20 User l RestoreNoise}
 addUserKnob {22 knob_changed l INVISIBLE +INVISIBLE T "node = nuke.thisNode()\nknob = nuke.thisKnob()\n\nif knob.name() == 'use_matte':\n   if node\['use_matte'].value() == True:\n      node\['matte_blackpoint'].setEnable(True)\n      node\['matte_whitepoint'].setEnable(True)\n      node\['matte_gammat'].setEnable(True)\n      node\['preview_matte'].setEnable(True)\n\n   if node\['use_matte'].value() == False:\n      node\['matte_blackpoint'].setEnable(False)\n      node\['matte_whitepoint'].setEnable(False)\n      node\['matte_gammat'].setEnable(False)\n      node\['preview_matte'].setEnable(False)" +STARTLINE}
 addUserKnob {4 screen_colour l "screen colour" M {red green blue}}
 addUserKnob {26 _1 l "" +STARTLINE}
 addUserKnob {26 spacer l "adjust restore matte:"}
 addUserKnob {6 use_matte l "enable restore matte" +STARTLINE}
 addUserKnob {6 preview_matte l preview +STARTLINE}
 addUserKnob {7 matte_blackpoint l blackpoint R -1 1}
 matte_blackpoint 0.5
 addUserKnob {7 matte_whitepoint l whitepoint R 0 2}
 matte_whitepoint 1
 addUserKnob {7 matte_gamma l gamma R 0.2 2}
 matte_gamma 1
}
 Input {
  inputs 0
  name Despill
  xpos -159
  ypos 63
 }
set Nb6b49c00 [stack 0]
 Grade {
  name Grade1
  xpos 42
  ypos 159
 }
 Input {
  inputs 0
  name Original
  xpos -370
  ypos 63
  number 1
 }
push $Nb6b49c00
 Dot {
  name Dot1
  xpos -125
  ypos 210
 }
set Nb5168800 [stack 0]
 Merge2 {
  inputs 2
  operation minus
  also_merge all
  name Merge1
  xpos -370
  ypos 207
 }
 Dot {
  name Dot3
  xpos -336
  ypos 258
 }
set Nb5169000 [stack 0]
 Dot {
  name Dot2
  xpos -556
  ypos 258
 }
 Shuffle {
  in fg_denoise_plate
  name Shuffle1
  xpos -590
  ypos 327
 }
set Nb5169800 [stack 0]
 Invert {
  name Invert1
  xpos 180
  ypos 321
 }
 Dot {
  name Dot10
  xpos 332
  ypos 330
 }
 Grade {
  blackpoint {{parent.matte_blackpoint}}
  whitepoint {{parent.matte_whitepoint}}
  gamma {{parent.matte_gamma}}
  white_clamp true
  name Grade2
  xpos 298
  ypos 375
 }
 Dot {
  name Dot11
  xpos 332
  ypos 445
 }
set Nb903a800 [stack 0]
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle4
  xpos 400
  ypos 495
 }
push $Nb903a800
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle3
  xpos 298
  ypos 493
 }
push $Nb903a800
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle2
  xpos 195
  ypos 495
 }
 Switch {
  inputs 3
  which {{parent.screen_colour}}
  name ScreenColour
  xpos 298
  ypos 589
 }
 Clamp {
  name Clamp1
  xpos 298
  ypos 657
 }
set Nb903bc00 [stack 0]
 Dot {
  name Dot9
  xpos 332
  ypos 1026
 }
push $Nb903bc00
push $Nb5169800
 Dot {
  name Dot4
  xpos -556
  ypos 378
 }
push $Nb5169000
 Merge2 {
  inputs 2
  operation minus
  name Merge2
  xpos -370
  ypos 375
 }
 Dot {
  name Dot6
  xpos -336
  ypos 666
 }
set Nbbd0cc00 [stack 0]
push $Nb5168800
 Dot {
  name Dot7
  xpos 104
  ypos 210
 }
 Merge2 {
  inputs 2+1
  operation plus
  name MergeMasked
  xpos 70
  ypos 663
 }
 Dot {
  name Dot8
  xpos 104
  ypos 906
 }
push $Nb5168800
push $Nbbd0cc00
 Dot {
  name Dot5
  xpos -336
  ypos 762
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge3
  xpos -159
  ypos 759
 }
 Switch {
  inputs 2
  which {{parent.preview_matte}}
  name Preview
  xpos -159
  ypos 903
 }
 Switch {
  inputs 2
  which {{use_matte}}
  name UseMask1
  xpos -159
  ypos 1023
 }
 Output {
  name Output1
  xpos -159
  ypos 1071
 }
end_group
Dot {
 name Dot46
 selected true
 xpos -1984
 ypos 4530
}
Dot {
 name Dot45
 selected true
 xpos -1984
 ypos 7026
}
Dot {
 inputs 0
 name Dot44
 selected true
 xpos -776
 ypos 6378
}
push $Nb4936c00
Switch {
 inputs 2
 name Switch2
 selected true
 xpos -700
 ypos 6375
}
push $Nb9a91000
Dot {
 name Dot48
 selected true
 xpos 375
 ypos 6532
}
Group {
 name Alpha_Chocker
 tile_color 0xffc300ff
 selected true
 xpos 341
 ypos 6807
 addUserKnob {20 User}
 addUserKnob {7 balance l "Edge Balance" R -1 1}
 addUserKnob {7 choke l "Edge Choke"}
 addUserKnob {7 smoothing l "Edge Smoothing" R 0 100}
 addUserKnob {7 blur l "Edge Blur" R 0 100}
 addUserKnob {7 expand l "Edge Contract / Expand" R -100 100}
}
 Input {
  inputs 0
  name Mask
  xpos -480
  ypos -9
  number 1
 }
 Shuffle {
  inputs 0
  alpha white
  name Shuffle2
  xpos -590
  ypos 111
 }
 ChannelMerge {
  inputs 2
  name ChannelMerge1
  xpos -480
  ypos 99
 }
 Input {
  inputs 0
  name Source
  xpos -208
  ypos -441
 }
 Dot {
  name Dot1
  xpos -174
  ypos -342
 }
set Nb47ae000 [stack 0]
 Remove {
  operation keep
  channels alpha
  name Remove1
  xpos -208
  ypos -303
 }
 Blur {
  size {{parent.smoothing}}
  quality 5
  name Blur1
  xpos -208
  ypos -255
 }
 Grade {
  channels alpha
  blackpoint {{parent.choke*.49+parent.balance*.49}}
  whitepoint {{1-parent.choke*.49+parent.balance*.49}}
  name Grade1
  xpos -208
  ypos -201
 }
 FilterErode {
  size {{parent.expand}}
  name FilterErode1
  xpos -208
  ypos -145
 }
 Clamp {
  name Clamp1
  xpos -208
  ypos -87
 }
 Blur {
  size {{parent.blur}}
  quality 5
  name Blur2
  xpos -208
  ypos -39
 }
push $Nb47ae000
 Dot {
  name Dot2
  xpos -6
  ypos -342
 }
 Dot {
  name Dot3
  xpos -6
  ypos 30
 }
set Nb442c000 [stack 0]
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos -208
  ypos 21
 }
set Nb442c400 [stack 0]
push $Nb442c000
 Dot {
  name Dot4
  xpos -6
  ypos 114
 }
 Keymix {
  inputs 3
  name Keymix1
  xpos -208
  ypos 105
 }
 Output {
  name Output1
  xpos -208
  ypos 159
 }
push $Nb442c400
 Viewer {
  frame_range 1-100
  name Viewer1
  xpos -391
  ypos -321
 }
end_group
Dot {
 name Dot47
 selected true
 xpos 375
 ypos 7026
}
Keymix {
 inputs 3
 name Keymix1
 selected true
 xpos -700
 ypos 7017
}
Copy {
 inputs 2
 from0 rgba.alpha
 to0 rgba.alpha
 name Copy3
 selected true
 xpos -700
 ypos 7809
}
Dot {
 name Dot61
 selected true
 xpos -666
 ypos 8019
}
set N2f3dc00 [stack 0]
Dot {
 name Dot62
 selected true
 xpos -776
 ypos 8019
}
StickyNote {
 inputs 0
 name StickyNote6
 tile_color 0xff
 label PRECOMP
 note_font "Verdana Bold"
 note_font_size 20
 selected true
 xpos -790
 ypos 7987
}
Dot {
 inputs 0
 name Dot75
 selected true
 xpos -4076
 ypos 8250
}
Dot {
 name Dot76
 selected true
 xpos -4076
 ypos 9066
}
NoOp {
 name ENV
 tile_color 0x512410ff
 label "\n<<       >>"
 note_font "Verdana Bold"
 note_font_size 12
 selected true
 xpos -4110
 ypos 9312
}
set Nc6386800 [stack 0]
NoOp {
 name fc_Doppelganger4
 tile_color 0x512410ff
 label "\n\[knob Name]\n\n-"
 note_font "Verdana Bold"
 note_font_size 15
 note_font_color 0x94dcfeff
 selected true
 xpos -260
 ypos 8930
 hide_input true
 addUserKnob {20 TG}
 addUserKnob {26 ""}
 addUserKnob {26 Divider l "<font color=\"lightblue\">Name" -STARTLINE}
 addUserKnob {1 Name l "" t "Type the name of the node you want to connect to in here" +STARTLINE}
 Name ENV
 addUserKnob {22 Connect l "<font color=\"lightblue\">Connect" -STARTLINE T "THIS = nuke.thisNode()\nPARENT = THIS\['Name'].getValue()\nE = nuke.exists(PARENT)\n\nif E == True:\n    v = nuke.toNode(PARENT)\n    THIS.setInput(0,v)\n    firstInput = THIS.input(0) \n    colour = firstInput\['tile_color'].getValue()\n    if firstInput is not None:\n        THIS\['tile_color'].setValue(int(colour)) \n    else: \n        pass\n    \nelse:\n    pass\n    nuke.message('There is no node named that')\n    \n\nnukescripts.clear_selection_recursive() \n\n\n"}
 addUserKnob {26 ""}
 addUserKnob {22 Find l "<font color=\"lightblue\">Find Connected" t "This will show you the node Doppelganger is connected to" -STARTLINE T "THIS = nuke.thisNode()\nPARENT = THIS.knob('Name').getValue()\nE = nuke.exists(PARENT)\n\nif E == True:\n    v = nuke.toNode(PARENT)\n    nuke.zoom( 2, \[ v.xpos(), v.ypos() ])\nelse:\n    pass\n    nuke.message('Cannot find that node')\n    \n\nnukescripts.clear_selection_recursive() \n\n"}
 addUserKnob {22 ConnectAll l "<font color=\"lightblue\">Connect all Doppelgangers" t "This will connect all Doppelgangers in your script. Handy if you have pasted a large script" -STARTLINE T "for s in nuke.allNodes():\n    classTypes = \['NoOp']\n    for n in classTypes:\n        if n in s.Class():\n            try:\n                s\['Connect'].execute()\n            except:\n                pass"}
 addUserKnob {26 ""}
 addUserKnob {20 Help}
 addUserKnob {26 ""}
 addUserKnob {26 Tip l :?: T "Doppelganger acts as a bridge between your Read nodes and your script\n\nUse this instead of duplicating a camera or geo or a plate over and over\n\nJust type in the name of the node and press connect\n\nAs a tip, add a NoOp underneath your Plate and call it 'Plate'. This will then make it easier to remember\n\nAny questions contact Thomas Greenhalgh\ntomgreenhalgh125@gmail.com\n"}
 addUserKnob {26 ""}
}
Grade {
 whitepoint 0.6
 multiply 0.5
 name Grade5
 selected true
 xpos -260
 ypos 9111
}
Group {
 name PxF_Filler
 help "Gaussian in-fill. Useful to remove markers and create clean plates."
 knobChanged "m = nuke.thisNode()\nkc = nuke.thisKnob()\n\nif kc.name() in \[\"iterations\"]:\n    i = nuke.toNode('Merge1')\n    i2 = nuke.toNode('Invert1')\n    o = nuke.toNode('Transform3')\n    \n    for n in nuke.allNodes():\n      if \"static\" not in n\['label'].getValue():\n          ###print \"i would delete\" + n\['name'].value()\n          nuke.delete(n)\n    \n    \n    slices = int(m\['iterations'].value())\n    step = int(1)\n    for x in range(1,slices+step,step):\n\n      b1 = nuke.nodes.Blur()\n      b1.setInput(0, i)\n      b1\['size'].setSingleValue(False)\n      b1\['size'].setExpression(\"parent.size.w\", 0)\n      b1\['size'].setExpression(\"parent.size.h\", 1)\n\n      b2 = nuke.nodes.Blur()\n      b2.setInput(0, i2)\n      b2\['size'].setSingleValue(False)\n      b2\['size'].setExpression(\"parent.size.w\", 0)\n      b2\['size'].setExpression(\"parent.size.h\", 1)\n\n      g1 = nuke.nodes.Grade()\n      g1.setInput(0, b2)\n      g1\['channels'].setValue('rgba')\n      g1\['blackpoint'].setValue(-0.0001)\n      g1\['disable'].setExpression(\"parent.softEdges ? 0 : 1\")\n\n      m1 = nuke.nodes.Merge()\n      m1.setInput(1, b1)\n      m1.setInput(0, g1)\n      m1\['operation'].setValue(\"divide\")\n      \n      if x < slices:\n         m2 = nuke.nodes.Merge()\n         m2.setInput(1, b2)\n         m2.setInput(0, g1)\n         m2\['operation'].setValue(\"divide\")\n    \n      i = m1\n      i2 = m2\n    \n    o.setInput(0, i)\n\n"
 tile_color 0x733520ff
 selected true
 xpos -260
 ypos 9207
 addUserKnob {20 PxF_Filler}
 addUserKnob {14 size t "Amount of 'in-fill' for one iteration. " R 0 100}
 size 40
 addUserKnob {3 iterations t "How many times the blur/divide operation is repeated."}
 iterations 10
 addUserKnob {6 softEdges t "Smoother transition between iterations." -STARTLINE}
 softEdges true
 addUserKnob {7 angle t "Adjust the direction of the 'in-fill'. (Has no effect if size.w and size.h are the same value)." R -180 180}
 addUserKnob {6 blackOutside t "Clamp to format before the 'in-fill'." +STARTLINE}
 addUserKnob {4 maskChannel t "Which channel from the 'hole_mask' input is used to define the area to be 'in-filled'." M {Red Green Blue Alpha "" ""}}
 maskChannel Alpha
 addUserKnob {6 ignoreAlpha l "Don't process Alpha" t "Only process RGB channels and do not 'in-fill' the alpha channel." -STARTLINE}
 addUserKnob {7 mix t "Dissolve between the effect and the original image."}
 mix 1
 addUserKnob {26 ""}
 addUserKnob {26 Credits l "" t "PxF_Filler 3.0.5 - &copy; 2012-2023 - Xavier Bourque - pixelfudger.com \n\nPixelfudger gizmos are free to use for personal and commercial use as long as you leave the credit text intact in the gizmo's knobs and in the source files. " +STARTLINE T "<font size=2>PxF_Filler 3.0.5 - &copy; 2012-2023 - </font><a href=\"http://www.xavierbourque.com\"><font color=\"#bbbbbb\" size=2>Xavier Bourque</a></font> - <a href=\"http://www.pixelfudger.com\"><font color=\"#bbbbbb\" size=2>pixelfudger.com</a></font> - <a href=\"http://www.pixelfudger.com/userguides/PxF_Filler.html\"><font color=\"#bbbbbb\" size=2>Video Tutorial</a></font>"}
}
 Input {
  inputs 0
  name mask
  label static
  xpos 183
  ypos 1950
  number 2
 }
 Input {
  inputs 0
  name img
  label static
  xpos -1073
  ypos -113
  addUserKnob {20 User}
  addUserKnob {7 blur R 0 500}
  addUserKnob {3 iterations}
 }
set Nb9591000 [stack 0]
push $Nb9591000
 Input {
  inputs 0
  name hole_mask
  label static
  xpos 337
  ypos -851
  number 1
 }
set Nb9591400 [stack 0]
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle4
  label static
  xpos 457
  ypos -762
 }
push $Nb9591400
 Shuffle {
  red blue
  green blue
  alpha blue
  name Shuffle3
  label static
  xpos 373
  ypos -762
 }
push $Nb9591400
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle2
  label static
  xpos 290
  ypos -762
 }
push $Nb9591400
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle1
  label static
  xpos 207
  ypos -762
 }
 Switch {
  inputs 4
  which {{parent.maskChannel i}}
  name Switch2
  label static
  xpos 342
  ypos -668
 }
set Nb40ac800 [stack 0]
push $Nb40ac800
 Transform {
  rotate {{parent.angle i}}
  center {2048 1463}
  name Transform2
  label static
  xpos 342
  ypos -587
 }
set Nb40acc00 [stack 0]
push $Nb9591000
 Transform {
  rotate {{parent.angle i}}
  center {2048 1463}
  black_outside {{parent.blackOutside i}}
  name Transform1
  label static
  xpos 137
  ypos -594
 }
 CopyBBox {
  inputs 2
  name CopyBBox1
  label static
  xpos 137
  ypos -519
 }
push $Nb40acc00
 Merge2 {
  inputs 2
  operation out
  name Merge1
  label static
  xpos 137
  ypos -432
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur1
  xpos 137
  ypos -239
 }
push $Nb40acc00
 Clamp {
  name Clamp1
  label static
  xpos 342
  ypos -532
 }
 Invert {
  name Invert1
  label static
  xpos 342
  ypos -473
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur2
  xpos 342
  ypos -400
 }
set N6e56a800 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade1
  xpos 310
  ypos -319
  disable {{"parent.softEdges ? 0 : 1"}}
 }
set N6e56ac00 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge2
  xpos 310
  ypos -239
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur3
  xpos 310
  ypos -79
 }
push $N6e56a800
push $N6e56ac00
 Merge {
  inputs 2
  operation divide
  name Merge3
  xpos 470
  ypos -319
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur4
  xpos 470
  ypos -239
 }
set N6e56bc00 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade2
  xpos 470
  ypos -159
  disable {{"parent.softEdges ? 0 : 1"}}
 }
set Nb43da000 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge4
  xpos 470
  ypos -79
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur5
  xpos 470
  ypos 81
 }
push $N6e56bc00
push $Nb43da000
 Merge {
  inputs 2
  operation divide
  name Merge5
  xpos 630
  ypos -159
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur6
  xpos 630
  ypos -79
 }
set Nb43db000 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade3
  xpos 630
  ypos 1
  disable {{"parent.softEdges ? 0 : 1"}}
 }
set Nb43db400 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge6
  xpos 630
  ypos 81
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur7
  xpos 630
  ypos 241
 }
push $Nb43db000
push $Nb43db400
 Merge {
  inputs 2
  operation divide
  name Merge7
  xpos 790
  ypos 1
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur8
  xpos 790
  ypos 81
 }
set N79a98400 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade4
  xpos 790
  ypos 161
  disable {{"parent.softEdges ? 0 : 1"}}
 }
set N79a98800 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge8
  xpos 790
  ypos 241
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur9
  xpos 790
  ypos 401
 }
push $N79a98400
push $N79a98800
 Merge {
  inputs 2
  operation divide
  name Merge9
  xpos 950
  ypos 161
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur10
  xpos 950
  ypos 241
 }
set N79a99800 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade5
  xpos 950
  ypos 321
  disable {{"parent.softEdges ? 0 : 1"}}
 }
set N79a99c00 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge10
  xpos 950
  ypos 401
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur11
  xpos 950
  ypos 561
 }
push $N79a99800
push $N79a99c00
 Merge {
  inputs 2
  operation divide
  name Merge11
  xpos 1110
  ypos 321
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur12
  xpos 1110
  ypos 401
 }
set Nb458cc00 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade6
  xpos 1110
  ypos 481
  disable {{"parent.softEdges ? 0 : 1"}}
 }
set Nb458d000 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge12
  xpos 1110
  ypos 561
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur13
  xpos 1110
  ypos 721
 }
push $Nb458cc00
push $Nb458d000
 Merge {
  inputs 2
  operation divide
  name Merge13
  xpos 1270
  ypos 481
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur14
  xpos 1270
  ypos 561
 }
set Nb1be8000 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade7
  xpos 1270
  ypos 641
  disable {{"parent.softEdges ? 0 : 1"}}
 }
set Nb1be8400 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge14
  xpos 1270
  ypos 721
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur15
  xpos 1270
  ypos 881
 }
push $Nb1be8000
push $Nb1be8400
 Merge {
  inputs 2
  operation divide
  name Merge15
  xpos 1430
  ypos 641
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur16
  xpos 1430
  ypos 721
 }
set Nb1be9400 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade8
  xpos 1430
  ypos 801
  disable {{"parent.softEdges ? 0 : 1"}}
 }
set Nb1be9800 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge16
  xpos 1430
  ypos 881
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur17
  xpos 1430
  ypos 1041
 }
push $Nb1be9400
push $Nb1be9800
 Merge {
  inputs 2
  operation divide
  name Merge17
  xpos 1590
  ypos 801
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur18
  xpos 1590
  ypos 881
 }
set Nb4896800 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade9
  xpos 1590
  ypos 961
  disable {{"parent.softEdges ? 0 : 1"}}
 }
set Nb4896c00 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge18
  xpos 1590
  ypos 1041
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur19
  xpos 1590
  ypos 1201
 }
push $Nb4896800
push $Nb4896c00
 Merge {
  inputs 2
  operation divide
  name Merge19
  xpos 1750
  ypos 961
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur20
  xpos 1750
  ypos 1041
 }
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade10
  xpos 1750
  ypos 1121
  disable {{"parent.softEdges ? 0 : 1"}}
 }
 Merge {
  inputs 2
  operation divide
  name Merge20
  xpos 1750
  ypos 1201
 }
 Transform {
  rotate {{parent.angle*-1 i}}
  center {2048 1463}
  name Transform3
  label static
  xpos -163
  ypos 1431
 }
push $Nb9591000
 Keymix {
  inputs 3
  name Keymix1
  label static
  xpos -163
  ypos 1650
 }
 ShuffleCopy {
  inputs 2
  name ShuffleCopy1
  label static
  xpos -163
  ypos 1763
  disable {{"parent.ignoreAlpha ? 0 : 1" i}}
 }
push $Nb9591000
 Dissolve {
  inputs 2
  which {{parent.mix i}}
  name Dissolve1
  label static
  xpos -163
  ypos 1923
 }
 Keymix {
  inputs 3
  invertMask true
  bbox B
  name Keymix2
  label static
  xpos -163
  ypos 2053
  disable {{"\[exists parent.input2] ? 0 : 1" x1 0}}
 }
 Output {
  name Output1
  label static
  xpos -163
  ypos 2155
 }
end_group
Dot {
 name Dot67
 selected true
 xpos -226
 ypos 9258
}
Dot {
 inputs 0
 name Dot63
 selected true
 xpos -776
 ypos 8250
}
push $N2f3dc00
Switch {
 inputs 2
 name Switch5
 selected true
 xpos -700
 ypos 8247
}
Dot {
 name Dot64
 selected true
 xpos -666
 ypos 8850
}
set Nb8a37400 [stack 0]
Dot {
 name Dot65
 selected true
 xpos -446
 ypos 8850
}
Shuffle2 {
 fromInput1 {{0} B}
 in1 despillMask
 fromInput2 {{0} B}
 mappings "4 black -1 -1 rgba.red 0 0 black -1 -1 rgba.green 0 1 black -1 -1 rgba.blue 0 2 despillMask.alpha 0 0 rgba.alpha 0 3"
 name Shuffle7
 selected true
 xpos -480
 ypos 8895
}
Grade {
 channels alpha
 blackpoint 0.01
 whitepoint 0.9
 name Grade3
 selected true
 xpos -480
 ypos 8937
}
Group {
 name Alpha_Chocker2
 tile_color 0xffc300ff
 selected true
 xpos -480
 ypos 9015
 addUserKnob {20 User}
 addUserKnob {7 balance l "Edge Balance" R -1 1}
 addUserKnob {7 choke l "Edge Choke"}
 addUserKnob {7 smoothing l "Edge Smoothing" R 0 100}
 addUserKnob {7 blur l "Edge Blur" R 0 100}
 addUserKnob {7 expand l "Edge Contract / Expand" R -100 100}
}
 Input {
  inputs 0
  name Mask
  xpos -480
  ypos -9
  number 1
 }
 Shuffle {
  inputs 0
  alpha white
  name Shuffle2
  xpos -590
  ypos 111
 }
 ChannelMerge {
  inputs 2
  name ChannelMerge1
  xpos -480
  ypos 99
 }
 Input {
  inputs 0
  name Source
  xpos -208
  ypos -441
 }
 Dot {
  name Dot1
  xpos -174
  ypos -342
 }
set Nb8a59c00 [stack 0]
 Remove {
  operation keep
  channels alpha
  name Remove1
  xpos -208
  ypos -303
 }
 Blur {
  size {{parent.smoothing}}
  quality 5
  name Blur1
  xpos -208
  ypos -255
 }
 Grade {
  channels alpha
  blackpoint {{parent.choke*.49+parent.balance*.49}}
  whitepoint {{1-parent.choke*.49+parent.balance*.49}}
  name Grade1
  xpos -208
  ypos -201
 }
 FilterErode {
  size {{parent.expand}}
  name FilterErode1
  xpos -208
  ypos -145
 }
 Clamp {
  name Clamp1
  xpos -208
  ypos -87
 }
 Blur {
  size {{parent.blur}}
  quality 5
  name Blur2
  xpos -208
  ypos -39
 }
push $Nb8a59c00
 Dot {
  name Dot2
  xpos -6
  ypos -342
 }
 Dot {
  name Dot3
  xpos -6
  ypos 30
 }
set Nbb1d5c00 [stack 0]
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos -208
  ypos 21
 }
set Nb4a16000 [stack 0]
push $Nbb1d5c00
 Dot {
  name Dot4
  xpos -6
  ypos 114
 }
 Keymix {
  inputs 3
  name Keymix1
  xpos -208
  ypos 105
 }
 Output {
  name Output1
  xpos -208
  ypos 159
 }
push $Nb4a16000
 Viewer {
  frame_range 1-100
  name Viewer1
  xpos -391
  ypos -321
 }
end_group
set Nb1e58b00 [stack 0]
Merge2 {
 inputs 2
 operation multiply
 name Merge3
 selected true
 xpos -480
 ypos 9255
}
Shuffle {
 alpha black
 name Shuffle8
 selected true
 xpos -480
 ypos 9351
}
push $Nb1e58b00
Dot {
 name Dot66
 selected true
 xpos -556
 ypos 9018
}
Grade {
 name Grade4
 selected true
 xpos -590
 ypos 9087
}
push $Nb8a37400
Saturation {
 inputs 1+1
 name Saturation1
 selected true
 xpos -700
 ypos 9087
}
Merge2 {
 inputs 2
 operation plus
 name Merge4
 selected true
 xpos -700
 ypos 9351
}
Dot {
 name Dot68
 selected true
 xpos -666
 ypos 9810
}
set Nbb271000 [stack 0]
Dot {
 name Dot71
 selected true
 xpos -446
 ypos 9810
}
Dot {
 name Dot70
 selected true
 xpos -446
 ypos 9906
}
push $Nbb271000
Dot {
 name Dot72
 selected true
 xpos -886
 ypos 9810
}
Group {
 name EdgeExtender_UV
 tile_color 0xc00caff
 selected true
 xpos -920
 ypos 9855
 addUserKnob {20 User}
 addUserKnob {14 Intensity R 0 100}
 Intensity 10
 addUserKnob {7 ErodeIncomingMatte l "Erode Incoming Alpha" R -100 100}
 addUserKnob {7 Edge_Erode l "Width (erode)" R 0 50}
 Edge_Erode 10
 addUserKnob {7 Edge_blur l "Edge Blur" R 0 100}
 Edge_blur 10
 addUserKnob {4 Output M {"Edges Extended" "Edge Only" "Area Effected"}}
 addUserKnob {6 InvertAlpha l "Pull Inward?" +STARTLINE}
 addUserKnob {6 smearEdge l "smear Edge" -STARTLINE}
 addUserKnob {6 alphaToo l "alpha too?" -STARTLINE}
 addUserKnob {7 Pull_Inward_edge_blur l "Pull Inward Edge Blur" R -50 50}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x33759101
  label addon
  note_font "Helvetica Bold"
  note_font_size 30
  xpos 1129
  ypos 1022
  bookmark false
  bdwidth 551
  bdheight 132
 }
 Input {
  inputs 0
  name intens
  label intens
  xpos 1582
  ypos 1050
  number 2
 }
 Invert {
  channels alpha
  name Invert5
  xpos 1582
  ypos 1086
 }
 Input {
  inputs 0
  name InputINPUT
  label Input
  xpos 525
  ypos 330
 }
 Dot {
  name Dot43
  xpos 559
  ypos 391
 }
 Dot {
  name Dot32
  xpos 559
  ypos 583
 }
set N2ee3c00 [stack 0]
 Dot {
  name Dot33
  xpos 801
  ypos 583
 }
set N2f04000 [stack 0]
 Dot {
  name Dot5
  tile_color 0xd8d8d8ff
  note_font_size 20
  xpos 1226
  ypos 1070
 }
 Expression {
  expr0 x/width
  expr1 y/height
  expr2 0
  channel3 {-rgba.red -rgba.green -rgba.blue rgba.alpha}
  expr3 0
  name UV
  xpos 1296
  ypos 1073
 }
 Transform {
  translate {-0.5 -0.5}
  center {1707 1099}
  shutteroffset centred
  name Transform1
  xpos 1296
  ypos 1097
 }
push $N2f04000
 Dot {
  name Dot34
  xpos 1211
  ypos 583
 }
set N2f05000 [stack 0]
 Remove {
  operation keep
  channels alpha
  name Remove4
  xpos 1177
  ypos 640
 }
 FilterErode {
  channels rgba
  size {{parent.ErodeIncomingMatte}}
  filter gaussian
  name FilterErode7
  xpos 1177
  ypos 713
 }
set N2f05800 [stack 0]
 Invert {
  name Invert2
  xpos 1086
  ypos 781
 }
push $N2f05800
 Switch {
  inputs 2
  which {{parent.InvertAlpha}}
  name Switch2
  xpos 1177
  ypos 787
 }
push $N2f05000
 Dot {
  name Dot35
  xpos 1446
  ypos 583
 }
set Nb8cd4400 [stack 0]
 Remove {
  name Remove1
  xpos 1412
  ypos 631
 }
 Reformat {
  type "to box"
  format "720 576 0 0 720 576 1.067 PAL_1"
  box_width {{InputINPUT.format.w}}
  box_height {{InputINPUT.format.t}}
  box_fixed true
  scale {1 1}
  name Reformat1
  xpos 1412
  ypos 681
 }
set Nb8cd4c00 [stack 0]
 Ramp {
  p0 {-0.5 0}
  p1 {{parent.Reformat1.box_width-0.5} 0}
  color {1 0 0 1}
  name Ramp1
  xpos 1326
  ypos 722
 }
push $Nb8cd4c00
 Ramp {
  p0 {0 -0.5}
  p1 {0 {parent.Reformat1.box_height-0.5 i}}
  color {0 1 0 1}
  name Ramp2
  xpos 1501
  ypos 727
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge1
  xpos 1412
  ypos 781
 }
 Shuffle {
  alpha white
  name Shuffle1
  xpos 1412
  ypos 817
 }
set Naa5d2000 [stack 0]
 Shuffle {
  alpha white
  name Shuffle4
  label "\[value in]"
  xpos 1412
  ypos 906
 }
set Naa5d2400 [stack 0]
 Merge2 {
  inputs 2
  operation mask
  name Merge8
  label "\[value Achannels]"
  xpos 1177
  ypos 906
 }
 Blur {
  channels rgba
  size {{parent.Intensity}}
  name Blur1
  xpos 1177
  ypos 974
 }
set Naa5d2c00 [stack 0]
push $Naa5d2c00
push $Naa5d2c00
push $Naa5d2c00
push $Naa5d2c00
push $Naa5d2c00
push 0
push $Naa5d2c00
push $Naa5d2400
 Merge2 {
  inputs 8+1
  name Merge9
  label "\[value Achannels]"
  xpos 1412
  ypos 968
 }
 Keymix {
  inputs 3
  name Keymix1
  xpos 1412
  ypos 1086
 }
 Dot {
  name Dot44
  xpos 1440
  ypos 1165
 }
push $N2f04000
 Invert {
  channels alpha
  name Invert4
  xpos 657
  ypos 911
 }
push $N2f04000
 Switch {
  inputs 2
  which {{parent.InvertAlpha}}
  name Pull_inward
  xpos 767
  ypos 917
 }
 STMap {
  inputs 2
  uv rgb
  name STMap2
  xpos 767
  ypos 1161
 }
 Dot {
  name Dot45
  xpos 795
  ypos 1197
 }
set Nffc6800 [stack 0]
 Dot {
  name Dot49
  xpos 1398
  ypos 1197
 }
set Nffc6c00 [stack 0]
 Blur {
  channels rgba
  size {{parent.Pull_Inward_edge_blur}}
  name Blur3
  xpos 1266
  ypos 1265
 }
push $Nffc6c00
 Switch {
  inputs 2
  which {{parent.InvertAlpha}}
  name Pull_inward1
  xpos 1364
  ypos 1265
 }
push $Nb8cd4400
 Dot {
  name Dot36
  xpos 1849
  ypos 583
 }
set Nffc7800 [stack 0]
 Dot {
  name Dot2
  xpos 2059
  ypos 583
 }
set Nffc7c00 [stack 0]
 FilterErode {
  channels alpha
  size {{-parent.FilterErode8.size}}
  name FilterErode1
  xpos 2025
  ypos 955
 }
 Blur {
  channels alpha
  size {{parent.Blur25.size}}
  name Blur2
  xpos 2025
  ypos 1023
 }
 Dot {
  name Dot8
  xpos 2059
  ypos 1335
 }
 Invert {
  name Invert3
  xpos 1925
  ypos 1326
 }
push $Nffc7800
 FilterErode {
  channels alpha
  size {{parent.Edge_Erode}}
  name FilterErode8
  xpos 1815
  ypos 954
 }
 Blur {
  channels alpha
  size {{parent.Edge_blur}}
  name Blur25
  xpos 1815
  ypos 1024
 }
 Switch {
  inputs 2
  which {{parent.InvertAlpha}}
  name Pull_inward2
  xpos 1815
  ypos 1332
 }
 Merge2 {
  inputs 2
  operation minus
  name Multiply
  label "\[value Achannels]"
  xpos 1366
  ypos 1326
 }
set Nffefc00 [stack 0]
 Dot {
  name Dot6
  xpos 1400
  ypos 1617
 }
set N6e4b0000 [stack 0]
push $N6e4b0000
push $Nffc7c00
 Dot {
  name Dot4
  xpos 2280
  ypos 583
 }
 Grade {
  inputs 1+1
  multiply {4 0.8842215538 0.7226884365 1}
  name Grade1
  xpos 2246
  ypos 1554
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos 2246
  ypos 1608
 }
 Dot {
  name Dot3
  xpos 2280
  ypos 2092
 }
push $Nffefc00
push $Nffc6800
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy4_warpEdgeAlso
  xpos 767
  ypos 1326
  disable {{parent.smearEdge}}
 }
 Premult {
  name Premult2
  xpos 767
  ypos 1532
 }
set N6e4b1800 [stack 0]
 Dot {
  name Dot1
  xpos 1146
  ypos 1535
 }
 Input {
  inputs 0
  name InputMask
  xpos 891
  ypos 1790
  number 1
 }
 Invert {
  name Invert1
  xpos 891
  ypos 1833
 }
push $N2ee3c00
 Dot {
  name Dot52
  xpos 559
  ypos 1649
 }
set Nb3daa800 [stack 0]
 Dot {
  name Dot53
  xpos 559
  ypos 1751
 }
set Nb3daac00 [stack 0]
push $Nb3daac00
push $N6e4b1800
push $Nb3daa800
 Merge2 {
  inputs 2
  name Merge10
  label "\[value Achannels]"
  xpos 767
  ypos 1640
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy5_alphaToo
  xpos 767
  ypos 1748
  disable {{parent.alphaToo}}
 }
 Keymix {
  inputs 3
  name Keymix2
  xpos 767
  ypos 1833
 }
 Dot {
  name Dot7
  xpos 801
  ypos 2092
 }
 Switch {
  inputs 3
  which {{parent.Output}}
  name Switch1
  xpos 1112
  ypos 2089
 }
 Output {
  name Output1
  label Output
  xpos 1112
  ypos 2149
 }
 Expression {
  inputs 0
  expr0 (x+0.5)/(width)
  expr1 (y+0.5)/(height)
  channel2 {rgba.red -rgba.green rgba.blue none}
  expr2 0
  channel3 {-rgba.red -rgba.green -rgba.blue rgba.alpha}
  expr3 1
  name UV1
  xpos 1531
  ypos 781
 }
push $Naa5d2000
 Viewer {
  inputs 2
  frame_range 1001-1128
  fps 25
  colour_sample_bbox {0.9989583492 -0.5625 1 -0.5614583492}
  input_process false
  name Viewer1
  xpos 1689
  ypos 1209
 }
end_group
Dot {
 name Dot69
 selected true
 xpos -886
 ypos 9906
}
push $Nbb271000
Keymix {
 inputs 3
 name Keymix2
 selected true
 xpos -700
 ypos 9897
}
Dot {
 name Dot73
 selected true
 xpos -666
 ypos 10698
}
OCIOLogConvert {
 operation "lin to log"
 name OCIOLogConvert1
 selected true
 xpos -700
 ypos 10815
}
Premult {
 name Premult1
 selected true
 xpos -700
 ypos 10935
}
Dot {
 name Dot74
 selected true
 xpos -666
 ypos 11134
}
Dot {
 name Dot84
 selected true
 xpos -3186
 ypos 11134
}
set N6eafe800 [stack 0]
Dot {
 name Dot86
 selected true
 xpos -3186
 ypos 11491
}
set Nb9554800 [stack 0]
Dot {
 name Dot85
 selected true
 xpos -3186
 ypos 11802
}
set N6eaff000 [stack 0]
Dot {
 name Dot87
 selected true
 xpos -3186
 ypos 12138
}
push $Nb9554800
push $Nc6386800
NoOp {
 name fc_Doppelganger7
 tile_color 0x512410ff
 label "\n\[knob Name]\n\n-"
 note_font "Verdana Bold"
 note_font_size 15
 note_font_color 0x94dcfeff
 selected true
 xpos -3560
 ypos 11354
 hide_input true
 addUserKnob {20 TG}
 addUserKnob {26 ""}
 addUserKnob {26 Divider l "<font color=\"lightblue\">Name" -STARTLINE}
 addUserKnob {1 Name l "" t "Type the name of the node you want to connect to in here" +STARTLINE}
 Name ENV
 addUserKnob {22 Connect l "<font color=\"lightblue\">Connect" -STARTLINE T "THIS = nuke.thisNode()\nPARENT = THIS\['Name'].getValue()\nE = nuke.exists(PARENT)\n\nif E == True:\n    v = nuke.toNode(PARENT)\n    THIS.setInput(0,v)\n    firstInput = THIS.input(0) \n    colour = firstInput\['tile_color'].getValue()\n    if firstInput is not None:\n        THIS\['tile_color'].setValue(int(colour)) \n    else: \n        pass\n    \nelse:\n    pass\n    nuke.message('There is no node named that')\n    \n\nnukescripts.clear_selection_recursive() \n\n\n"}
 addUserKnob {26 ""}
 addUserKnob {22 Find l "<font color=\"lightblue\">Find Connected" t "This will show you the node Doppelganger is connected to" -STARTLINE T "THIS = nuke.thisNode()\nPARENT = THIS.knob('Name').getValue()\nE = nuke.exists(PARENT)\n\nif E == True:\n    v = nuke.toNode(PARENT)\n    nuke.zoom( 2, \[ v.xpos(), v.ypos() ])\nelse:\n    pass\n    nuke.message('Cannot find that node')\n    \n\nnukescripts.clear_selection_recursive() \n\n"}
 addUserKnob {22 ConnectAll l "<font color=\"lightblue\">Connect all Doppelgangers" t "This will connect all Doppelgangers in your script. Handy if you have pasted a large script" -STARTLINE T "for s in nuke.allNodes():\n    classTypes = \['NoOp']\n    for n in classTypes:\n        if n in s.Class():\n            try:\n                s\['Connect'].execute()\n            except:\n                pass"}
 addUserKnob {26 ""}
 addUserKnob {20 Help}
 addUserKnob {26 ""}
 addUserKnob {26 Tip l :?: T "Doppelganger acts as a bridge between your Read nodes and your script\n\nUse this instead of duplicating a camera or geo or a plate over and over\n\nJust type in the name of the node and press connect\n\nAs a tip, add a NoOp underneath your Plate and call it 'Plate'. This will then make it easier to remember\n\nAny questions contact Thomas Greenhalgh\ntomgreenhalgh125@gmail.com\n"}
 addUserKnob {26 ""}
}
Merge2 {
 inputs 2
 operation stencil
 name Merge8
 selected true
 xpos -3560
 ypos 11488
}
Dot {
 name Dot89
 selected true
 xpos -3526
 ypos 11538
}
set Nbab1f400 [stack 0]
Dot {
 name Dot90
 selected true
 xpos -3680
 ypos 11538
}
Dot {
 name Dot88
 selected true
 xpos -3680
 ypos 11970
}
Group {
 name fc_ExponGlow1
 onCreate "n = nuke.thisNode()\nn.knob('size').setRange(0, 5)\nn.knob('exp').setRange(0, 4)\nn.knob('adjustBBoxPixels').setRange(0, 400)\nn.knob('adjustBBoxPercent').setRange(1, 2)\nn.knob('safeBBoxPixels').setRange(0, 400)\nn.knob('safeBBoxPercent').setRange(1, 2)"
 knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"includeOriginal\":\n    if n.knob('includeOriginal').getValue() == 1:\n        merge = nuke.toNode(\"Merge1\")\n        original = nuke.toNode('Original')\n        AvgMult = nuke.toNode(\"AverageMult\")\n        steps = int(n.knob('steps').getValue())\n        merge.setInput(steps+1, original)\n        AvgMult\['whitepoint'].setValue(2 if steps<2 else steps+1)\n\n    else:\n        merge.setInput(steps+1, None)\n        AvgMult\['whitepoint'].setValue(2 if steps<2 else steps)\n\nelif k.name() == \"steps\":\n\n    s = int(k.value())\n    if s<1:\n        k.setValue(1)\n    else:\n        start = nuke.toNode(\"Start\")\n        end   = nuke.toNode(\"End\")\n        b1    = nuke.toNode(\"Blur1\")\n        m1    = nuke.toNode(\"Multiply1\")\n        merge = nuke.toNode(\"Merge1\")\n        AvgMult = nuke.toNode(\"AverageMult\")\n\n        b1x   = b1.xpos()\n        b1y   = b1.ypos()\n        b1n   = b1.name()\n\n        m1x   = m1.xpos()\n        m1y   = m1.ypos()\n        m1n   = m1.name()\n\n        steps = int(n.knob('steps').getValue())\n        size  = n.knob('size').getValue()\n        mult  = n.knob('exp').getValue()\n\n        #b1.setInput(0, start)\n        for i in range(1,merge.inputs()):\n            merge.setInput(i,None)\n        merge.setInput(0, m1)\n        \[nuke.delete(i) for i in nuke.allNodes() if i.xpos()>start.xpos()]\n        for i in range(1,steps):\n            # Blur\n            b = nuke.nodes.Blur()\n            m = nuke.nodes.Multiply()\n            b.setXYpos(b1x+i*100,b1y)\n            b.setInput(0,start)\n            b\[\"channels\"].setValue(\"all\")\n            b\[\"crop\"].setValue(0)\n            b\[\"size\"].setValue(0, 1)\n            b\[\"size\"].setExpression( \"(width/25*pow(parent.size*\{\}, parent.exp.w))*((aspectCalc.aspect.w/100))\".format(str(i+1)), 0 )\n            b\[\"size\"].setExpression( \"(height/25*pow(parent.size*\{\}, parent.exp.h))*((aspectCalc.aspect.h/100))\".format(str(i+1)), 1 )\n            b\[\"label\"].setValue('')\n            blurAbove = b.name()\n\n            m.setXYpos(m1x+i*100,m1y)\n            m.setInput(0, nuke.toNode(blurAbove))\n            m\[\"channels\"].setValue(\"all\")\n            m\[\"value\"].setValue(1,1,1,1)\n            j = 1-(i/steps)\n            m\[\"value\"].setExpression('falloffType == 0 ? \{\} :falloffType == 1 ? pow(\{\}, 3) : falloffType == 2 ? \{\}*\{\}*(3-2*\{\}) : falloffType == 3 ? \{\}*\{\}*(2 - \{\}) : falloffType == 4 ? \{\}*(1 + \{\}*(1 - \{\})) : 0'.format(j,j,j,j,j,j,j,j,j,j,j))\n            m\[\"mix\"].setExpression(\"falloff\")\n            m\[\"label\"].setValue('')\n\n            merge.setInput(i if i<2 else i+1, m)\n            AvgMult\['whitepoint'].setValue(i if i<2 else i+1)\n\n        if n.knob('includeOriginal').getValue() == 1:\n            merge = nuke.toNode(\"Merge1\")\n            original = nuke.toNode('Original')\n            AvgMult = nuke.toNode(\"AverageMult\")\n            steps = int(n.knob('steps').getValue())\n            merge.setInput(steps+1, original)\n            AvgMult\['whitepoint'].setValue(2 if steps<2 else steps+1)\n\nelif k.name() == \"output2\":\n    if n.knob(\"output2\").getValue() == 4:\n        n.knob('AvgMaxOriginal').setVisible(True)\n    else:\n        n.knob('AvgMaxOriginal').setVisible(False)\n\nelif k.name() == \"safeBBox\":\n    if n.knob(\"safeBBox\").getValue() == 0:\n        n.knob('safeBBoxText').setVisible(False)\n        n.knob('safetyBBoxMethod').setVisible(False)\n        n.knob('safeBBoxPixels').setVisible(False)\n        n.knob('safeBBoxPercent').setVisible(False)\n\n    elif n.knob(\"safeBBox\").getValue() == 1:\n        n.knob('safetyBBoxMethod').setVisible(True)\n        n.knob('safeBBoxText').setVisible(True)\n        if n.knob('safetyBBoxMethod').value() == \"pixels\":\n            n.knob('safeBBoxPixels').setVisible(True)\n            n.knob('safeBBoxPercent').setVisible(False)\n        elif n.knob('safetyBBoxMethod').value() == \"percent\":\n            n.knob('safeBBoxPixels').setVisible(False)\n            n.knob('safeBBoxPercent').setVisible(True)\n\nelif k.name() == \"safetyBBoxMethod\":\n    if n.knob(\"safetyBBoxMethod\").value() == \"pixels\":\n        n.knob('safeBBoxPixels').setVisible(True)\n        n.knob('safeBBoxPercent').setVisible(False)\n    elif n.knob(\"safetyBBoxMethod\").value() == \"percent\":\n        n.knob('safeBBoxPixels').setVisible(False)\n        n.knob('safeBBoxPercent').setVisible(True)\n\nelif k.name() == \"adjustBBoxExtra\":\n    if n.knob(\"adjustBBoxExtra\").value() == \"pixels\":\n        n.knob('adjustBBoxPixels').setVisible(True)\n        n.knob('adjustBBoxPercent').setVisible(False)\n    elif n.knob(\"adjustBBoxExtra\").value() == \"percent\":\n        n.knob('adjustBBoxPixels').setVisible(False)\n        n.knob('adjustBBoxPercent').setVisible(True)\n"
 tile_color 0xcc804eff
 label "(\[value output2])"
 note_font "Verdana Bold"
 note_font_color 0xffffffff
 selected true
 xpos -3560
 ypos 11961
 addUserKnob {20 ExponGlow}
 addUserKnob {41 channels T Remove1.channels}
 addUserKnob {41 maskChannelMask_1 l area T MultiplyArea.maskChannelMask}
 addUserKnob {41 inject_1 l inject -STARTLINE T MultiplyArea.inject}
 addUserKnob {41 invert_mask_1 l invert -STARTLINE T MultiplyArea.invert_mask}
 addUserKnob {41 fringe_1 l fringe -STARTLINE T MultiplyArea.fringe}
 addUserKnob {26 ""}
 addUserKnob {26 ToleranceTitle l Tolerance T " "}
 addUserKnob {6 tolerance_2 l " " -STARTLINE}
 tolerance_2 true
 addUserKnob {7 tolerance l "" -STARTLINE R 0 4}
 tolerance 1
 addUserKnob {4 output2 l Operation M {Screen Plus Over Hypot Average Max Min ""}}
 output2 Plus
 addUserKnob {3 steps l "  Steps" -STARTLINE}
 steps 40
 addUserKnob {26 text l " " -STARTLINE T " "}
 addUserKnob {6 includeOriginal l "Include Original?" -STARTLINE}
 addUserKnob {19 intensity l Intensity R 0 4}
 intensity 1
 addUserKnob {6 intensity_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 intensity_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 intensity_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 text_1 l " "}
 addUserKnob {6 AvgMaxOriginal l "Use Max of Average and Original" +HIDDEN +STARTLINE}
 addUserKnob {14 size l Size R 0 5}
 size 0.1
 addUserKnob {14 exp l Exponent R 0 4}
 exp 3
 addUserKnob {6 color_rgba_panelDropped l "panel dropped state" +HIDDEN +STARTLINE}
 addUserKnob {4 falloffType l Falloff M {Linear pLinear smooth smooth0 smooth1 "" ""}}
 addUserKnob {7 falloff l "" -STARTLINE}
 falloff 1.1
 addUserKnob {26 text_4 l " "}
 addUserKnob {6 color_rgba_panelDropped_1 l "panel dropped state" +HIDDEN +STARTLINE}
 addUserKnob {14 postBlur l "Post Blur" R 0 100}
 addUserKnob {6 effectOnly l "<font color = dark gray>.<b><font color = skyblue>   Effect Only" +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {20 bboxControl l "BBox Control" n 1}
 bboxControl 0
 addUserKnob {26 text_2 l " " T " "}
 addUserKnob {4 bbox l "BBox: " -STARTLINE M {union intersectionMask A B "input format" "" "" "" "" "" "" "" "" "" "" "" ""}}
 addUserKnob {6 blackOutside l "Black Outside" -STARTLINE}
 addUserKnob {6 safeBBox l "Safe BBox" t "If the output BBox is larger than the input format and the input box combined. the result will be max of the input/format bbox plus a safety \"buffer\" in pixels or percent \n\nTurning off might make your BBox grow exponentially with high blur values" -STARTLINE}
 safeBBox true
 addUserKnob {26 safeBBoxText l "" +STARTLINE T " "}
 addUserKnob {4 safetyBBoxMethod l "Safe BBox Buffer  " -STARTLINE M {pixels percent "" "" "" "" "" "" "" "" "" "" "" "" "" "" ""}}
 safetyBBoxMethod percent
 addUserKnob {14 safeBBoxPixels l "" -STARTLINE +HIDDEN R 0 400}
 safeBBoxPixels 100
 addUserKnob {14 safeBBoxPercent l "" -STARTLINE R 1 2}
 safeBBoxPercent 1.1
 addUserKnob {26 text_3 l "" +STARTLINE T " "}
 addUserKnob {4 adjustBBoxExtra l "Extra BBox Adjust" -STARTLINE M {pixels percent "" "" "" "" "" "" "" "" "" "" "" "" ""}}
 addUserKnob {14 adjustBBoxPercent l "" -STARTLINE +HIDDEN R 1 2}
 adjustBBoxPercent 1
 addUserKnob {14 adjustBBoxPixels l "" -STARTLINE R 0 400}
 addUserKnob {26 ""}
 addUserKnob {20 endGroup n -1}
 addUserKnob {41 maskChannelMask l mask T MergeKeymix.maskChannelMask}
 addUserKnob {41 inject -STARTLINE T MergeKeymix.inject}
 addUserKnob {41 invert_mask l invert -STARTLINE T MergeKeymix.invert_mask}
 addUserKnob {41 fringe -STARTLINE T MergeKeymix.fringe}
 addUserKnob {41 mix T MergeKeymix.mix}
 addUserKnob {20 info l Info}
 addUserKnob {26 creator l Creator: T "Tony Lyons"}
 addUserKnob {26 desc l Description: T ExponGlow}
 addUserKnob {26 ver l Version: T v03}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x535e5a00
  label "BBox Management"
  note_font_size 30
  note_font_color 0xffffffff
  xpos -529
  ypos 636
  bdwidth 341
  bdheight 525
 }
 Input {
  inputs 0
  name Inputimg
  xpos 0
  ypos -1449
 }
 Dot {
  name Dot16
  note_font_size 41
  xpos 34
  ypos -1282
 }
set Nbcde2c00 [stack 0]
 Dot {
  name Dot2
  note_font_size 41
  xpos -367
  ypos -1282
 }
 Dot {
  name Dot25
  note_font_size 41
  xpos -367
  ypos 360
 }
 Dot {
  name Dot18
  label B
  note_font_size 41
  xpos -367
  ypos 578
 }
 Dot {
  name Dot11
  note_font_size 41
  xpos -367
  ypos 767
 }
set Nbcde3c00 [stack 0]
 Dot {
  name Dot3
  note_font_size 41
  xpos -367
  ypos 819
 }
set Nbce08000 [stack 0]
 Dot {
  name Dot8
  note_font_size 41
  xpos -463
  ypos 819
 }
 Dot {
  name Dot15
  note_font_size 41
  xpos -463
  ypos 975
 }
 Crop {
  inputs 0
  box {{"!\[exists parent.input0] ? 0 : input.format.x"} {"!\[exists parent.input0] ? 0 : input.format.y"} {"!\[exists parent.input0] ? 0 : input.format.r"} {"!\[exists parent.input0] ? 0 : input.format.t"}}
  reformat true
  crop false
  name Crop1
  xpos 210
  ypos -1006
  addUserKnob {20 User}
  addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
 }
 AddChannels {
  channels rgba
  name AddChannels2
  xpos 210
  ypos -980
 }
push $Nbcde2c00
 Merge2 {
  inputs 2
  name Merge3
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos 83
  ypos -927
 }
 NoOp {
  name BBoxInput
  xpos 83
  ypos -884
  addUserKnob {20 User}
  addUserKnob {15 bbox}
  bbox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
 }
 Dot {
  name Dot23
  note_font_size 41
  xpos 117
  ypos -146
 }
 Input {
  inputs 0
  name Inputarea
  xpos 289
  ypos -894
  number 2
 }
 AddChannels {
  channels alpha
  color 1
  name AddChannels1
  xpos 289
  ypos -836
 }
 Invert {
  channels rgba
  name Invert3
  xpos 289
  ypos -759
 }
push $Nbcde2c00
 Dot {
  name Dot1
  note_font_size 41
  xpos 461
  ypos -1282
 }
 Remove {
  operation keep
  channels rgba
  name Remove1
  xpos 427
  ypos -1213
 }
 NoOp {
  name aspectCalc
  xpos 427
  ypos -1155
  addUserKnob {20 User}
  addUserKnob {14 aspect R 0 100}
  aspect {{parent.size.w} {(parent.size.h/format.pixel_aspect/height*width)*format.pixel_aspect}}
 }
 Dot {
  name Dot21
  note_font_size 41
  xpos 461
  ypos -1026
 }
set Nb643f800 [stack 0]
 Invert {
  name Invert1
  xpos 864
  ypos -1033
  disable {{"parent.size < 0 ? 0 : 1"}}
 }
set Nb643fc00 [stack 0]
 Keyer {
  operation "luminance key"
  range {{parent.tolerance} {range.A+parent.tolerance+1} {range.B} {range.B}}
  name Keyer1
  xpos 774
  ypos -967
  disable {{!tolerance_2}}
 }
 Premult {
  channels all
  name Premult1
  xpos 774
  ypos -910
  disable {{!tolerance_2}}
 }
push $Nb643fc00
 Dissolve {
  inputs 2
  channels rgba
  which {{"parent.tolerance < 1 ? parent.tolerance : 1"}}
  name Dissolve1
  label "\[value which]"
  xpos 864
  ypos -857
 }
 Multiply {
  inputs 1+1
  value 0
  name MultiplyArea
  label "\[value value]"
  xpos 864
  ypos -768
 }
set Nb6464c00 [stack 0]
 NoOp {
  name Start
  xpos 864
  ypos -706
 }
set Nb6465000 [stack 0]
 Blur {
  size {{"(width/25*pow(parent.size*40, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*40, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur40
  xpos 4764
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.025000000000000022 :falloffType == 1 ? pow(0.025000000000000022, 3) : falloffType == 2 ? 0.025000000000000022*0.025000000000000022*(3-2*0.025000000000000022) : falloffType == 3 ? 0.025000000000000022*0.025000000000000022*(2 - 0.025000000000000022) : falloffType == 4 ? 0.025000000000000022*(1 + 0.025000000000000022*(1 - 0.025000000000000022)) : 0"} {"falloffType == 0 ? 0.025000000000000022 :falloffType == 1 ? pow(0.025000000000000022, 3) : falloffType == 2 ? 0.025000000000000022*0.025000000000000022*(3-2*0.025000000000000022) : falloffType == 3 ? 0.025000000000000022*0.025000000000000022*(2 - 0.025000000000000022) : falloffType == 4 ? 0.025000000000000022*(1 + 0.025000000000000022*(1 - 0.025000000000000022)) : 0"} {"falloffType == 0 ? 0.025000000000000022 :falloffType == 1 ? pow(0.025000000000000022, 3) : falloffType == 2 ? 0.025000000000000022*0.025000000000000022*(3-2*0.025000000000000022) : falloffType == 3 ? 0.025000000000000022*0.025000000000000022*(2 - 0.025000000000000022) : falloffType == 4 ? 0.025000000000000022*(1 + 0.025000000000000022*(1 - 0.025000000000000022)) : 0"} {"falloffType == 0 ? 0.025000000000000022 :falloffType == 1 ? pow(0.025000000000000022, 3) : falloffType == 2 ? 0.025000000000000022*0.025000000000000022*(3-2*0.025000000000000022) : falloffType == 3 ? 0.025000000000000022*0.025000000000000022*(2 - 0.025000000000000022) : falloffType == 4 ? 0.025000000000000022*(1 + 0.025000000000000022*(1 - 0.025000000000000022)) : 0"}}
  mix {{falloff}}
  name Multiply42
  xpos 4764
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*39, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*39, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur39
  xpos 4664
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.050000000000000044 :falloffType == 1 ? pow(0.050000000000000044, 3) : falloffType == 2 ? 0.050000000000000044*0.050000000000000044*(3-2*0.050000000000000044) : falloffType == 3 ? 0.050000000000000044*0.050000000000000044*(2 - 0.050000000000000044) : falloffType == 4 ? 0.050000000000000044*(1 + 0.050000000000000044*(1 - 0.050000000000000044)) : 0"} {"falloffType == 0 ? 0.050000000000000044 :falloffType == 1 ? pow(0.050000000000000044, 3) : falloffType == 2 ? 0.050000000000000044*0.050000000000000044*(3-2*0.050000000000000044) : falloffType == 3 ? 0.050000000000000044*0.050000000000000044*(2 - 0.050000000000000044) : falloffType == 4 ? 0.050000000000000044*(1 + 0.050000000000000044*(1 - 0.050000000000000044)) : 0"} {"falloffType == 0 ? 0.050000000000000044 :falloffType == 1 ? pow(0.050000000000000044, 3) : falloffType == 2 ? 0.050000000000000044*0.050000000000000044*(3-2*0.050000000000000044) : falloffType == 3 ? 0.050000000000000044*0.050000000000000044*(2 - 0.050000000000000044) : falloffType == 4 ? 0.050000000000000044*(1 + 0.050000000000000044*(1 - 0.050000000000000044)) : 0"} {"falloffType == 0 ? 0.050000000000000044 :falloffType == 1 ? pow(0.050000000000000044, 3) : falloffType == 2 ? 0.050000000000000044*0.050000000000000044*(3-2*0.050000000000000044) : falloffType == 3 ? 0.050000000000000044*0.050000000000000044*(2 - 0.050000000000000044) : falloffType == 4 ? 0.050000000000000044*(1 + 0.050000000000000044*(1 - 0.050000000000000044)) : 0"}}
  mix {{falloff}}
  name Multiply41
  xpos 4664
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*38, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*38, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur38
  xpos 4564
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.07499999999999996 :falloffType == 1 ? pow(0.07499999999999996, 3) : falloffType == 2 ? 0.07499999999999996*0.07499999999999996*(3-2*0.07499999999999996) : falloffType == 3 ? 0.07499999999999996*0.07499999999999996*(2 - 0.07499999999999996) : falloffType == 4 ? 0.07499999999999996*(1 + 0.07499999999999996*(1 - 0.07499999999999996)) : 0"} {"falloffType == 0 ? 0.07499999999999996 :falloffType == 1 ? pow(0.07499999999999996, 3) : falloffType == 2 ? 0.07499999999999996*0.07499999999999996*(3-2*0.07499999999999996) : falloffType == 3 ? 0.07499999999999996*0.07499999999999996*(2 - 0.07499999999999996) : falloffType == 4 ? 0.07499999999999996*(1 + 0.07499999999999996*(1 - 0.07499999999999996)) : 0"} {"falloffType == 0 ? 0.07499999999999996 :falloffType == 1 ? pow(0.07499999999999996, 3) : falloffType == 2 ? 0.07499999999999996*0.07499999999999996*(3-2*0.07499999999999996) : falloffType == 3 ? 0.07499999999999996*0.07499999999999996*(2 - 0.07499999999999996) : falloffType == 4 ? 0.07499999999999996*(1 + 0.07499999999999996*(1 - 0.07499999999999996)) : 0"} {"falloffType == 0 ? 0.07499999999999996 :falloffType == 1 ? pow(0.07499999999999996, 3) : falloffType == 2 ? 0.07499999999999996*0.07499999999999996*(3-2*0.07499999999999996) : falloffType == 3 ? 0.07499999999999996*0.07499999999999996*(2 - 0.07499999999999996) : falloffType == 4 ? 0.07499999999999996*(1 + 0.07499999999999996*(1 - 0.07499999999999996)) : 0"}}
  mix {{falloff}}
  name Multiply40
  xpos 4564
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*37, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*37, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur37
  xpos 4464
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.09999999999999998 :falloffType == 1 ? pow(0.09999999999999998, 3) : falloffType == 2 ? 0.09999999999999998*0.09999999999999998*(3-2*0.09999999999999998) : falloffType == 3 ? 0.09999999999999998*0.09999999999999998*(2 - 0.09999999999999998) : falloffType == 4 ? 0.09999999999999998*(1 + 0.09999999999999998*(1 - 0.09999999999999998)) : 0"} {"falloffType == 0 ? 0.09999999999999998 :falloffType == 1 ? pow(0.09999999999999998, 3) : falloffType == 2 ? 0.09999999999999998*0.09999999999999998*(3-2*0.09999999999999998) : falloffType == 3 ? 0.09999999999999998*0.09999999999999998*(2 - 0.09999999999999998) : falloffType == 4 ? 0.09999999999999998*(1 + 0.09999999999999998*(1 - 0.09999999999999998)) : 0"} {"falloffType == 0 ? 0.09999999999999998 :falloffType == 1 ? pow(0.09999999999999998, 3) : falloffType == 2 ? 0.09999999999999998*0.09999999999999998*(3-2*0.09999999999999998) : falloffType == 3 ? 0.09999999999999998*0.09999999999999998*(2 - 0.09999999999999998) : falloffType == 4 ? 0.09999999999999998*(1 + 0.09999999999999998*(1 - 0.09999999999999998)) : 0"} {"falloffType == 0 ? 0.09999999999999998 :falloffType == 1 ? pow(0.09999999999999998, 3) : falloffType == 2 ? 0.09999999999999998*0.09999999999999998*(3-2*0.09999999999999998) : falloffType == 3 ? 0.09999999999999998*0.09999999999999998*(2 - 0.09999999999999998) : falloffType == 4 ? 0.09999999999999998*(1 + 0.09999999999999998*(1 - 0.09999999999999998)) : 0"}}
  mix {{falloff}}
  name Multiply39
  xpos 4464
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*36, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*36, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur36
  xpos 4364
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.125 :falloffType == 1 ? pow(0.125, 3) : falloffType == 2 ? 0.125*0.125*(3-2*0.125) : falloffType == 3 ? 0.125*0.125*(2 - 0.125) : falloffType == 4 ? 0.125*(1 + 0.125*(1 - 0.125)) : 0"} {"falloffType == 0 ? 0.125 :falloffType == 1 ? pow(0.125, 3) : falloffType == 2 ? 0.125*0.125*(3-2*0.125) : falloffType == 3 ? 0.125*0.125*(2 - 0.125) : falloffType == 4 ? 0.125*(1 + 0.125*(1 - 0.125)) : 0"} {"falloffType == 0 ? 0.125 :falloffType == 1 ? pow(0.125, 3) : falloffType == 2 ? 0.125*0.125*(3-2*0.125) : falloffType == 3 ? 0.125*0.125*(2 - 0.125) : falloffType == 4 ? 0.125*(1 + 0.125*(1 - 0.125)) : 0"} {"falloffType == 0 ? 0.125 :falloffType == 1 ? pow(0.125, 3) : falloffType == 2 ? 0.125*0.125*(3-2*0.125) : falloffType == 3 ? 0.125*0.125*(2 - 0.125) : falloffType == 4 ? 0.125*(1 + 0.125*(1 - 0.125)) : 0"}}
  mix {{falloff}}
  name Multiply38
  xpos 4364
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*35, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*35, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur35
  xpos 4264
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.15000000000000002 :falloffType == 1 ? pow(0.15000000000000002, 3) : falloffType == 2 ? 0.15000000000000002*0.15000000000000002*(3-2*0.15000000000000002) : falloffType == 3 ? 0.15000000000000002*0.15000000000000002*(2 - 0.15000000000000002) : falloffType == 4 ? 0.15000000000000002*(1 + 0.15000000000000002*(1 - 0.15000000000000002)) : 0"} {"falloffType == 0 ? 0.15000000000000002 :falloffType == 1 ? pow(0.15000000000000002, 3) : falloffType == 2 ? 0.15000000000000002*0.15000000000000002*(3-2*0.15000000000000002) : falloffType == 3 ? 0.15000000000000002*0.15000000000000002*(2 - 0.15000000000000002) : falloffType == 4 ? 0.15000000000000002*(1 + 0.15000000000000002*(1 - 0.15000000000000002)) : 0"} {"falloffType == 0 ? 0.15000000000000002 :falloffType == 1 ? pow(0.15000000000000002, 3) : falloffType == 2 ? 0.15000000000000002*0.15000000000000002*(3-2*0.15000000000000002) : falloffType == 3 ? 0.15000000000000002*0.15000000000000002*(2 - 0.15000000000000002) : falloffType == 4 ? 0.15000000000000002*(1 + 0.15000000000000002*(1 - 0.15000000000000002)) : 0"} {"falloffType == 0 ? 0.15000000000000002 :falloffType == 1 ? pow(0.15000000000000002, 3) : falloffType == 2 ? 0.15000000000000002*0.15000000000000002*(3-2*0.15000000000000002) : falloffType == 3 ? 0.15000000000000002*0.15000000000000002*(2 - 0.15000000000000002) : falloffType == 4 ? 0.15000000000000002*(1 + 0.15000000000000002*(1 - 0.15000000000000002)) : 0"}}
  mix {{falloff}}
  name Multiply37
  xpos 4264
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*34, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*34, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur34
  xpos 4164
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.17500000000000004 :falloffType == 1 ? pow(0.17500000000000004, 3) : falloffType == 2 ? 0.17500000000000004*0.17500000000000004*(3-2*0.17500000000000004) : falloffType == 3 ? 0.17500000000000004*0.17500000000000004*(2 - 0.17500000000000004) : falloffType == 4 ? 0.17500000000000004*(1 + 0.17500000000000004*(1 - 0.17500000000000004)) : 0"} {"falloffType == 0 ? 0.17500000000000004 :falloffType == 1 ? pow(0.17500000000000004, 3) : falloffType == 2 ? 0.17500000000000004*0.17500000000000004*(3-2*0.17500000000000004) : falloffType == 3 ? 0.17500000000000004*0.17500000000000004*(2 - 0.17500000000000004) : falloffType == 4 ? 0.17500000000000004*(1 + 0.17500000000000004*(1 - 0.17500000000000004)) : 0"} {"falloffType == 0 ? 0.17500000000000004 :falloffType == 1 ? pow(0.17500000000000004, 3) : falloffType == 2 ? 0.17500000000000004*0.17500000000000004*(3-2*0.17500000000000004) : falloffType == 3 ? 0.17500000000000004*0.17500000000000004*(2 - 0.17500000000000004) : falloffType == 4 ? 0.17500000000000004*(1 + 0.17500000000000004*(1 - 0.17500000000000004)) : 0"} {"falloffType == 0 ? 0.17500000000000004 :falloffType == 1 ? pow(0.17500000000000004, 3) : falloffType == 2 ? 0.17500000000000004*0.17500000000000004*(3-2*0.17500000000000004) : falloffType == 3 ? 0.17500000000000004*0.17500000000000004*(2 - 0.17500000000000004) : falloffType == 4 ? 0.17500000000000004*(1 + 0.17500000000000004*(1 - 0.17500000000000004)) : 0"}}
  mix {{falloff}}
  name Multiply36
  xpos 4164
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*33, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*33, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur33
  xpos 4064
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.19999999999999996 :falloffType == 1 ? pow(0.19999999999999996, 3) : falloffType == 2 ? 0.19999999999999996*0.19999999999999996*(3-2*0.19999999999999996) : falloffType == 3 ? 0.19999999999999996*0.19999999999999996*(2 - 0.19999999999999996) : falloffType == 4 ? 0.19999999999999996*(1 + 0.19999999999999996*(1 - 0.19999999999999996)) : 0"} {"falloffType == 0 ? 0.19999999999999996 :falloffType == 1 ? pow(0.19999999999999996, 3) : falloffType == 2 ? 0.19999999999999996*0.19999999999999996*(3-2*0.19999999999999996) : falloffType == 3 ? 0.19999999999999996*0.19999999999999996*(2 - 0.19999999999999996) : falloffType == 4 ? 0.19999999999999996*(1 + 0.19999999999999996*(1 - 0.19999999999999996)) : 0"} {"falloffType == 0 ? 0.19999999999999996 :falloffType == 1 ? pow(0.19999999999999996, 3) : falloffType == 2 ? 0.19999999999999996*0.19999999999999996*(3-2*0.19999999999999996) : falloffType == 3 ? 0.19999999999999996*0.19999999999999996*(2 - 0.19999999999999996) : falloffType == 4 ? 0.19999999999999996*(1 + 0.19999999999999996*(1 - 0.19999999999999996)) : 0"} {"falloffType == 0 ? 0.19999999999999996 :falloffType == 1 ? pow(0.19999999999999996, 3) : falloffType == 2 ? 0.19999999999999996*0.19999999999999996*(3-2*0.19999999999999996) : falloffType == 3 ? 0.19999999999999996*0.19999999999999996*(2 - 0.19999999999999996) : falloffType == 4 ? 0.19999999999999996*(1 + 0.19999999999999996*(1 - 0.19999999999999996)) : 0"}}
  mix {{falloff}}
  name Multiply35
  xpos 4064
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*32, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*32, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur32
  xpos 3964
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.22499999999999998 :falloffType == 1 ? pow(0.22499999999999998, 3) : falloffType == 2 ? 0.22499999999999998*0.22499999999999998*(3-2*0.22499999999999998) : falloffType == 3 ? 0.22499999999999998*0.22499999999999998*(2 - 0.22499999999999998) : falloffType == 4 ? 0.22499999999999998*(1 + 0.22499999999999998*(1 - 0.22499999999999998)) : 0"} {"falloffType == 0 ? 0.22499999999999998 :falloffType == 1 ? pow(0.22499999999999998, 3) : falloffType == 2 ? 0.22499999999999998*0.22499999999999998*(3-2*0.22499999999999998) : falloffType == 3 ? 0.22499999999999998*0.22499999999999998*(2 - 0.22499999999999998) : falloffType == 4 ? 0.22499999999999998*(1 + 0.22499999999999998*(1 - 0.22499999999999998)) : 0"} {"falloffType == 0 ? 0.22499999999999998 :falloffType == 1 ? pow(0.22499999999999998, 3) : falloffType == 2 ? 0.22499999999999998*0.22499999999999998*(3-2*0.22499999999999998) : falloffType == 3 ? 0.22499999999999998*0.22499999999999998*(2 - 0.22499999999999998) : falloffType == 4 ? 0.22499999999999998*(1 + 0.22499999999999998*(1 - 0.22499999999999998)) : 0"} {"falloffType == 0 ? 0.22499999999999998 :falloffType == 1 ? pow(0.22499999999999998, 3) : falloffType == 2 ? 0.22499999999999998*0.22499999999999998*(3-2*0.22499999999999998) : falloffType == 3 ? 0.22499999999999998*0.22499999999999998*(2 - 0.22499999999999998) : falloffType == 4 ? 0.22499999999999998*(1 + 0.22499999999999998*(1 - 0.22499999999999998)) : 0"}}
  mix {{falloff}}
  name Multiply34
  xpos 3964
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*31, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*31, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur31
  xpos 3864
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.25 :falloffType == 1 ? pow(0.25, 3) : falloffType == 2 ? 0.25*0.25*(3-2*0.25) : falloffType == 3 ? 0.25*0.25*(2 - 0.25) : falloffType == 4 ? 0.25*(1 + 0.25*(1 - 0.25)) : 0"} {"falloffType == 0 ? 0.25 :falloffType == 1 ? pow(0.25, 3) : falloffType == 2 ? 0.25*0.25*(3-2*0.25) : falloffType == 3 ? 0.25*0.25*(2 - 0.25) : falloffType == 4 ? 0.25*(1 + 0.25*(1 - 0.25)) : 0"} {"falloffType == 0 ? 0.25 :falloffType == 1 ? pow(0.25, 3) : falloffType == 2 ? 0.25*0.25*(3-2*0.25) : falloffType == 3 ? 0.25*0.25*(2 - 0.25) : falloffType == 4 ? 0.25*(1 + 0.25*(1 - 0.25)) : 0"} {"falloffType == 0 ? 0.25 :falloffType == 1 ? pow(0.25, 3) : falloffType == 2 ? 0.25*0.25*(3-2*0.25) : falloffType == 3 ? 0.25*0.25*(2 - 0.25) : falloffType == 4 ? 0.25*(1 + 0.25*(1 - 0.25)) : 0"}}
  mix {{falloff}}
  name Multiply33
  xpos 3864
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*30, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*30, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur30
  xpos 3764
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.275 :falloffType == 1 ? pow(0.275, 3) : falloffType == 2 ? 0.275*0.275*(3-2*0.275) : falloffType == 3 ? 0.275*0.275*(2 - 0.275) : falloffType == 4 ? 0.275*(1 + 0.275*(1 - 0.275)) : 0"} {"falloffType == 0 ? 0.275 :falloffType == 1 ? pow(0.275, 3) : falloffType == 2 ? 0.275*0.275*(3-2*0.275) : falloffType == 3 ? 0.275*0.275*(2 - 0.275) : falloffType == 4 ? 0.275*(1 + 0.275*(1 - 0.275)) : 0"} {"falloffType == 0 ? 0.275 :falloffType == 1 ? pow(0.275, 3) : falloffType == 2 ? 0.275*0.275*(3-2*0.275) : falloffType == 3 ? 0.275*0.275*(2 - 0.275) : falloffType == 4 ? 0.275*(1 + 0.275*(1 - 0.275)) : 0"} {"falloffType == 0 ? 0.275 :falloffType == 1 ? pow(0.275, 3) : falloffType == 2 ? 0.275*0.275*(3-2*0.275) : falloffType == 3 ? 0.275*0.275*(2 - 0.275) : falloffType == 4 ? 0.275*(1 + 0.275*(1 - 0.275)) : 0"}}
  mix {{falloff}}
  name Multiply32
  xpos 3764
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*29, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*29, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur29
  xpos 3664
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.30000000000000004 :falloffType == 1 ? pow(0.30000000000000004, 3) : falloffType == 2 ? 0.30000000000000004*0.30000000000000004*(3-2*0.30000000000000004) : falloffType == 3 ? 0.30000000000000004*0.30000000000000004*(2 - 0.30000000000000004) : falloffType == 4 ? 0.30000000000000004*(1 + 0.30000000000000004*(1 - 0.30000000000000004)) : 0"} {"falloffType == 0 ? 0.30000000000000004 :falloffType == 1 ? pow(0.30000000000000004, 3) : falloffType == 2 ? 0.30000000000000004*0.30000000000000004*(3-2*0.30000000000000004) : falloffType == 3 ? 0.30000000000000004*0.30000000000000004*(2 - 0.30000000000000004) : falloffType == 4 ? 0.30000000000000004*(1 + 0.30000000000000004*(1 - 0.30000000000000004)) : 0"} {"falloffType == 0 ? 0.30000000000000004 :falloffType == 1 ? pow(0.30000000000000004, 3) : falloffType == 2 ? 0.30000000000000004*0.30000000000000004*(3-2*0.30000000000000004) : falloffType == 3 ? 0.30000000000000004*0.30000000000000004*(2 - 0.30000000000000004) : falloffType == 4 ? 0.30000000000000004*(1 + 0.30000000000000004*(1 - 0.30000000000000004)) : 0"} {"falloffType == 0 ? 0.30000000000000004 :falloffType == 1 ? pow(0.30000000000000004, 3) : falloffType == 2 ? 0.30000000000000004*0.30000000000000004*(3-2*0.30000000000000004) : falloffType == 3 ? 0.30000000000000004*0.30000000000000004*(2 - 0.30000000000000004) : falloffType == 4 ? 0.30000000000000004*(1 + 0.30000000000000004*(1 - 0.30000000000000004)) : 0"}}
  mix {{falloff}}
  name Multiply31
  xpos 3664
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*28, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*28, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur28
  xpos 3564
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.32499999999999996 :falloffType == 1 ? pow(0.32499999999999996, 3) : falloffType == 2 ? 0.32499999999999996*0.32499999999999996*(3-2*0.32499999999999996) : falloffType == 3 ? 0.32499999999999996*0.32499999999999996*(2 - 0.32499999999999996) : falloffType == 4 ? 0.32499999999999996*(1 + 0.32499999999999996*(1 - 0.32499999999999996)) : 0"} {"falloffType == 0 ? 0.32499999999999996 :falloffType == 1 ? pow(0.32499999999999996, 3) : falloffType == 2 ? 0.32499999999999996*0.32499999999999996*(3-2*0.32499999999999996) : falloffType == 3 ? 0.32499999999999996*0.32499999999999996*(2 - 0.32499999999999996) : falloffType == 4 ? 0.32499999999999996*(1 + 0.32499999999999996*(1 - 0.32499999999999996)) : 0"} {"falloffType == 0 ? 0.32499999999999996 :falloffType == 1 ? pow(0.32499999999999996, 3) : falloffType == 2 ? 0.32499999999999996*0.32499999999999996*(3-2*0.32499999999999996) : falloffType == 3 ? 0.32499999999999996*0.32499999999999996*(2 - 0.32499999999999996) : falloffType == 4 ? 0.32499999999999996*(1 + 0.32499999999999996*(1 - 0.32499999999999996)) : 0"} {"falloffType == 0 ? 0.32499999999999996 :falloffType == 1 ? pow(0.32499999999999996, 3) : falloffType == 2 ? 0.32499999999999996*0.32499999999999996*(3-2*0.32499999999999996) : falloffType == 3 ? 0.32499999999999996*0.32499999999999996*(2 - 0.32499999999999996) : falloffType == 4 ? 0.32499999999999996*(1 + 0.32499999999999996*(1 - 0.32499999999999996)) : 0"}}
  mix {{falloff}}
  name Multiply30
  xpos 3564
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*27, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*27, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur27
  xpos 3464
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.35 :falloffType == 1 ? pow(0.35, 3) : falloffType == 2 ? 0.35*0.35*(3-2*0.35) : falloffType == 3 ? 0.35*0.35*(2 - 0.35) : falloffType == 4 ? 0.35*(1 + 0.35*(1 - 0.35)) : 0"} {"falloffType == 0 ? 0.35 :falloffType == 1 ? pow(0.35, 3) : falloffType == 2 ? 0.35*0.35*(3-2*0.35) : falloffType == 3 ? 0.35*0.35*(2 - 0.35) : falloffType == 4 ? 0.35*(1 + 0.35*(1 - 0.35)) : 0"} {"falloffType == 0 ? 0.35 :falloffType == 1 ? pow(0.35, 3) : falloffType == 2 ? 0.35*0.35*(3-2*0.35) : falloffType == 3 ? 0.35*0.35*(2 - 0.35) : falloffType == 4 ? 0.35*(1 + 0.35*(1 - 0.35)) : 0"} {"falloffType == 0 ? 0.35 :falloffType == 1 ? pow(0.35, 3) : falloffType == 2 ? 0.35*0.35*(3-2*0.35) : falloffType == 3 ? 0.35*0.35*(2 - 0.35) : falloffType == 4 ? 0.35*(1 + 0.35*(1 - 0.35)) : 0"}}
  mix {{falloff}}
  name Multiply29
  xpos 3464
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*26, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*26, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur26
  xpos 3364
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.375 :falloffType == 1 ? pow(0.375, 3) : falloffType == 2 ? 0.375*0.375*(3-2*0.375) : falloffType == 3 ? 0.375*0.375*(2 - 0.375) : falloffType == 4 ? 0.375*(1 + 0.375*(1 - 0.375)) : 0"} {"falloffType == 0 ? 0.375 :falloffType == 1 ? pow(0.375, 3) : falloffType == 2 ? 0.375*0.375*(3-2*0.375) : falloffType == 3 ? 0.375*0.375*(2 - 0.375) : falloffType == 4 ? 0.375*(1 + 0.375*(1 - 0.375)) : 0"} {"falloffType == 0 ? 0.375 :falloffType == 1 ? pow(0.375, 3) : falloffType == 2 ? 0.375*0.375*(3-2*0.375) : falloffType == 3 ? 0.375*0.375*(2 - 0.375) : falloffType == 4 ? 0.375*(1 + 0.375*(1 - 0.375)) : 0"} {"falloffType == 0 ? 0.375 :falloffType == 1 ? pow(0.375, 3) : falloffType == 2 ? 0.375*0.375*(3-2*0.375) : falloffType == 3 ? 0.375*0.375*(2 - 0.375) : falloffType == 4 ? 0.375*(1 + 0.375*(1 - 0.375)) : 0"}}
  mix {{falloff}}
  name Multiply28
  xpos 3364
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*25, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*25, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur25
  xpos 3264
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.4 :falloffType == 1 ? pow(0.4, 3) : falloffType == 2 ? 0.4*0.4*(3-2*0.4) : falloffType == 3 ? 0.4*0.4*(2 - 0.4) : falloffType == 4 ? 0.4*(1 + 0.4*(1 - 0.4)) : 0"} {"falloffType == 0 ? 0.4 :falloffType == 1 ? pow(0.4, 3) : falloffType == 2 ? 0.4*0.4*(3-2*0.4) : falloffType == 3 ? 0.4*0.4*(2 - 0.4) : falloffType == 4 ? 0.4*(1 + 0.4*(1 - 0.4)) : 0"} {"falloffType == 0 ? 0.4 :falloffType == 1 ? pow(0.4, 3) : falloffType == 2 ? 0.4*0.4*(3-2*0.4) : falloffType == 3 ? 0.4*0.4*(2 - 0.4) : falloffType == 4 ? 0.4*(1 + 0.4*(1 - 0.4)) : 0"} {"falloffType == 0 ? 0.4 :falloffType == 1 ? pow(0.4, 3) : falloffType == 2 ? 0.4*0.4*(3-2*0.4) : falloffType == 3 ? 0.4*0.4*(2 - 0.4) : falloffType == 4 ? 0.4*(1 + 0.4*(1 - 0.4)) : 0"}}
  mix {{falloff}}
  name Multiply27
  xpos 3264
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*24, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*24, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur24
  xpos 3164
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.42500000000000004 :falloffType == 1 ? pow(0.42500000000000004, 3) : falloffType == 2 ? 0.42500000000000004*0.42500000000000004*(3-2*0.42500000000000004) : falloffType == 3 ? 0.42500000000000004*0.42500000000000004*(2 - 0.42500000000000004) : falloffType == 4 ? 0.42500000000000004*(1 + 0.42500000000000004*(1 - 0.42500000000000004)) : 0"} {"falloffType == 0 ? 0.42500000000000004 :falloffType == 1 ? pow(0.42500000000000004, 3) : falloffType == 2 ? 0.42500000000000004*0.42500000000000004*(3-2*0.42500000000000004) : falloffType == 3 ? 0.42500000000000004*0.42500000000000004*(2 - 0.42500000000000004) : falloffType == 4 ? 0.42500000000000004*(1 + 0.42500000000000004*(1 - 0.42500000000000004)) : 0"} {"falloffType == 0 ? 0.42500000000000004 :falloffType == 1 ? pow(0.42500000000000004, 3) : falloffType == 2 ? 0.42500000000000004*0.42500000000000004*(3-2*0.42500000000000004) : falloffType == 3 ? 0.42500000000000004*0.42500000000000004*(2 - 0.42500000000000004) : falloffType == 4 ? 0.42500000000000004*(1 + 0.42500000000000004*(1 - 0.42500000000000004)) : 0"} {"falloffType == 0 ? 0.42500000000000004 :falloffType == 1 ? pow(0.42500000000000004, 3) : falloffType == 2 ? 0.42500000000000004*0.42500000000000004*(3-2*0.42500000000000004) : falloffType == 3 ? 0.42500000000000004*0.42500000000000004*(2 - 0.42500000000000004) : falloffType == 4 ? 0.42500000000000004*(1 + 0.42500000000000004*(1 - 0.42500000000000004)) : 0"}}
  mix {{falloff}}
  name Multiply26
  xpos 3164
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*23, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*23, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur23
  xpos 3064
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.44999999999999996 :falloffType == 1 ? pow(0.44999999999999996, 3) : falloffType == 2 ? 0.44999999999999996*0.44999999999999996*(3-2*0.44999999999999996) : falloffType == 3 ? 0.44999999999999996*0.44999999999999996*(2 - 0.44999999999999996) : falloffType == 4 ? 0.44999999999999996*(1 + 0.44999999999999996*(1 - 0.44999999999999996)) : 0"} {"falloffType == 0 ? 0.44999999999999996 :falloffType == 1 ? pow(0.44999999999999996, 3) : falloffType == 2 ? 0.44999999999999996*0.44999999999999996*(3-2*0.44999999999999996) : falloffType == 3 ? 0.44999999999999996*0.44999999999999996*(2 - 0.44999999999999996) : falloffType == 4 ? 0.44999999999999996*(1 + 0.44999999999999996*(1 - 0.44999999999999996)) : 0"} {"falloffType == 0 ? 0.44999999999999996 :falloffType == 1 ? pow(0.44999999999999996, 3) : falloffType == 2 ? 0.44999999999999996*0.44999999999999996*(3-2*0.44999999999999996) : falloffType == 3 ? 0.44999999999999996*0.44999999999999996*(2 - 0.44999999999999996) : falloffType == 4 ? 0.44999999999999996*(1 + 0.44999999999999996*(1 - 0.44999999999999996)) : 0"} {"falloffType == 0 ? 0.44999999999999996 :falloffType == 1 ? pow(0.44999999999999996, 3) : falloffType == 2 ? 0.44999999999999996*0.44999999999999996*(3-2*0.44999999999999996) : falloffType == 3 ? 0.44999999999999996*0.44999999999999996*(2 - 0.44999999999999996) : falloffType == 4 ? 0.44999999999999996*(1 + 0.44999999999999996*(1 - 0.44999999999999996)) : 0"}}
  mix {{falloff}}
  name Multiply25
  xpos 3064
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*22, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*22, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur22
  xpos 2964
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.475 :falloffType == 1 ? pow(0.475, 3) : falloffType == 2 ? 0.475*0.475*(3-2*0.475) : falloffType == 3 ? 0.475*0.475*(2 - 0.475) : falloffType == 4 ? 0.475*(1 + 0.475*(1 - 0.475)) : 0"} {"falloffType == 0 ? 0.475 :falloffType == 1 ? pow(0.475, 3) : falloffType == 2 ? 0.475*0.475*(3-2*0.475) : falloffType == 3 ? 0.475*0.475*(2 - 0.475) : falloffType == 4 ? 0.475*(1 + 0.475*(1 - 0.475)) : 0"} {"falloffType == 0 ? 0.475 :falloffType == 1 ? pow(0.475, 3) : falloffType == 2 ? 0.475*0.475*(3-2*0.475) : falloffType == 3 ? 0.475*0.475*(2 - 0.475) : falloffType == 4 ? 0.475*(1 + 0.475*(1 - 0.475)) : 0"} {"falloffType == 0 ? 0.475 :falloffType == 1 ? pow(0.475, 3) : falloffType == 2 ? 0.475*0.475*(3-2*0.475) : falloffType == 3 ? 0.475*0.475*(2 - 0.475) : falloffType == 4 ? 0.475*(1 + 0.475*(1 - 0.475)) : 0"}}
  mix {{falloff}}
  name Multiply24
  xpos 2964
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*21, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*21, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur21
  xpos 2864
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.5 :falloffType == 1 ? pow(0.5, 3) : falloffType == 2 ? 0.5*0.5*(3-2*0.5) : falloffType == 3 ? 0.5*0.5*(2 - 0.5) : falloffType == 4 ? 0.5*(1 + 0.5*(1 - 0.5)) : 0"} {"falloffType == 0 ? 0.5 :falloffType == 1 ? pow(0.5, 3) : falloffType == 2 ? 0.5*0.5*(3-2*0.5) : falloffType == 3 ? 0.5*0.5*(2 - 0.5) : falloffType == 4 ? 0.5*(1 + 0.5*(1 - 0.5)) : 0"} {"falloffType == 0 ? 0.5 :falloffType == 1 ? pow(0.5, 3) : falloffType == 2 ? 0.5*0.5*(3-2*0.5) : falloffType == 3 ? 0.5*0.5*(2 - 0.5) : falloffType == 4 ? 0.5*(1 + 0.5*(1 - 0.5)) : 0"} {"falloffType == 0 ? 0.5 :falloffType == 1 ? pow(0.5, 3) : falloffType == 2 ? 0.5*0.5*(3-2*0.5) : falloffType == 3 ? 0.5*0.5*(2 - 0.5) : falloffType == 4 ? 0.5*(1 + 0.5*(1 - 0.5)) : 0"}}
  mix {{falloff}}
  name Multiply23
  xpos 2864
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*20, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*20, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur20
  xpos 2764
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.525 :falloffType == 1 ? pow(0.525, 3) : falloffType == 2 ? 0.525*0.525*(3-2*0.525) : falloffType == 3 ? 0.525*0.525*(2 - 0.525) : falloffType == 4 ? 0.525*(1 + 0.525*(1 - 0.525)) : 0"} {"falloffType == 0 ? 0.525 :falloffType == 1 ? pow(0.525, 3) : falloffType == 2 ? 0.525*0.525*(3-2*0.525) : falloffType == 3 ? 0.525*0.525*(2 - 0.525) : falloffType == 4 ? 0.525*(1 + 0.525*(1 - 0.525)) : 0"} {"falloffType == 0 ? 0.525 :falloffType == 1 ? pow(0.525, 3) : falloffType == 2 ? 0.525*0.525*(3-2*0.525) : falloffType == 3 ? 0.525*0.525*(2 - 0.525) : falloffType == 4 ? 0.525*(1 + 0.525*(1 - 0.525)) : 0"} {"falloffType == 0 ? 0.525 :falloffType == 1 ? pow(0.525, 3) : falloffType == 2 ? 0.525*0.525*(3-2*0.525) : falloffType == 3 ? 0.525*0.525*(2 - 0.525) : falloffType == 4 ? 0.525*(1 + 0.525*(1 - 0.525)) : 0"}}
  mix {{falloff}}
  name Multiply22
  xpos 2764
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*19, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*19, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur19
  xpos 2664
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.55 :falloffType == 1 ? pow(0.55, 3) : falloffType == 2 ? 0.55*0.55*(3-2*0.55) : falloffType == 3 ? 0.55*0.55*(2 - 0.55) : falloffType == 4 ? 0.55*(1 + 0.55*(1 - 0.55)) : 0"} {"falloffType == 0 ? 0.55 :falloffType == 1 ? pow(0.55, 3) : falloffType == 2 ? 0.55*0.55*(3-2*0.55) : falloffType == 3 ? 0.55*0.55*(2 - 0.55) : falloffType == 4 ? 0.55*(1 + 0.55*(1 - 0.55)) : 0"} {"falloffType == 0 ? 0.55 :falloffType == 1 ? pow(0.55, 3) : falloffType == 2 ? 0.55*0.55*(3-2*0.55) : falloffType == 3 ? 0.55*0.55*(2 - 0.55) : falloffType == 4 ? 0.55*(1 + 0.55*(1 - 0.55)) : 0"} {"falloffType == 0 ? 0.55 :falloffType == 1 ? pow(0.55, 3) : falloffType == 2 ? 0.55*0.55*(3-2*0.55) : falloffType == 3 ? 0.55*0.55*(2 - 0.55) : falloffType == 4 ? 0.55*(1 + 0.55*(1 - 0.55)) : 0"}}
  mix {{falloff}}
  name Multiply21
  xpos 2664
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*18, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*18, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur18
  xpos 2564
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.575 :falloffType == 1 ? pow(0.575, 3) : falloffType == 2 ? 0.575*0.575*(3-2*0.575) : falloffType == 3 ? 0.575*0.575*(2 - 0.575) : falloffType == 4 ? 0.575*(1 + 0.575*(1 - 0.575)) : 0"} {"falloffType == 0 ? 0.575 :falloffType == 1 ? pow(0.575, 3) : falloffType == 2 ? 0.575*0.575*(3-2*0.575) : falloffType == 3 ? 0.575*0.575*(2 - 0.575) : falloffType == 4 ? 0.575*(1 + 0.575*(1 - 0.575)) : 0"} {"falloffType == 0 ? 0.575 :falloffType == 1 ? pow(0.575, 3) : falloffType == 2 ? 0.575*0.575*(3-2*0.575) : falloffType == 3 ? 0.575*0.575*(2 - 0.575) : falloffType == 4 ? 0.575*(1 + 0.575*(1 - 0.575)) : 0"} {"falloffType == 0 ? 0.575 :falloffType == 1 ? pow(0.575, 3) : falloffType == 2 ? 0.575*0.575*(3-2*0.575) : falloffType == 3 ? 0.575*0.575*(2 - 0.575) : falloffType == 4 ? 0.575*(1 + 0.575*(1 - 0.575)) : 0"}}
  mix {{falloff}}
  name Multiply20
  xpos 2564
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*17, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*17, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur17
  xpos 2464
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.6 :falloffType == 1 ? pow(0.6, 3) : falloffType == 2 ? 0.6*0.6*(3-2*0.6) : falloffType == 3 ? 0.6*0.6*(2 - 0.6) : falloffType == 4 ? 0.6*(1 + 0.6*(1 - 0.6)) : 0"} {"falloffType == 0 ? 0.6 :falloffType == 1 ? pow(0.6, 3) : falloffType == 2 ? 0.6*0.6*(3-2*0.6) : falloffType == 3 ? 0.6*0.6*(2 - 0.6) : falloffType == 4 ? 0.6*(1 + 0.6*(1 - 0.6)) : 0"} {"falloffType == 0 ? 0.6 :falloffType == 1 ? pow(0.6, 3) : falloffType == 2 ? 0.6*0.6*(3-2*0.6) : falloffType == 3 ? 0.6*0.6*(2 - 0.6) : falloffType == 4 ? 0.6*(1 + 0.6*(1 - 0.6)) : 0"} {"falloffType == 0 ? 0.6 :falloffType == 1 ? pow(0.6, 3) : falloffType == 2 ? 0.6*0.6*(3-2*0.6) : falloffType == 3 ? 0.6*0.6*(2 - 0.6) : falloffType == 4 ? 0.6*(1 + 0.6*(1 - 0.6)) : 0"}}
  mix {{falloff}}
  name Multiply19
  xpos 2464
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*16, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*16, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur16
  xpos 2364
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.625 :falloffType == 1 ? pow(0.625, 3) : falloffType == 2 ? 0.625*0.625*(3-2*0.625) : falloffType == 3 ? 0.625*0.625*(2 - 0.625) : falloffType == 4 ? 0.625*(1 + 0.625*(1 - 0.625)) : 0"} {"falloffType == 0 ? 0.625 :falloffType == 1 ? pow(0.625, 3) : falloffType == 2 ? 0.625*0.625*(3-2*0.625) : falloffType == 3 ? 0.625*0.625*(2 - 0.625) : falloffType == 4 ? 0.625*(1 + 0.625*(1 - 0.625)) : 0"} {"falloffType == 0 ? 0.625 :falloffType == 1 ? pow(0.625, 3) : falloffType == 2 ? 0.625*0.625*(3-2*0.625) : falloffType == 3 ? 0.625*0.625*(2 - 0.625) : falloffType == 4 ? 0.625*(1 + 0.625*(1 - 0.625)) : 0"} {"falloffType == 0 ? 0.625 :falloffType == 1 ? pow(0.625, 3) : falloffType == 2 ? 0.625*0.625*(3-2*0.625) : falloffType == 3 ? 0.625*0.625*(2 - 0.625) : falloffType == 4 ? 0.625*(1 + 0.625*(1 - 0.625)) : 0"}}
  mix {{falloff}}
  name Multiply18
  xpos 2364
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*15, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*15, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur15
  xpos 2264
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.65 :falloffType == 1 ? pow(0.65, 3) : falloffType == 2 ? 0.65*0.65*(3-2*0.65) : falloffType == 3 ? 0.65*0.65*(2 - 0.65) : falloffType == 4 ? 0.65*(1 + 0.65*(1 - 0.65)) : 0"} {"falloffType == 0 ? 0.65 :falloffType == 1 ? pow(0.65, 3) : falloffType == 2 ? 0.65*0.65*(3-2*0.65) : falloffType == 3 ? 0.65*0.65*(2 - 0.65) : falloffType == 4 ? 0.65*(1 + 0.65*(1 - 0.65)) : 0"} {"falloffType == 0 ? 0.65 :falloffType == 1 ? pow(0.65, 3) : falloffType == 2 ? 0.65*0.65*(3-2*0.65) : falloffType == 3 ? 0.65*0.65*(2 - 0.65) : falloffType == 4 ? 0.65*(1 + 0.65*(1 - 0.65)) : 0"} {"falloffType == 0 ? 0.65 :falloffType == 1 ? pow(0.65, 3) : falloffType == 2 ? 0.65*0.65*(3-2*0.65) : falloffType == 3 ? 0.65*0.65*(2 - 0.65) : falloffType == 4 ? 0.65*(1 + 0.65*(1 - 0.65)) : 0"}}
  mix {{falloff}}
  name Multiply17
  xpos 2264
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*14, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*14, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur14
  xpos 2164
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.675 :falloffType == 1 ? pow(0.675, 3) : falloffType == 2 ? 0.675*0.675*(3-2*0.675) : falloffType == 3 ? 0.675*0.675*(2 - 0.675) : falloffType == 4 ? 0.675*(1 + 0.675*(1 - 0.675)) : 0"} {"falloffType == 0 ? 0.675 :falloffType == 1 ? pow(0.675, 3) : falloffType == 2 ? 0.675*0.675*(3-2*0.675) : falloffType == 3 ? 0.675*0.675*(2 - 0.675) : falloffType == 4 ? 0.675*(1 + 0.675*(1 - 0.675)) : 0"} {"falloffType == 0 ? 0.675 :falloffType == 1 ? pow(0.675, 3) : falloffType == 2 ? 0.675*0.675*(3-2*0.675) : falloffType == 3 ? 0.675*0.675*(2 - 0.675) : falloffType == 4 ? 0.675*(1 + 0.675*(1 - 0.675)) : 0"} {"falloffType == 0 ? 0.675 :falloffType == 1 ? pow(0.675, 3) : falloffType == 2 ? 0.675*0.675*(3-2*0.675) : falloffType == 3 ? 0.675*0.675*(2 - 0.675) : falloffType == 4 ? 0.675*(1 + 0.675*(1 - 0.675)) : 0"}}
  mix {{falloff}}
  name Multiply16
  xpos 2164
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*13, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*13, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur13
  xpos 2064
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.7 :falloffType == 1 ? pow(0.7, 3) : falloffType == 2 ? 0.7*0.7*(3-2*0.7) : falloffType == 3 ? 0.7*0.7*(2 - 0.7) : falloffType == 4 ? 0.7*(1 + 0.7*(1 - 0.7)) : 0"} {"falloffType == 0 ? 0.7 :falloffType == 1 ? pow(0.7, 3) : falloffType == 2 ? 0.7*0.7*(3-2*0.7) : falloffType == 3 ? 0.7*0.7*(2 - 0.7) : falloffType == 4 ? 0.7*(1 + 0.7*(1 - 0.7)) : 0"} {"falloffType == 0 ? 0.7 :falloffType == 1 ? pow(0.7, 3) : falloffType == 2 ? 0.7*0.7*(3-2*0.7) : falloffType == 3 ? 0.7*0.7*(2 - 0.7) : falloffType == 4 ? 0.7*(1 + 0.7*(1 - 0.7)) : 0"} {"falloffType == 0 ? 0.7 :falloffType == 1 ? pow(0.7, 3) : falloffType == 2 ? 0.7*0.7*(3-2*0.7) : falloffType == 3 ? 0.7*0.7*(2 - 0.7) : falloffType == 4 ? 0.7*(1 + 0.7*(1 - 0.7)) : 0"}}
  mix {{falloff}}
  name Multiply15
  xpos 2064
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*12, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*12, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur12
  xpos 1964
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.725 :falloffType == 1 ? pow(0.725, 3) : falloffType == 2 ? 0.725*0.725*(3-2*0.725) : falloffType == 3 ? 0.725*0.725*(2 - 0.725) : falloffType == 4 ? 0.725*(1 + 0.725*(1 - 0.725)) : 0"} {"falloffType == 0 ? 0.725 :falloffType == 1 ? pow(0.725, 3) : falloffType == 2 ? 0.725*0.725*(3-2*0.725) : falloffType == 3 ? 0.725*0.725*(2 - 0.725) : falloffType == 4 ? 0.725*(1 + 0.725*(1 - 0.725)) : 0"} {"falloffType == 0 ? 0.725 :falloffType == 1 ? pow(0.725, 3) : falloffType == 2 ? 0.725*0.725*(3-2*0.725) : falloffType == 3 ? 0.725*0.725*(2 - 0.725) : falloffType == 4 ? 0.725*(1 + 0.725*(1 - 0.725)) : 0"} {"falloffType == 0 ? 0.725 :falloffType == 1 ? pow(0.725, 3) : falloffType == 2 ? 0.725*0.725*(3-2*0.725) : falloffType == 3 ? 0.725*0.725*(2 - 0.725) : falloffType == 4 ? 0.725*(1 + 0.725*(1 - 0.725)) : 0"}}
  mix {{falloff}}
  name Multiply14
  xpos 1964
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*11, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*11, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur11
  xpos 1864
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.75 :falloffType == 1 ? pow(0.75, 3) : falloffType == 2 ? 0.75*0.75*(3-2*0.75) : falloffType == 3 ? 0.75*0.75*(2 - 0.75) : falloffType == 4 ? 0.75*(1 + 0.75*(1 - 0.75)) : 0"} {"falloffType == 0 ? 0.75 :falloffType == 1 ? pow(0.75, 3) : falloffType == 2 ? 0.75*0.75*(3-2*0.75) : falloffType == 3 ? 0.75*0.75*(2 - 0.75) : falloffType == 4 ? 0.75*(1 + 0.75*(1 - 0.75)) : 0"} {"falloffType == 0 ? 0.75 :falloffType == 1 ? pow(0.75, 3) : falloffType == 2 ? 0.75*0.75*(3-2*0.75) : falloffType == 3 ? 0.75*0.75*(2 - 0.75) : falloffType == 4 ? 0.75*(1 + 0.75*(1 - 0.75)) : 0"} {"falloffType == 0 ? 0.75 :falloffType == 1 ? pow(0.75, 3) : falloffType == 2 ? 0.75*0.75*(3-2*0.75) : falloffType == 3 ? 0.75*0.75*(2 - 0.75) : falloffType == 4 ? 0.75*(1 + 0.75*(1 - 0.75)) : 0"}}
  mix {{falloff}}
  name Multiply13
  xpos 1864
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*10, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*10, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur10
  xpos 1764
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.775 :falloffType == 1 ? pow(0.775, 3) : falloffType == 2 ? 0.775*0.775*(3-2*0.775) : falloffType == 3 ? 0.775*0.775*(2 - 0.775) : falloffType == 4 ? 0.775*(1 + 0.775*(1 - 0.775)) : 0"} {"falloffType == 0 ? 0.775 :falloffType == 1 ? pow(0.775, 3) : falloffType == 2 ? 0.775*0.775*(3-2*0.775) : falloffType == 3 ? 0.775*0.775*(2 - 0.775) : falloffType == 4 ? 0.775*(1 + 0.775*(1 - 0.775)) : 0"} {"falloffType == 0 ? 0.775 :falloffType == 1 ? pow(0.775, 3) : falloffType == 2 ? 0.775*0.775*(3-2*0.775) : falloffType == 3 ? 0.775*0.775*(2 - 0.775) : falloffType == 4 ? 0.775*(1 + 0.775*(1 - 0.775)) : 0"} {"falloffType == 0 ? 0.775 :falloffType == 1 ? pow(0.775, 3) : falloffType == 2 ? 0.775*0.775*(3-2*0.775) : falloffType == 3 ? 0.775*0.775*(2 - 0.775) : falloffType == 4 ? 0.775*(1 + 0.775*(1 - 0.775)) : 0"}}
  mix {{falloff}}
  name Multiply10
  xpos 1764
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*9, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*9, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur9
  xpos 1664
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.8 :falloffType == 1 ? pow(0.8, 3) : falloffType == 2 ? 0.8*0.8*(3-2*0.8) : falloffType == 3 ? 0.8*0.8*(2 - 0.8) : falloffType == 4 ? 0.8*(1 + 0.8*(1 - 0.8)) : 0"} {"falloffType == 0 ? 0.8 :falloffType == 1 ? pow(0.8, 3) : falloffType == 2 ? 0.8*0.8*(3-2*0.8) : falloffType == 3 ? 0.8*0.8*(2 - 0.8) : falloffType == 4 ? 0.8*(1 + 0.8*(1 - 0.8)) : 0"} {"falloffType == 0 ? 0.8 :falloffType == 1 ? pow(0.8, 3) : falloffType == 2 ? 0.8*0.8*(3-2*0.8) : falloffType == 3 ? 0.8*0.8*(2 - 0.8) : falloffType == 4 ? 0.8*(1 + 0.8*(1 - 0.8)) : 0"} {"falloffType == 0 ? 0.8 :falloffType == 1 ? pow(0.8, 3) : falloffType == 2 ? 0.8*0.8*(3-2*0.8) : falloffType == 3 ? 0.8*0.8*(2 - 0.8) : falloffType == 4 ? 0.8*(1 + 0.8*(1 - 0.8)) : 0"}}
  mix {{falloff}}
  name Multiply9
  xpos 1664
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*8, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*8, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur8
  xpos 1564
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.825 :falloffType == 1 ? pow(0.825, 3) : falloffType == 2 ? 0.825*0.825*(3-2*0.825) : falloffType == 3 ? 0.825*0.825*(2 - 0.825) : falloffType == 4 ? 0.825*(1 + 0.825*(1 - 0.825)) : 0"} {"falloffType == 0 ? 0.825 :falloffType == 1 ? pow(0.825, 3) : falloffType == 2 ? 0.825*0.825*(3-2*0.825) : falloffType == 3 ? 0.825*0.825*(2 - 0.825) : falloffType == 4 ? 0.825*(1 + 0.825*(1 - 0.825)) : 0"} {"falloffType == 0 ? 0.825 :falloffType == 1 ? pow(0.825, 3) : falloffType == 2 ? 0.825*0.825*(3-2*0.825) : falloffType == 3 ? 0.825*0.825*(2 - 0.825) : falloffType == 4 ? 0.825*(1 + 0.825*(1 - 0.825)) : 0"} {"falloffType == 0 ? 0.825 :falloffType == 1 ? pow(0.825, 3) : falloffType == 2 ? 0.825*0.825*(3-2*0.825) : falloffType == 3 ? 0.825*0.825*(2 - 0.825) : falloffType == 4 ? 0.825*(1 + 0.825*(1 - 0.825)) : 0"}}
  mix {{falloff}}
  name Multiply8
  xpos 1564
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*7, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*7, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur7
  xpos 1464
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.85 :falloffType == 1 ? pow(0.85, 3) : falloffType == 2 ? 0.85*0.85*(3-2*0.85) : falloffType == 3 ? 0.85*0.85*(2 - 0.85) : falloffType == 4 ? 0.85*(1 + 0.85*(1 - 0.85)) : 0"} {"falloffType == 0 ? 0.85 :falloffType == 1 ? pow(0.85, 3) : falloffType == 2 ? 0.85*0.85*(3-2*0.85) : falloffType == 3 ? 0.85*0.85*(2 - 0.85) : falloffType == 4 ? 0.85*(1 + 0.85*(1 - 0.85)) : 0"} {"falloffType == 0 ? 0.85 :falloffType == 1 ? pow(0.85, 3) : falloffType == 2 ? 0.85*0.85*(3-2*0.85) : falloffType == 3 ? 0.85*0.85*(2 - 0.85) : falloffType == 4 ? 0.85*(1 + 0.85*(1 - 0.85)) : 0"} {"falloffType == 0 ? 0.85 :falloffType == 1 ? pow(0.85, 3) : falloffType == 2 ? 0.85*0.85*(3-2*0.85) : falloffType == 3 ? 0.85*0.85*(2 - 0.85) : falloffType == 4 ? 0.85*(1 + 0.85*(1 - 0.85)) : 0"}}
  mix {{falloff}}
  name Multiply7
  xpos 1464
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*6, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*6, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur6
  xpos 1364
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.875 :falloffType == 1 ? pow(0.875, 3) : falloffType == 2 ? 0.875*0.875*(3-2*0.875) : falloffType == 3 ? 0.875*0.875*(2 - 0.875) : falloffType == 4 ? 0.875*(1 + 0.875*(1 - 0.875)) : 0"} {"falloffType == 0 ? 0.875 :falloffType == 1 ? pow(0.875, 3) : falloffType == 2 ? 0.875*0.875*(3-2*0.875) : falloffType == 3 ? 0.875*0.875*(2 - 0.875) : falloffType == 4 ? 0.875*(1 + 0.875*(1 - 0.875)) : 0"} {"falloffType == 0 ? 0.875 :falloffType == 1 ? pow(0.875, 3) : falloffType == 2 ? 0.875*0.875*(3-2*0.875) : falloffType == 3 ? 0.875*0.875*(2 - 0.875) : falloffType == 4 ? 0.875*(1 + 0.875*(1 - 0.875)) : 0"} {"falloffType == 0 ? 0.875 :falloffType == 1 ? pow(0.875, 3) : falloffType == 2 ? 0.875*0.875*(3-2*0.875) : falloffType == 3 ? 0.875*0.875*(2 - 0.875) : falloffType == 4 ? 0.875*(1 + 0.875*(1 - 0.875)) : 0"}}
  mix {{falloff}}
  name Multiply6
  xpos 1364
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*5, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*5, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur5
  xpos 1264
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.9 :falloffType == 1 ? pow(0.9, 3) : falloffType == 2 ? 0.9*0.9*(3-2*0.9) : falloffType == 3 ? 0.9*0.9*(2 - 0.9) : falloffType == 4 ? 0.9*(1 + 0.9*(1 - 0.9)) : 0"} {"falloffType == 0 ? 0.9 :falloffType == 1 ? pow(0.9, 3) : falloffType == 2 ? 0.9*0.9*(3-2*0.9) : falloffType == 3 ? 0.9*0.9*(2 - 0.9) : falloffType == 4 ? 0.9*(1 + 0.9*(1 - 0.9)) : 0"} {"falloffType == 0 ? 0.9 :falloffType == 1 ? pow(0.9, 3) : falloffType == 2 ? 0.9*0.9*(3-2*0.9) : falloffType == 3 ? 0.9*0.9*(2 - 0.9) : falloffType == 4 ? 0.9*(1 + 0.9*(1 - 0.9)) : 0"} {"falloffType == 0 ? 0.9 :falloffType == 1 ? pow(0.9, 3) : falloffType == 2 ? 0.9*0.9*(3-2*0.9) : falloffType == 3 ? 0.9*0.9*(2 - 0.9) : falloffType == 4 ? 0.9*(1 + 0.9*(1 - 0.9)) : 0"}}
  mix {{falloff}}
  name Multiply5
  xpos 1264
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*4, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*4, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur4
  xpos 1164
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.925 :falloffType == 1 ? pow(0.925, 3) : falloffType == 2 ? 0.925*0.925*(3-2*0.925) : falloffType == 3 ? 0.925*0.925*(2 - 0.925) : falloffType == 4 ? 0.925*(1 + 0.925*(1 - 0.925)) : 0"} {"falloffType == 0 ? 0.925 :falloffType == 1 ? pow(0.925, 3) : falloffType == 2 ? 0.925*0.925*(3-2*0.925) : falloffType == 3 ? 0.925*0.925*(2 - 0.925) : falloffType == 4 ? 0.925*(1 + 0.925*(1 - 0.925)) : 0"} {"falloffType == 0 ? 0.925 :falloffType == 1 ? pow(0.925, 3) : falloffType == 2 ? 0.925*0.925*(3-2*0.925) : falloffType == 3 ? 0.925*0.925*(2 - 0.925) : falloffType == 4 ? 0.925*(1 + 0.925*(1 - 0.925)) : 0"} {"falloffType == 0 ? 0.925 :falloffType == 1 ? pow(0.925, 3) : falloffType == 2 ? 0.925*0.925*(3-2*0.925) : falloffType == 3 ? 0.925*0.925*(2 - 0.925) : falloffType == 4 ? 0.925*(1 + 0.925*(1 - 0.925)) : 0"}}
  mix {{falloff}}
  name Multiply4
  xpos 1164
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*3, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*3, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur3
  xpos 1064
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.95 :falloffType == 1 ? pow(0.95, 3) : falloffType == 2 ? 0.95*0.95*(3-2*0.95) : falloffType == 3 ? 0.95*0.95*(2 - 0.95) : falloffType == 4 ? 0.95*(1 + 0.95*(1 - 0.95)) : 0"} {"falloffType == 0 ? 0.95 :falloffType == 1 ? pow(0.95, 3) : falloffType == 2 ? 0.95*0.95*(3-2*0.95) : falloffType == 3 ? 0.95*0.95*(2 - 0.95) : falloffType == 4 ? 0.95*(1 + 0.95*(1 - 0.95)) : 0"} {"falloffType == 0 ? 0.95 :falloffType == 1 ? pow(0.95, 3) : falloffType == 2 ? 0.95*0.95*(3-2*0.95) : falloffType == 3 ? 0.95*0.95*(2 - 0.95) : falloffType == 4 ? 0.95*(1 + 0.95*(1 - 0.95)) : 0"} {"falloffType == 0 ? 0.95 :falloffType == 1 ? pow(0.95, 3) : falloffType == 2 ? 0.95*0.95*(3-2*0.95) : falloffType == 3 ? 0.95*0.95*(2 - 0.95) : falloffType == 4 ? 0.95*(1 + 0.95*(1 - 0.95)) : 0"}}
  mix {{falloff}}
  name Multiply3
  xpos 1064
  ypos -477
 }
push 0
push $Nb6465000
 Blur {
  size {{"(width/25*pow(parent.size*2, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*2, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur2
  xpos 964
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.975 :falloffType == 1 ? pow(0.975, 3) : falloffType == 2 ? 0.975*0.975*(3-2*0.975) : falloffType == 3 ? 0.975*0.975*(2 - 0.975) : falloffType == 4 ? 0.975*(1 + 0.975*(1 - 0.975)) : 0"} {"falloffType == 0 ? 0.975 :falloffType == 1 ? pow(0.975, 3) : falloffType == 2 ? 0.975*0.975*(3-2*0.975) : falloffType == 3 ? 0.975*0.975*(2 - 0.975) : falloffType == 4 ? 0.975*(1 + 0.975*(1 - 0.975)) : 0"} {"falloffType == 0 ? 0.975 :falloffType == 1 ? pow(0.975, 3) : falloffType == 2 ? 0.975*0.975*(3-2*0.975) : falloffType == 3 ? 0.975*0.975*(2 - 0.975) : falloffType == 4 ? 0.975*(1 + 0.975*(1 - 0.975)) : 0"} {"falloffType == 0 ? 0.975 :falloffType == 1 ? pow(0.975, 3) : falloffType == 2 ? 0.975*0.975*(3-2*0.975) : falloffType == 3 ? 0.975*0.975*(2 - 0.975) : falloffType == 4 ? 0.975*(1 + 0.975*(1 - 0.975)) : 0"}}
  mix {{falloff}}
  name Multiply2
  xpos 964
  ypos -477
 }
push $Nb6465000
 Blur {
  size {{(width/10*parent.size*(aspectCalc.aspect.w/100))} {(height/10*parent.size*(aspectCalc.aspect.h/100))}}
  crop false
  name Blur1
  xpos 864
  ypos -555
 }
 Multiply {
  value {1 1 1 1}
  mix {{falloff}}
  name Multiply1
  xpos 864
  ypos -477
 }
 Merge2 {
  inputs 40+1
  operation {{mergeNumber.mergeNumber}}
  also_merge all
  name Merge1
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos 864
  ypos -327
 }
 NoOp {
  name End
  xpos 864
  ypos -279
 }
set Nb6e97800 [stack 0]
 CopyBBox {
  inputs 2
  name CopyBBox1
  xpos 585
  ypos -149
 }
 Group {
  name BBoxToFormat
  onCreate "n = nuke.thisNode()\ninputFormat = n.knob(\"inputFormat\")\ninputBBox = n.knob(\"inputBBox\")\ncrop = nuke.toNode(\"Crop6\")\ncropb = crop.knob('box')\noutputBBox = n.knob('outputBBox')\noutputBBoxCenter = n.knob(\"outputBBoxCenter\")\n\ninputFormat.setFlag(0x0000000000008000)\ninputBBox.setFlag(0x0000000000008000)\ncropb.setFlag(0x0000000000008000)\noutputBBox.setFlag(0x0000000000008000)\noutputBBoxCenter.setFlag(0x0000000000008000)\n\nn = nuke.thisNode()\nn.knob(\"overscan\").setRange(0,400)\nn.knob(\"overscanPercent\").setRange(1,4)"
  tile_color 0xa57aaaff
  note_font "Verdana Bold"
  note_font_color 0xffffffff
  xpos 585
  ypos -106
  addUserKnob {20 CropBBox}
  addUserKnob {4 type l Type +INVISIBLE M {"To Format" "To BBox"}}
  addUserKnob {41 intersect T Crop6.intersect}
  addUserKnob {6 blackOutside l "Black Outside" -STARTLINE}
  addUserKnob {4 overscanType l "Overscan Type:" M {Pixels Percentage}}
  overscanType {{parent.safetyBBoxMethod}}
  addUserKnob {14 overscan l Overscan R 0 400}
  overscan {{parent.safeBBoxPixels} {parent.safeBBoxPixels}}
  addUserKnob {14 overscanPercent l "Overscan Percent" R 1 4}
  overscanPercent {{parent.safeBBoxPercent} {parent.safeBBoxPercent}}
  addUserKnob {20 inputBbox l "BBox Data" n 1}
  addUserKnob {15 inputFormat l "Input Format"}
  inputFormat {0 0 {input.width} {input.height}}
  addUserKnob {15 inputBBox l "Input BBox"}
  inputBBox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
  addUserKnob {12 outputBBoxCenter l OutputBBoxCenter}
  outputBBoxCenter {{OutputBBox1.outputBBoxCenter.w} {OutputBBox1.outputBBoxCenter.h}}
  addUserKnob {15 outputBBox l "Output BBox"}
  outputBBox {{OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox}}
  addUserKnob {20 endGroup n -1}
  addUserKnob {20 info_1 l Info}
  addUserKnob {26 creator l Creator: T "<b><big>Tony Lyons"}
  addUserKnob {26 desc l Description: t "crop to inputformat\n\ndisplays values of input bbox" T CropBBox}
  addUserKnob {26 ver l Version: T v02}
 }
  Input {
   inputs 0
   name Input
   xpos 261
   ypos 394
  }
  Dot {
   name Dot2
   note_font_size 41
   xpos 295
   ypos 462
  }
set Nb6edc400 [stack 0]
  Dot {
   name Dot1
   note_font_size 41
   xpos -160
   ypos 462
  }
set Nb6edc800 [stack 0]
push $Nb6edc400
  Crop {
   box {{parent.inputBBox} {parent.inputBBox} {parent.inputBBox} {parent.inputBBox}}
   crop {{parent.blackOutside}}
   name Crop6
   xpos 261
   ypos 510
   addUserKnob {20 User}
   addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  }
set Nb6edcc00 [stack 0]
  Remove {
   operation keep
   channels none
   name Remove1
   xpos 120
   ypos 504
  }
set Nb6edd000 [stack 0]
  Transform {
   scale {{parent.overscanPercent} {parent.overscanPercent}}
   center {{((input.bbox.r-input.bbox.x)/2)+input.bbox.x} {((input.bbox.t-input.bbox.y)/2)+input.bbox.y}}
   shutteroffset centred
   name Transform1
   selected true
   xpos 120
   ypos 553
  }
push $Nb6edd000
  AdjBBox {
   numpixels {{parent.overscan} {parent.overscan}}
   name AdjBBox1
   xpos -5
   ypos 510
  }
  Switch {
   inputs 2
   which {{overscanType}}
   name Switch2
   label "\[value which]"
   xpos -5
   ypos 549
  }
  Merge2 {
   inputs 2
   bbox intersection
   Achannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
   Bchannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
   output {-rgba.red -rgba.green -rgba.blue rgba.alpha}
   name Merge1
   xpos -5
   ypos 647
   disable {{!parent.Crop6.intersect}}
  }
push $Nb6edc800
  CopyBBox {
   inputs 2
   name CopyBBox1
   xpos -194
   ypos 653
  }
  BlackOutside {
   name BlackOutside1
   xpos -194
   ypos 692
   disable {{!parent.blackOutside}}
  }
  Dot {
   name Dot4
   note_font_size 41
   xpos -160
   ypos 769
  }
push $Nb6edcc00
  Switch {
   inputs 2
   which {{"overscanType == 0 ? overscan.w != 0 || overscan.h != 0 : overscanPercent.w != 1 || overscanPercent.h != 1 ? 1 : 0"}}
   name Switch1
   label "\[value which]"
   xpos 261
   ypos 759
  }
set Nb620d000 [stack 0]
  Output {
   name Output1
   xpos 261
   ypos 921
  }
push $Nb620d000
  NoOp {
   name OutputBBox1
   xpos 378
   ypos 821
   addUserKnob {20 User}
   addUserKnob {15 OutputBBox l "Output BBox"}
   OutputBBox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
   addUserKnob {14 outputBBoxCenter l "Output BBox Center" R 0 100}
   outputBBoxCenter {{OutputBBox.x+(OutputBBox.r-OutputBBox.x)/2} {OutputBBox.y+(OutputBBox.t-OutputBBox.y)/2}}
  }
 end_group
push $Nb6e97800
 Merge2 {
  inputs 2
  bbox intersection
  name Merge4
  xpos 585
  ypos -66
 }
push $Nb6e97800
 CopyBBox {
  inputs 2
  name CopyBBox2
  xpos 585
  ypos -21
 }
set Nb6234000 [stack 0]
push $Nb6464c00
 Dot {
  name Dot4
  note_font_size 41
  xpos 540
  ypos -678
 }
 NoOp {
  name Original
  xpos 506
  ypos -327
 }
 Dot {
  name Dot5
  note_font_size 41
  xpos 540
  ypos 78
 }
push $Nb6234000
push $Nb6e97800
 Switch {
  inputs 2
  which {{"parent.safeBBox && ((BBoxResult.bbox.x < BBoxInput.bbox.x || BBoxResult.bbox.y < BBoxInput.bbox.y || BBoxResult.bbox.r > BBoxInput.bbox.r || BBoxResult.bbox.t > BBoxInput.bbox.t))"}}
  name Switch2
  label "\[value which]"
  xpos 864
  ypos -25
 }
 Grade {
  channels all
  whitepoint 40
  black_clamp false
  name AverageMult
  xpos 864
  ypos 27
  disable {{"output2 == 4 ? 0 : 1"}}
 }
 Merge2 {
  inputs 2
  operation max
  also_merge all
  name Merge2
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos 864
  ypos 74
  disable {{"output2 == 4 && includeOriginal == 1 && AvgMaxOriginal == 1 ? 0 : 1"}}
 }
 Multiply {
  value {{parent.intensity/steps}}
  name Multiply12
  xpos 864
  ypos 98
 }
 Blur {
  size {{postBlur} {postBlur}}
  name BlurOriginal
  xpos 864
  ypos 155
 }
 CopyBBox {
  inputs 2
  name CopyBBox3
  xpos 864
  ypos 224
 }
 Invert {
  name Invert2
  xpos 864
  ypos 283
  disable {{"parent.size < 0 ? 0 : 1"}}
 }
push $Nb643f800
 Switch {
  inputs 2
  which {{"parent.size == 0 ? 0 : 1"}}
  name Switch1
  label "\[value which]"
  xpos 427
  ypos 283
 }
push $Nbcde2c00
 Dot {
  name Dot22
  note_font_size 41
  xpos 34
  ypos 157
 }
 Multiply {
  channels {{{parent.Remove1.channels}}}
  value 0
  name Multiply11
  xpos 0
  ypos 227
  disable {{!effectOnly}}
 }
 Merge2 {
  inputs 2
  operation {{mergeNumber.mergeNumber}}
  also_merge all
  name Merge7
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos 0
  ypos 287
 }
 Dot {
  name Dot17
  label A
  note_font_size 41
  xpos 34
  ypos 599
 }
 Dot {
  name Dot7
  note_font_size 41
  xpos 34
  ypos 729
 }
set N201be000 [stack 0]
 Dot {
  name Dot12
  note_font_size 41
  xpos -260
  ypos 729
 }
 Dot {
  name Dot13
  note_font_size 41
  xpos -260
  ypos 943
 }
push $Nbcde3c00
 Input {
  inputs 0
  name Inputmask
  xpos 346
  ypos 516
  number 1
 }
 Dot {
  name Dot19
  label Mask
  note_font_size 41
  xpos 380
  ypos 582
 }
set N201bf000 [stack 0]
 Dot {
  name Dot20
  note_font_size 41
  xpos 270
  ypos 582
 }
push $N201be000
 Merge2 {
  inputs 2
  bbox intersection
  Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
  Bchannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
  output {rgba.red -rgba.green -rgba.blue rgba.alpha}
  name MergeIntersection
  xpos 236
  ypos 719
  disable {{"!\[exists parent.input1]"}}
 }
 Merge2 {
  inputs 2
  Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
  Bchannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
  output {rgba.red -rgba.green -rgba.blue rgba.alpha}
  name MergeUnion
  xpos 236
  ypos 757
  disable {{"!\[exists parent.input1]"}}
 }
 Dot {
  name Dot6
  label "intersection\nof (Mask and A) + B"
  note_font_size 14
  note_font_color 0xffffffff
  xpos 270
  ypos 917
 }
push $N201bf000
 Dot {
  name Dot10
  note_font_size 41
  xpos 380
  ypos 819
 }
push $N201be000
push $Nbce08000
 Merge2 {
  inputs 2+1
  operation copy
  Achannels none
  Bchannels none
  output none
  also_merge {{{parent.Remove1.channels}}}
  name MergeKeymix
  xpos 0
  ypos 809
 }
 Dot {
  name Dot14
  note_font_size 41
  xpos 34
  ypos 891
 }
set N201e6c00 [stack 0]
push $Nbce08000
 CopyBBox {
  inputs 2
  name CopyBBoxUnion
  xpos -401
  ypos 887
  disable {{parent.bbox==0?0:1}}
 }
 CopyBBox {
  inputs 2
  name CopyBBoxIntersection
  xpos -401
  ypos 913
  disable {{"parent.bbox==1 ? 0 : 1"}}
 }
 CopyBBox {
  inputs 2
  name CopyBBoxA
  xpos -401
  ypos 939
  disable {{"parent.bbox==2 ? 0 : 1"}}
 }
 CopyBBox {
  inputs 2
  name CopyBBoxB
  xpos -401
  ypos 971
  disable {{"parent.bbox==3 ? 0 : 1"}}
 }
 Crop {
  box {0 0 {parent.width} {parent.height}}
  crop false
  name CopyBBoxFormat
  xpos -401
  ypos 997
  disable {{"parent.bbox==4 ? 0 : 1"}}
  addUserKnob {20 User}
  addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
 }
set N2020c000 [stack 0]
 Transform {
  scale {{parent.adjustBBoxPercent} {parent.adjustBBoxPercent}}
  center {{((input.bbox.r-input.bbox.x)/2)+input.bbox.x} {((input.bbox.t-input.bbox.y)/2)+input.bbox.y}}
  black_outside false
  shutteroffset centred
  name TransformBBoxAdjustPercent
  xpos -516
  ypos 1042
 }
push $N2020c000
 AdjBBox {
  numpixels {{parent.adjustBBoxPixels} {parent.adjustBBoxPixels}}
  name AdjBBoxPixels
  xpos -401
  ypos 1045
 }
 Switch {
  inputs 2
  which {{adjustBBoxExtra}}
  name Switch3
  xpos -401
  ypos 1084
 }
 Dot {
  name Dot9
  note_font_size 41
  xpos -367
  ypos 1137
 }
push $N201e6c00
 CopyBBox {
  inputs 2
  name CopyBBox
  xpos 0
  ypos 1133
 }
 BlackOutside {
  name BlackOutside1
  xpos 0
  ypos 1159
  disable {{!parent.blackOutside}}
 }
 Output {
  name Output1
  xpos 0
  ypos 1299
 }
push $Nb6e97800
 NoOp {
  name BBoxResult
  xpos 714
  ypos -279
  addUserKnob {20 User}
  addUserKnob {15 bbox}
  bbox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
 }
 NoOp {
  inputs 0
  name mergeNumber
  xpos 202
  ypos -1339
  addUserKnob {20 User}
  addUserKnob {3 mergeNumber}
  mergeNumber {{"output2 == 0 ? 25 : output2 == 1 ? 24 : output2 == 2 ? 22 : output2 == 3 ? 13 : output2 == 4 ? 24 : output2 == 5 ? 17 : 18"}}
 }
end_group
Merge2 {
 inputs 2
 operation mask
 name Merge9
 selected true
 xpos -3560
 ypos 12135
}
push $N6eaff000
push $Nbab1f400
Group {
 name fc_ExponGlow
 onCreate "n = nuke.thisNode()\nn.knob('size').setRange(0, 5)\nn.knob('exp').setRange(0, 4)\nn.knob('adjustBBoxPixels').setRange(0, 400)\nn.knob('adjustBBoxPercent').setRange(1, 2)\nn.knob('safeBBoxPixels').setRange(0, 400)\nn.knob('safeBBoxPercent').setRange(1, 2)"
 knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"includeOriginal\":\n    if n.knob('includeOriginal').getValue() == 1:\n        merge = nuke.toNode(\"Merge1\")\n        original = nuke.toNode('Original')\n        AvgMult = nuke.toNode(\"AverageMult\")\n        steps = int(n.knob('steps').getValue())\n        merge.setInput(steps+1, original)\n        AvgMult\['whitepoint'].setValue(2 if steps<2 else steps+1)\n\n    else:\n        merge.setInput(steps+1, None)\n        AvgMult\['whitepoint'].setValue(2 if steps<2 else steps)\n\nelif k.name() == \"steps\":\n\n    s = int(k.value())\n    if s<1:\n        k.setValue(1)\n    else:\n        start = nuke.toNode(\"Start\")\n        end   = nuke.toNode(\"End\")\n        b1    = nuke.toNode(\"Blur1\")\n        m1    = nuke.toNode(\"Multiply1\")\n        merge = nuke.toNode(\"Merge1\")\n        AvgMult = nuke.toNode(\"AverageMult\")\n\n        b1x   = b1.xpos()\n        b1y   = b1.ypos()\n        b1n   = b1.name()\n\n        m1x   = m1.xpos()\n        m1y   = m1.ypos()\n        m1n   = m1.name()\n\n        steps = int(n.knob('steps').getValue())\n        size  = n.knob('size').getValue()\n        mult  = n.knob('exp').getValue()\n\n        #b1.setInput(0, start)\n        for i in range(1,merge.inputs()):\n            merge.setInput(i,None)\n        merge.setInput(0, m1)\n        \[nuke.delete(i) for i in nuke.allNodes() if i.xpos()>start.xpos()]\n        for i in range(1,steps):\n            # Blur\n            b = nuke.nodes.Blur()\n            m = nuke.nodes.Multiply()\n            b.setXYpos(b1x+i*100,b1y)\n            b.setInput(0,start)\n            b\[\"channels\"].setValue(\"all\")\n            b\[\"crop\"].setValue(0)\n            b\[\"size\"].setValue(0, 1)\n            b\[\"size\"].setExpression( \"(width/25*pow(parent.size*\{\}, parent.exp.w))*((aspectCalc.aspect.w/100))\".format(str(i+1)), 0 )\n            b\[\"size\"].setExpression( \"(height/25*pow(parent.size*\{\}, parent.exp.h))*((aspectCalc.aspect.h/100))\".format(str(i+1)), 1 )\n            b\[\"label\"].setValue('')\n            blurAbove = b.name()\n\n            m.setXYpos(m1x+i*100,m1y)\n            m.setInput(0, nuke.toNode(blurAbove))\n            m\[\"channels\"].setValue(\"all\")\n            m\[\"value\"].setValue(1,1,1,1)\n            j = 1-(i/steps)\n            m\[\"value\"].setExpression('falloffType == 0 ? \{\} :falloffType == 1 ? pow(\{\}, 3) : falloffType == 2 ? \{\}*\{\}*(3-2*\{\}) : falloffType == 3 ? \{\}*\{\}*(2 - \{\}) : falloffType == 4 ? \{\}*(1 + \{\}*(1 - \{\})) : 0'.format(j,j,j,j,j,j,j,j,j,j,j))\n            m\[\"mix\"].setExpression(\"falloff\")\n            m\[\"label\"].setValue('')\n\n            merge.setInput(i if i<2 else i+1, m)\n            AvgMult\['whitepoint'].setValue(i if i<2 else i+1)\n\n        if n.knob('includeOriginal').getValue() == 1:\n            merge = nuke.toNode(\"Merge1\")\n            original = nuke.toNode('Original')\n            AvgMult = nuke.toNode(\"AverageMult\")\n            steps = int(n.knob('steps').getValue())\n            merge.setInput(steps+1, original)\n            AvgMult\['whitepoint'].setValue(2 if steps<2 else steps+1)\n\nelif k.name() == \"output2\":\n    if n.knob(\"output2\").getValue() == 4:\n        n.knob('AvgMaxOriginal').setVisible(True)\n    else:\n        n.knob('AvgMaxOriginal').setVisible(False)\n\nelif k.name() == \"safeBBox\":\n    if n.knob(\"safeBBox\").getValue() == 0:\n        n.knob('safeBBoxText').setVisible(False)\n        n.knob('safetyBBoxMethod').setVisible(False)\n        n.knob('safeBBoxPixels').setVisible(False)\n        n.knob('safeBBoxPercent').setVisible(False)\n\n    elif n.knob(\"safeBBox\").getValue() == 1:\n        n.knob('safetyBBoxMethod').setVisible(True)\n        n.knob('safeBBoxText').setVisible(True)\n        if n.knob('safetyBBoxMethod').value() == \"pixels\":\n            n.knob('safeBBoxPixels').setVisible(True)\n            n.knob('safeBBoxPercent').setVisible(False)\n        elif n.knob('safetyBBoxMethod').value() == \"percent\":\n            n.knob('safeBBoxPixels').setVisible(False)\n            n.knob('safeBBoxPercent').setVisible(True)\n\nelif k.name() == \"safetyBBoxMethod\":\n    if n.knob(\"safetyBBoxMethod\").value() == \"pixels\":\n        n.knob('safeBBoxPixels').setVisible(True)\n        n.knob('safeBBoxPercent').setVisible(False)\n    elif n.knob(\"safetyBBoxMethod\").value() == \"percent\":\n        n.knob('safeBBoxPixels').setVisible(False)\n        n.knob('safeBBoxPercent').setVisible(True)\n\nelif k.name() == \"adjustBBoxExtra\":\n    if n.knob(\"adjustBBoxExtra\").value() == \"pixels\":\n        n.knob('adjustBBoxPixels').setVisible(True)\n        n.knob('adjustBBoxPercent').setVisible(False)\n    elif n.knob(\"adjustBBoxExtra\").value() == \"percent\":\n        n.knob('adjustBBoxPixels').setVisible(False)\n        n.knob('adjustBBoxPercent').setVisible(True)\n"
 tile_color 0xcc804eff
 label "(\[value output2])"
 note_font "Verdana Bold"
 note_font_color 0xffffffff
 selected true
 xpos -3560
 ypos 11625
 addUserKnob {20 ExponGlow}
 addUserKnob {41 channels T Remove1.channels}
 addUserKnob {41 maskChannelMask_1 l area T MultiplyArea.maskChannelMask}
 addUserKnob {41 inject_1 l inject -STARTLINE T MultiplyArea.inject}
 addUserKnob {41 invert_mask_1 l invert -STARTLINE T MultiplyArea.invert_mask}
 addUserKnob {41 fringe_1 l fringe -STARTLINE T MultiplyArea.fringe}
 addUserKnob {26 ""}
 addUserKnob {26 ToleranceTitle l Tolerance T " "}
 addUserKnob {6 tolerance_2 l " " -STARTLINE}
 tolerance_2 true
 addUserKnob {7 tolerance l "" -STARTLINE R 0 4}
 tolerance 1
 addUserKnob {4 output2 l Operation M {Screen Plus Over Hypot Average Max Min ""}}
 output2 Plus
 addUserKnob {3 steps l "  Steps" -STARTLINE}
 steps 40
 addUserKnob {26 text l " " -STARTLINE T " "}
 addUserKnob {6 includeOriginal l "Include Original?" -STARTLINE}
 addUserKnob {19 intensity l Intensity R 0 4}
 intensity 5
 addUserKnob {6 intensity_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 intensity_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 intensity_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 text_1 l " "}
 addUserKnob {6 AvgMaxOriginal l "Use Max of Average and Original" +HIDDEN +STARTLINE}
 addUserKnob {14 size l Size R 0 5}
 size 0.2
 addUserKnob {14 exp l Exponent R 0 4}
 exp 3
 addUserKnob {6 color_rgba_panelDropped l "panel dropped state" +HIDDEN +STARTLINE}
 addUserKnob {4 falloffType l Falloff M {Linear pLinear smooth smooth0 smooth1 "" ""}}
 addUserKnob {7 falloff l "" -STARTLINE}
 falloff 1
 addUserKnob {26 text_4 l " "}
 addUserKnob {6 color_rgba_panelDropped_1 l "panel dropped state" +HIDDEN +STARTLINE}
 addUserKnob {14 postBlur l "Post Blur" R 0 100}
 addUserKnob {6 effectOnly l "<font color = dark gray>.<b><font color = skyblue>   Effect Only" +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {20 bboxControl l "BBox Control" n 1}
 bboxControl 0
 addUserKnob {26 text_2 l " " T " "}
 addUserKnob {4 bbox l "BBox: " -STARTLINE M {union intersectionMask A B "input format" "" "" "" "" "" "" "" "" "" "" "" ""}}
 addUserKnob {6 blackOutside l "Black Outside" -STARTLINE}
 addUserKnob {6 safeBBox l "Safe BBox" t "If the output BBox is larger than the input format and the input box combined. the result will be max of the input/format bbox plus a safety \"buffer\" in pixels or percent \n\nTurning off might make your BBox grow exponentially with high blur values" -STARTLINE}
 safeBBox true
 addUserKnob {26 safeBBoxText l "" +STARTLINE T " "}
 addUserKnob {4 safetyBBoxMethod l "Safe BBox Buffer  " -STARTLINE M {pixels percent "" "" "" "" "" "" "" "" "" "" "" "" "" "" ""}}
 safetyBBoxMethod percent
 addUserKnob {14 safeBBoxPixels l "" -STARTLINE +HIDDEN R 0 400}
 safeBBoxPixels 100
 addUserKnob {14 safeBBoxPercent l "" -STARTLINE R 1 2}
 safeBBoxPercent 1.1
 addUserKnob {26 text_3 l "" +STARTLINE T " "}
 addUserKnob {4 adjustBBoxExtra l "Extra BBox Adjust" -STARTLINE M {pixels percent "" "" "" "" "" "" "" "" "" "" "" "" ""}}
 addUserKnob {14 adjustBBoxPercent l "" -STARTLINE +HIDDEN R 1 2}
 adjustBBoxPercent 1
 addUserKnob {14 adjustBBoxPixels l "" -STARTLINE R 0 400}
 addUserKnob {26 ""}
 addUserKnob {20 endGroup n -1}
 addUserKnob {41 maskChannelMask l mask T MergeKeymix.maskChannelMask}
 addUserKnob {41 inject -STARTLINE T MergeKeymix.inject}
 addUserKnob {41 invert_mask l invert -STARTLINE T MergeKeymix.invert_mask}
 addUserKnob {41 fringe -STARTLINE T MergeKeymix.fringe}
 addUserKnob {41 mix T MergeKeymix.mix}
 addUserKnob {20 info l Info}
 addUserKnob {26 creator l Creator: T "Tony Lyons"}
 addUserKnob {26 desc l Description: T ExponGlow}
 addUserKnob {26 ver l Version: T v03}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x535e5a00
  label "BBox Management"
  note_font_size 30
  note_font_color 0xffffffff
  xpos -529
  ypos 636
  bdwidth 341
  bdheight 525
 }
 Input {
  inputs 0
  name Inputimg
  xpos 0
  ypos -1449
 }
 Dot {
  name Dot16
  note_font_size 41
  xpos 34
  ypos -1282
 }
set Nb9555400 [stack 0]
 Dot {
  name Dot2
  note_font_size 41
  xpos -367
  ypos -1282
 }
 Dot {
  name Dot25
  note_font_size 41
  xpos -367
  ypos 360
 }
 Dot {
  name Dot18
  label B
  note_font_size 41
  xpos -367
  ypos 578
 }
 Dot {
  name Dot11
  note_font_size 41
  xpos -367
  ypos 767
 }
set Need94400 [stack 0]
 Dot {
  name Dot3
  note_font_size 41
  xpos -367
  ypos 819
 }
set Need94800 [stack 0]
 Dot {
  name Dot8
  note_font_size 41
  xpos -463
  ypos 819
 }
 Dot {
  name Dot15
  note_font_size 41
  xpos -463
  ypos 975
 }
 Crop {
  inputs 0
  box {{"!\[exists parent.input0] ? 0 : input.format.x"} {"!\[exists parent.input0] ? 0 : input.format.y"} {"!\[exists parent.input0] ? 0 : input.format.r"} {"!\[exists parent.input0] ? 0 : input.format.t"}}
  reformat true
  crop false
  name Crop1
  xpos 210
  ypos -1006
  addUserKnob {20 User}
  addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
 }
 AddChannels {
  channels rgba
  name AddChannels2
  xpos 210
  ypos -980
 }
push $Nb9555400
 Merge2 {
  inputs 2
  name Merge3
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos 83
  ypos -927
 }
 NoOp {
  name BBoxInput
  xpos 83
  ypos -884
  addUserKnob {20 User}
  addUserKnob {15 bbox}
  bbox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
 }
 Dot {
  name Dot23
  note_font_size 41
  xpos 117
  ypos -146
 }
 Input {
  inputs 0
  name Inputarea
  xpos 289
  ypos -894
  number 2
 }
 AddChannels {
  channels alpha
  color 1
  name AddChannels1
  xpos 289
  ypos -836
 }
 Invert {
  channels rgba
  name Invert3
  xpos 289
  ypos -759
 }
push $Nb9555400
 Dot {
  name Dot1
  note_font_size 41
  xpos 461
  ypos -1282
 }
 Remove {
  operation keep
  channels rgba
  name Remove1
  xpos 427
  ypos -1213
 }
 NoOp {
  name aspectCalc
  xpos 427
  ypos -1155
  addUserKnob {20 User}
  addUserKnob {14 aspect R 0 100}
  aspect {{parent.size.w} {(parent.size.h/format.pixel_aspect/height*width)*format.pixel_aspect}}
 }
 Dot {
  name Dot21
  note_font_size 41
  xpos 461
  ypos -1026
 }
set Needde000 [stack 0]
 Invert {
  name Invert1
  xpos 864
  ypos -1033
  disable {{"parent.size < 0 ? 0 : 1"}}
 }
set Needde400 [stack 0]
 Keyer {
  operation "luminance key"
  range {{parent.tolerance} {range.A+parent.tolerance+1} {range.B} {range.B}}
  name Keyer1
  xpos 774
  ypos -967
  disable {{!tolerance_2}}
 }
 Premult {
  channels all
  name Premult1
  xpos 774
  ypos -910
  disable {{!tolerance_2}}
 }
push $Needde400
 Dissolve {
  inputs 2
  channels rgba
  which {{"parent.tolerance < 1 ? parent.tolerance : 1"}}
  name Dissolve1
  label "\[value which]"
  xpos 864
  ypos -857
 }
 Multiply {
  inputs 1+1
  value 0
  name MultiplyArea
  label "\[value value]"
  xpos 864
  ypos -768
 }
set Needdf400 [stack 0]
 NoOp {
  name Start
  xpos 864
  ypos -706
 }
set Needdf800 [stack 0]
 Blur {
  size {{"(width/25*pow(parent.size*40, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*40, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur40
  xpos 4764
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.025000000000000022 :falloffType == 1 ? pow(0.025000000000000022, 3) : falloffType == 2 ? 0.025000000000000022*0.025000000000000022*(3-2*0.025000000000000022) : falloffType == 3 ? 0.025000000000000022*0.025000000000000022*(2 - 0.025000000000000022) : falloffType == 4 ? 0.025000000000000022*(1 + 0.025000000000000022*(1 - 0.025000000000000022)) : 0"} {"falloffType == 0 ? 0.025000000000000022 :falloffType == 1 ? pow(0.025000000000000022, 3) : falloffType == 2 ? 0.025000000000000022*0.025000000000000022*(3-2*0.025000000000000022) : falloffType == 3 ? 0.025000000000000022*0.025000000000000022*(2 - 0.025000000000000022) : falloffType == 4 ? 0.025000000000000022*(1 + 0.025000000000000022*(1 - 0.025000000000000022)) : 0"} {"falloffType == 0 ? 0.025000000000000022 :falloffType == 1 ? pow(0.025000000000000022, 3) : falloffType == 2 ? 0.025000000000000022*0.025000000000000022*(3-2*0.025000000000000022) : falloffType == 3 ? 0.025000000000000022*0.025000000000000022*(2 - 0.025000000000000022) : falloffType == 4 ? 0.025000000000000022*(1 + 0.025000000000000022*(1 - 0.025000000000000022)) : 0"} {"falloffType == 0 ? 0.025000000000000022 :falloffType == 1 ? pow(0.025000000000000022, 3) : falloffType == 2 ? 0.025000000000000022*0.025000000000000022*(3-2*0.025000000000000022) : falloffType == 3 ? 0.025000000000000022*0.025000000000000022*(2 - 0.025000000000000022) : falloffType == 4 ? 0.025000000000000022*(1 + 0.025000000000000022*(1 - 0.025000000000000022)) : 0"}}
  mix {{falloff}}
  name Multiply42
  xpos 4764
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*39, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*39, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur39
  xpos 4664
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.050000000000000044 :falloffType == 1 ? pow(0.050000000000000044, 3) : falloffType == 2 ? 0.050000000000000044*0.050000000000000044*(3-2*0.050000000000000044) : falloffType == 3 ? 0.050000000000000044*0.050000000000000044*(2 - 0.050000000000000044) : falloffType == 4 ? 0.050000000000000044*(1 + 0.050000000000000044*(1 - 0.050000000000000044)) : 0"} {"falloffType == 0 ? 0.050000000000000044 :falloffType == 1 ? pow(0.050000000000000044, 3) : falloffType == 2 ? 0.050000000000000044*0.050000000000000044*(3-2*0.050000000000000044) : falloffType == 3 ? 0.050000000000000044*0.050000000000000044*(2 - 0.050000000000000044) : falloffType == 4 ? 0.050000000000000044*(1 + 0.050000000000000044*(1 - 0.050000000000000044)) : 0"} {"falloffType == 0 ? 0.050000000000000044 :falloffType == 1 ? pow(0.050000000000000044, 3) : falloffType == 2 ? 0.050000000000000044*0.050000000000000044*(3-2*0.050000000000000044) : falloffType == 3 ? 0.050000000000000044*0.050000000000000044*(2 - 0.050000000000000044) : falloffType == 4 ? 0.050000000000000044*(1 + 0.050000000000000044*(1 - 0.050000000000000044)) : 0"} {"falloffType == 0 ? 0.050000000000000044 :falloffType == 1 ? pow(0.050000000000000044, 3) : falloffType == 2 ? 0.050000000000000044*0.050000000000000044*(3-2*0.050000000000000044) : falloffType == 3 ? 0.050000000000000044*0.050000000000000044*(2 - 0.050000000000000044) : falloffType == 4 ? 0.050000000000000044*(1 + 0.050000000000000044*(1 - 0.050000000000000044)) : 0"}}
  mix {{falloff}}
  name Multiply41
  xpos 4664
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*38, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*38, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur38
  xpos 4564
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.07499999999999996 :falloffType == 1 ? pow(0.07499999999999996, 3) : falloffType == 2 ? 0.07499999999999996*0.07499999999999996*(3-2*0.07499999999999996) : falloffType == 3 ? 0.07499999999999996*0.07499999999999996*(2 - 0.07499999999999996) : falloffType == 4 ? 0.07499999999999996*(1 + 0.07499999999999996*(1 - 0.07499999999999996)) : 0"} {"falloffType == 0 ? 0.07499999999999996 :falloffType == 1 ? pow(0.07499999999999996, 3) : falloffType == 2 ? 0.07499999999999996*0.07499999999999996*(3-2*0.07499999999999996) : falloffType == 3 ? 0.07499999999999996*0.07499999999999996*(2 - 0.07499999999999996) : falloffType == 4 ? 0.07499999999999996*(1 + 0.07499999999999996*(1 - 0.07499999999999996)) : 0"} {"falloffType == 0 ? 0.07499999999999996 :falloffType == 1 ? pow(0.07499999999999996, 3) : falloffType == 2 ? 0.07499999999999996*0.07499999999999996*(3-2*0.07499999999999996) : falloffType == 3 ? 0.07499999999999996*0.07499999999999996*(2 - 0.07499999999999996) : falloffType == 4 ? 0.07499999999999996*(1 + 0.07499999999999996*(1 - 0.07499999999999996)) : 0"} {"falloffType == 0 ? 0.07499999999999996 :falloffType == 1 ? pow(0.07499999999999996, 3) : falloffType == 2 ? 0.07499999999999996*0.07499999999999996*(3-2*0.07499999999999996) : falloffType == 3 ? 0.07499999999999996*0.07499999999999996*(2 - 0.07499999999999996) : falloffType == 4 ? 0.07499999999999996*(1 + 0.07499999999999996*(1 - 0.07499999999999996)) : 0"}}
  mix {{falloff}}
  name Multiply40
  xpos 4564
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*37, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*37, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur37
  xpos 4464
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.09999999999999998 :falloffType == 1 ? pow(0.09999999999999998, 3) : falloffType == 2 ? 0.09999999999999998*0.09999999999999998*(3-2*0.09999999999999998) : falloffType == 3 ? 0.09999999999999998*0.09999999999999998*(2 - 0.09999999999999998) : falloffType == 4 ? 0.09999999999999998*(1 + 0.09999999999999998*(1 - 0.09999999999999998)) : 0"} {"falloffType == 0 ? 0.09999999999999998 :falloffType == 1 ? pow(0.09999999999999998, 3) : falloffType == 2 ? 0.09999999999999998*0.09999999999999998*(3-2*0.09999999999999998) : falloffType == 3 ? 0.09999999999999998*0.09999999999999998*(2 - 0.09999999999999998) : falloffType == 4 ? 0.09999999999999998*(1 + 0.09999999999999998*(1 - 0.09999999999999998)) : 0"} {"falloffType == 0 ? 0.09999999999999998 :falloffType == 1 ? pow(0.09999999999999998, 3) : falloffType == 2 ? 0.09999999999999998*0.09999999999999998*(3-2*0.09999999999999998) : falloffType == 3 ? 0.09999999999999998*0.09999999999999998*(2 - 0.09999999999999998) : falloffType == 4 ? 0.09999999999999998*(1 + 0.09999999999999998*(1 - 0.09999999999999998)) : 0"} {"falloffType == 0 ? 0.09999999999999998 :falloffType == 1 ? pow(0.09999999999999998, 3) : falloffType == 2 ? 0.09999999999999998*0.09999999999999998*(3-2*0.09999999999999998) : falloffType == 3 ? 0.09999999999999998*0.09999999999999998*(2 - 0.09999999999999998) : falloffType == 4 ? 0.09999999999999998*(1 + 0.09999999999999998*(1 - 0.09999999999999998)) : 0"}}
  mix {{falloff}}
  name Multiply39
  xpos 4464
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*36, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*36, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur36
  xpos 4364
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.125 :falloffType == 1 ? pow(0.125, 3) : falloffType == 2 ? 0.125*0.125*(3-2*0.125) : falloffType == 3 ? 0.125*0.125*(2 - 0.125) : falloffType == 4 ? 0.125*(1 + 0.125*(1 - 0.125)) : 0"} {"falloffType == 0 ? 0.125 :falloffType == 1 ? pow(0.125, 3) : falloffType == 2 ? 0.125*0.125*(3-2*0.125) : falloffType == 3 ? 0.125*0.125*(2 - 0.125) : falloffType == 4 ? 0.125*(1 + 0.125*(1 - 0.125)) : 0"} {"falloffType == 0 ? 0.125 :falloffType == 1 ? pow(0.125, 3) : falloffType == 2 ? 0.125*0.125*(3-2*0.125) : falloffType == 3 ? 0.125*0.125*(2 - 0.125) : falloffType == 4 ? 0.125*(1 + 0.125*(1 - 0.125)) : 0"} {"falloffType == 0 ? 0.125 :falloffType == 1 ? pow(0.125, 3) : falloffType == 2 ? 0.125*0.125*(3-2*0.125) : falloffType == 3 ? 0.125*0.125*(2 - 0.125) : falloffType == 4 ? 0.125*(1 + 0.125*(1 - 0.125)) : 0"}}
  mix {{falloff}}
  name Multiply38
  xpos 4364
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*35, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*35, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur35
  xpos 4264
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.15000000000000002 :falloffType == 1 ? pow(0.15000000000000002, 3) : falloffType == 2 ? 0.15000000000000002*0.15000000000000002*(3-2*0.15000000000000002) : falloffType == 3 ? 0.15000000000000002*0.15000000000000002*(2 - 0.15000000000000002) : falloffType == 4 ? 0.15000000000000002*(1 + 0.15000000000000002*(1 - 0.15000000000000002)) : 0"} {"falloffType == 0 ? 0.15000000000000002 :falloffType == 1 ? pow(0.15000000000000002, 3) : falloffType == 2 ? 0.15000000000000002*0.15000000000000002*(3-2*0.15000000000000002) : falloffType == 3 ? 0.15000000000000002*0.15000000000000002*(2 - 0.15000000000000002) : falloffType == 4 ? 0.15000000000000002*(1 + 0.15000000000000002*(1 - 0.15000000000000002)) : 0"} {"falloffType == 0 ? 0.15000000000000002 :falloffType == 1 ? pow(0.15000000000000002, 3) : falloffType == 2 ? 0.15000000000000002*0.15000000000000002*(3-2*0.15000000000000002) : falloffType == 3 ? 0.15000000000000002*0.15000000000000002*(2 - 0.15000000000000002) : falloffType == 4 ? 0.15000000000000002*(1 + 0.15000000000000002*(1 - 0.15000000000000002)) : 0"} {"falloffType == 0 ? 0.15000000000000002 :falloffType == 1 ? pow(0.15000000000000002, 3) : falloffType == 2 ? 0.15000000000000002*0.15000000000000002*(3-2*0.15000000000000002) : falloffType == 3 ? 0.15000000000000002*0.15000000000000002*(2 - 0.15000000000000002) : falloffType == 4 ? 0.15000000000000002*(1 + 0.15000000000000002*(1 - 0.15000000000000002)) : 0"}}
  mix {{falloff}}
  name Multiply37
  xpos 4264
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*34, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*34, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur34
  xpos 4164
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.17500000000000004 :falloffType == 1 ? pow(0.17500000000000004, 3) : falloffType == 2 ? 0.17500000000000004*0.17500000000000004*(3-2*0.17500000000000004) : falloffType == 3 ? 0.17500000000000004*0.17500000000000004*(2 - 0.17500000000000004) : falloffType == 4 ? 0.17500000000000004*(1 + 0.17500000000000004*(1 - 0.17500000000000004)) : 0"} {"falloffType == 0 ? 0.17500000000000004 :falloffType == 1 ? pow(0.17500000000000004, 3) : falloffType == 2 ? 0.17500000000000004*0.17500000000000004*(3-2*0.17500000000000004) : falloffType == 3 ? 0.17500000000000004*0.17500000000000004*(2 - 0.17500000000000004) : falloffType == 4 ? 0.17500000000000004*(1 + 0.17500000000000004*(1 - 0.17500000000000004)) : 0"} {"falloffType == 0 ? 0.17500000000000004 :falloffType == 1 ? pow(0.17500000000000004, 3) : falloffType == 2 ? 0.17500000000000004*0.17500000000000004*(3-2*0.17500000000000004) : falloffType == 3 ? 0.17500000000000004*0.17500000000000004*(2 - 0.17500000000000004) : falloffType == 4 ? 0.17500000000000004*(1 + 0.17500000000000004*(1 - 0.17500000000000004)) : 0"} {"falloffType == 0 ? 0.17500000000000004 :falloffType == 1 ? pow(0.17500000000000004, 3) : falloffType == 2 ? 0.17500000000000004*0.17500000000000004*(3-2*0.17500000000000004) : falloffType == 3 ? 0.17500000000000004*0.17500000000000004*(2 - 0.17500000000000004) : falloffType == 4 ? 0.17500000000000004*(1 + 0.17500000000000004*(1 - 0.17500000000000004)) : 0"}}
  mix {{falloff}}
  name Multiply36
  xpos 4164
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*33, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*33, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur33
  xpos 4064
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.19999999999999996 :falloffType == 1 ? pow(0.19999999999999996, 3) : falloffType == 2 ? 0.19999999999999996*0.19999999999999996*(3-2*0.19999999999999996) : falloffType == 3 ? 0.19999999999999996*0.19999999999999996*(2 - 0.19999999999999996) : falloffType == 4 ? 0.19999999999999996*(1 + 0.19999999999999996*(1 - 0.19999999999999996)) : 0"} {"falloffType == 0 ? 0.19999999999999996 :falloffType == 1 ? pow(0.19999999999999996, 3) : falloffType == 2 ? 0.19999999999999996*0.19999999999999996*(3-2*0.19999999999999996) : falloffType == 3 ? 0.19999999999999996*0.19999999999999996*(2 - 0.19999999999999996) : falloffType == 4 ? 0.19999999999999996*(1 + 0.19999999999999996*(1 - 0.19999999999999996)) : 0"} {"falloffType == 0 ? 0.19999999999999996 :falloffType == 1 ? pow(0.19999999999999996, 3) : falloffType == 2 ? 0.19999999999999996*0.19999999999999996*(3-2*0.19999999999999996) : falloffType == 3 ? 0.19999999999999996*0.19999999999999996*(2 - 0.19999999999999996) : falloffType == 4 ? 0.19999999999999996*(1 + 0.19999999999999996*(1 - 0.19999999999999996)) : 0"} {"falloffType == 0 ? 0.19999999999999996 :falloffType == 1 ? pow(0.19999999999999996, 3) : falloffType == 2 ? 0.19999999999999996*0.19999999999999996*(3-2*0.19999999999999996) : falloffType == 3 ? 0.19999999999999996*0.19999999999999996*(2 - 0.19999999999999996) : falloffType == 4 ? 0.19999999999999996*(1 + 0.19999999999999996*(1 - 0.19999999999999996)) : 0"}}
  mix {{falloff}}
  name Multiply35
  xpos 4064
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*32, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*32, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur32
  xpos 3964
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.22499999999999998 :falloffType == 1 ? pow(0.22499999999999998, 3) : falloffType == 2 ? 0.22499999999999998*0.22499999999999998*(3-2*0.22499999999999998) : falloffType == 3 ? 0.22499999999999998*0.22499999999999998*(2 - 0.22499999999999998) : falloffType == 4 ? 0.22499999999999998*(1 + 0.22499999999999998*(1 - 0.22499999999999998)) : 0"} {"falloffType == 0 ? 0.22499999999999998 :falloffType == 1 ? pow(0.22499999999999998, 3) : falloffType == 2 ? 0.22499999999999998*0.22499999999999998*(3-2*0.22499999999999998) : falloffType == 3 ? 0.22499999999999998*0.22499999999999998*(2 - 0.22499999999999998) : falloffType == 4 ? 0.22499999999999998*(1 + 0.22499999999999998*(1 - 0.22499999999999998)) : 0"} {"falloffType == 0 ? 0.22499999999999998 :falloffType == 1 ? pow(0.22499999999999998, 3) : falloffType == 2 ? 0.22499999999999998*0.22499999999999998*(3-2*0.22499999999999998) : falloffType == 3 ? 0.22499999999999998*0.22499999999999998*(2 - 0.22499999999999998) : falloffType == 4 ? 0.22499999999999998*(1 + 0.22499999999999998*(1 - 0.22499999999999998)) : 0"} {"falloffType == 0 ? 0.22499999999999998 :falloffType == 1 ? pow(0.22499999999999998, 3) : falloffType == 2 ? 0.22499999999999998*0.22499999999999998*(3-2*0.22499999999999998) : falloffType == 3 ? 0.22499999999999998*0.22499999999999998*(2 - 0.22499999999999998) : falloffType == 4 ? 0.22499999999999998*(1 + 0.22499999999999998*(1 - 0.22499999999999998)) : 0"}}
  mix {{falloff}}
  name Multiply34
  xpos 3964
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*31, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*31, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur31
  xpos 3864
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.25 :falloffType == 1 ? pow(0.25, 3) : falloffType == 2 ? 0.25*0.25*(3-2*0.25) : falloffType == 3 ? 0.25*0.25*(2 - 0.25) : falloffType == 4 ? 0.25*(1 + 0.25*(1 - 0.25)) : 0"} {"falloffType == 0 ? 0.25 :falloffType == 1 ? pow(0.25, 3) : falloffType == 2 ? 0.25*0.25*(3-2*0.25) : falloffType == 3 ? 0.25*0.25*(2 - 0.25) : falloffType == 4 ? 0.25*(1 + 0.25*(1 - 0.25)) : 0"} {"falloffType == 0 ? 0.25 :falloffType == 1 ? pow(0.25, 3) : falloffType == 2 ? 0.25*0.25*(3-2*0.25) : falloffType == 3 ? 0.25*0.25*(2 - 0.25) : falloffType == 4 ? 0.25*(1 + 0.25*(1 - 0.25)) : 0"} {"falloffType == 0 ? 0.25 :falloffType == 1 ? pow(0.25, 3) : falloffType == 2 ? 0.25*0.25*(3-2*0.25) : falloffType == 3 ? 0.25*0.25*(2 - 0.25) : falloffType == 4 ? 0.25*(1 + 0.25*(1 - 0.25)) : 0"}}
  mix {{falloff}}
  name Multiply33
  xpos 3864
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*30, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*30, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur30
  xpos 3764
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.275 :falloffType == 1 ? pow(0.275, 3) : falloffType == 2 ? 0.275*0.275*(3-2*0.275) : falloffType == 3 ? 0.275*0.275*(2 - 0.275) : falloffType == 4 ? 0.275*(1 + 0.275*(1 - 0.275)) : 0"} {"falloffType == 0 ? 0.275 :falloffType == 1 ? pow(0.275, 3) : falloffType == 2 ? 0.275*0.275*(3-2*0.275) : falloffType == 3 ? 0.275*0.275*(2 - 0.275) : falloffType == 4 ? 0.275*(1 + 0.275*(1 - 0.275)) : 0"} {"falloffType == 0 ? 0.275 :falloffType == 1 ? pow(0.275, 3) : falloffType == 2 ? 0.275*0.275*(3-2*0.275) : falloffType == 3 ? 0.275*0.275*(2 - 0.275) : falloffType == 4 ? 0.275*(1 + 0.275*(1 - 0.275)) : 0"} {"falloffType == 0 ? 0.275 :falloffType == 1 ? pow(0.275, 3) : falloffType == 2 ? 0.275*0.275*(3-2*0.275) : falloffType == 3 ? 0.275*0.275*(2 - 0.275) : falloffType == 4 ? 0.275*(1 + 0.275*(1 - 0.275)) : 0"}}
  mix {{falloff}}
  name Multiply32
  xpos 3764
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*29, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*29, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur29
  xpos 3664
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.30000000000000004 :falloffType == 1 ? pow(0.30000000000000004, 3) : falloffType == 2 ? 0.30000000000000004*0.30000000000000004*(3-2*0.30000000000000004) : falloffType == 3 ? 0.30000000000000004*0.30000000000000004*(2 - 0.30000000000000004) : falloffType == 4 ? 0.30000000000000004*(1 + 0.30000000000000004*(1 - 0.30000000000000004)) : 0"} {"falloffType == 0 ? 0.30000000000000004 :falloffType == 1 ? pow(0.30000000000000004, 3) : falloffType == 2 ? 0.30000000000000004*0.30000000000000004*(3-2*0.30000000000000004) : falloffType == 3 ? 0.30000000000000004*0.30000000000000004*(2 - 0.30000000000000004) : falloffType == 4 ? 0.30000000000000004*(1 + 0.30000000000000004*(1 - 0.30000000000000004)) : 0"} {"falloffType == 0 ? 0.30000000000000004 :falloffType == 1 ? pow(0.30000000000000004, 3) : falloffType == 2 ? 0.30000000000000004*0.30000000000000004*(3-2*0.30000000000000004) : falloffType == 3 ? 0.30000000000000004*0.30000000000000004*(2 - 0.30000000000000004) : falloffType == 4 ? 0.30000000000000004*(1 + 0.30000000000000004*(1 - 0.30000000000000004)) : 0"} {"falloffType == 0 ? 0.30000000000000004 :falloffType == 1 ? pow(0.30000000000000004, 3) : falloffType == 2 ? 0.30000000000000004*0.30000000000000004*(3-2*0.30000000000000004) : falloffType == 3 ? 0.30000000000000004*0.30000000000000004*(2 - 0.30000000000000004) : falloffType == 4 ? 0.30000000000000004*(1 + 0.30000000000000004*(1 - 0.30000000000000004)) : 0"}}
  mix {{falloff}}
  name Multiply31
  xpos 3664
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*28, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*28, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur28
  xpos 3564
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.32499999999999996 :falloffType == 1 ? pow(0.32499999999999996, 3) : falloffType == 2 ? 0.32499999999999996*0.32499999999999996*(3-2*0.32499999999999996) : falloffType == 3 ? 0.32499999999999996*0.32499999999999996*(2 - 0.32499999999999996) : falloffType == 4 ? 0.32499999999999996*(1 + 0.32499999999999996*(1 - 0.32499999999999996)) : 0"} {"falloffType == 0 ? 0.32499999999999996 :falloffType == 1 ? pow(0.32499999999999996, 3) : falloffType == 2 ? 0.32499999999999996*0.32499999999999996*(3-2*0.32499999999999996) : falloffType == 3 ? 0.32499999999999996*0.32499999999999996*(2 - 0.32499999999999996) : falloffType == 4 ? 0.32499999999999996*(1 + 0.32499999999999996*(1 - 0.32499999999999996)) : 0"} {"falloffType == 0 ? 0.32499999999999996 :falloffType == 1 ? pow(0.32499999999999996, 3) : falloffType == 2 ? 0.32499999999999996*0.32499999999999996*(3-2*0.32499999999999996) : falloffType == 3 ? 0.32499999999999996*0.32499999999999996*(2 - 0.32499999999999996) : falloffType == 4 ? 0.32499999999999996*(1 + 0.32499999999999996*(1 - 0.32499999999999996)) : 0"} {"falloffType == 0 ? 0.32499999999999996 :falloffType == 1 ? pow(0.32499999999999996, 3) : falloffType == 2 ? 0.32499999999999996*0.32499999999999996*(3-2*0.32499999999999996) : falloffType == 3 ? 0.32499999999999996*0.32499999999999996*(2 - 0.32499999999999996) : falloffType == 4 ? 0.32499999999999996*(1 + 0.32499999999999996*(1 - 0.32499999999999996)) : 0"}}
  mix {{falloff}}
  name Multiply30
  xpos 3564
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*27, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*27, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur27
  xpos 3464
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.35 :falloffType == 1 ? pow(0.35, 3) : falloffType == 2 ? 0.35*0.35*(3-2*0.35) : falloffType == 3 ? 0.35*0.35*(2 - 0.35) : falloffType == 4 ? 0.35*(1 + 0.35*(1 - 0.35)) : 0"} {"falloffType == 0 ? 0.35 :falloffType == 1 ? pow(0.35, 3) : falloffType == 2 ? 0.35*0.35*(3-2*0.35) : falloffType == 3 ? 0.35*0.35*(2 - 0.35) : falloffType == 4 ? 0.35*(1 + 0.35*(1 - 0.35)) : 0"} {"falloffType == 0 ? 0.35 :falloffType == 1 ? pow(0.35, 3) : falloffType == 2 ? 0.35*0.35*(3-2*0.35) : falloffType == 3 ? 0.35*0.35*(2 - 0.35) : falloffType == 4 ? 0.35*(1 + 0.35*(1 - 0.35)) : 0"} {"falloffType == 0 ? 0.35 :falloffType == 1 ? pow(0.35, 3) : falloffType == 2 ? 0.35*0.35*(3-2*0.35) : falloffType == 3 ? 0.35*0.35*(2 - 0.35) : falloffType == 4 ? 0.35*(1 + 0.35*(1 - 0.35)) : 0"}}
  mix {{falloff}}
  name Multiply29
  xpos 3464
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*26, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*26, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur26
  xpos 3364
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.375 :falloffType == 1 ? pow(0.375, 3) : falloffType == 2 ? 0.375*0.375*(3-2*0.375) : falloffType == 3 ? 0.375*0.375*(2 - 0.375) : falloffType == 4 ? 0.375*(1 + 0.375*(1 - 0.375)) : 0"} {"falloffType == 0 ? 0.375 :falloffType == 1 ? pow(0.375, 3) : falloffType == 2 ? 0.375*0.375*(3-2*0.375) : falloffType == 3 ? 0.375*0.375*(2 - 0.375) : falloffType == 4 ? 0.375*(1 + 0.375*(1 - 0.375)) : 0"} {"falloffType == 0 ? 0.375 :falloffType == 1 ? pow(0.375, 3) : falloffType == 2 ? 0.375*0.375*(3-2*0.375) : falloffType == 3 ? 0.375*0.375*(2 - 0.375) : falloffType == 4 ? 0.375*(1 + 0.375*(1 - 0.375)) : 0"} {"falloffType == 0 ? 0.375 :falloffType == 1 ? pow(0.375, 3) : falloffType == 2 ? 0.375*0.375*(3-2*0.375) : falloffType == 3 ? 0.375*0.375*(2 - 0.375) : falloffType == 4 ? 0.375*(1 + 0.375*(1 - 0.375)) : 0"}}
  mix {{falloff}}
  name Multiply28
  xpos 3364
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*25, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*25, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur25
  xpos 3264
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.4 :falloffType == 1 ? pow(0.4, 3) : falloffType == 2 ? 0.4*0.4*(3-2*0.4) : falloffType == 3 ? 0.4*0.4*(2 - 0.4) : falloffType == 4 ? 0.4*(1 + 0.4*(1 - 0.4)) : 0"} {"falloffType == 0 ? 0.4 :falloffType == 1 ? pow(0.4, 3) : falloffType == 2 ? 0.4*0.4*(3-2*0.4) : falloffType == 3 ? 0.4*0.4*(2 - 0.4) : falloffType == 4 ? 0.4*(1 + 0.4*(1 - 0.4)) : 0"} {"falloffType == 0 ? 0.4 :falloffType == 1 ? pow(0.4, 3) : falloffType == 2 ? 0.4*0.4*(3-2*0.4) : falloffType == 3 ? 0.4*0.4*(2 - 0.4) : falloffType == 4 ? 0.4*(1 + 0.4*(1 - 0.4)) : 0"} {"falloffType == 0 ? 0.4 :falloffType == 1 ? pow(0.4, 3) : falloffType == 2 ? 0.4*0.4*(3-2*0.4) : falloffType == 3 ? 0.4*0.4*(2 - 0.4) : falloffType == 4 ? 0.4*(1 + 0.4*(1 - 0.4)) : 0"}}
  mix {{falloff}}
  name Multiply27
  xpos 3264
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*24, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*24, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur24
  xpos 3164
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.42500000000000004 :falloffType == 1 ? pow(0.42500000000000004, 3) : falloffType == 2 ? 0.42500000000000004*0.42500000000000004*(3-2*0.42500000000000004) : falloffType == 3 ? 0.42500000000000004*0.42500000000000004*(2 - 0.42500000000000004) : falloffType == 4 ? 0.42500000000000004*(1 + 0.42500000000000004*(1 - 0.42500000000000004)) : 0"} {"falloffType == 0 ? 0.42500000000000004 :falloffType == 1 ? pow(0.42500000000000004, 3) : falloffType == 2 ? 0.42500000000000004*0.42500000000000004*(3-2*0.42500000000000004) : falloffType == 3 ? 0.42500000000000004*0.42500000000000004*(2 - 0.42500000000000004) : falloffType == 4 ? 0.42500000000000004*(1 + 0.42500000000000004*(1 - 0.42500000000000004)) : 0"} {"falloffType == 0 ? 0.42500000000000004 :falloffType == 1 ? pow(0.42500000000000004, 3) : falloffType == 2 ? 0.42500000000000004*0.42500000000000004*(3-2*0.42500000000000004) : falloffType == 3 ? 0.42500000000000004*0.42500000000000004*(2 - 0.42500000000000004) : falloffType == 4 ? 0.42500000000000004*(1 + 0.42500000000000004*(1 - 0.42500000000000004)) : 0"} {"falloffType == 0 ? 0.42500000000000004 :falloffType == 1 ? pow(0.42500000000000004, 3) : falloffType == 2 ? 0.42500000000000004*0.42500000000000004*(3-2*0.42500000000000004) : falloffType == 3 ? 0.42500000000000004*0.42500000000000004*(2 - 0.42500000000000004) : falloffType == 4 ? 0.42500000000000004*(1 + 0.42500000000000004*(1 - 0.42500000000000004)) : 0"}}
  mix {{falloff}}
  name Multiply26
  xpos 3164
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*23, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*23, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur23
  xpos 3064
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.44999999999999996 :falloffType == 1 ? pow(0.44999999999999996, 3) : falloffType == 2 ? 0.44999999999999996*0.44999999999999996*(3-2*0.44999999999999996) : falloffType == 3 ? 0.44999999999999996*0.44999999999999996*(2 - 0.44999999999999996) : falloffType == 4 ? 0.44999999999999996*(1 + 0.44999999999999996*(1 - 0.44999999999999996)) : 0"} {"falloffType == 0 ? 0.44999999999999996 :falloffType == 1 ? pow(0.44999999999999996, 3) : falloffType == 2 ? 0.44999999999999996*0.44999999999999996*(3-2*0.44999999999999996) : falloffType == 3 ? 0.44999999999999996*0.44999999999999996*(2 - 0.44999999999999996) : falloffType == 4 ? 0.44999999999999996*(1 + 0.44999999999999996*(1 - 0.44999999999999996)) : 0"} {"falloffType == 0 ? 0.44999999999999996 :falloffType == 1 ? pow(0.44999999999999996, 3) : falloffType == 2 ? 0.44999999999999996*0.44999999999999996*(3-2*0.44999999999999996) : falloffType == 3 ? 0.44999999999999996*0.44999999999999996*(2 - 0.44999999999999996) : falloffType == 4 ? 0.44999999999999996*(1 + 0.44999999999999996*(1 - 0.44999999999999996)) : 0"} {"falloffType == 0 ? 0.44999999999999996 :falloffType == 1 ? pow(0.44999999999999996, 3) : falloffType == 2 ? 0.44999999999999996*0.44999999999999996*(3-2*0.44999999999999996) : falloffType == 3 ? 0.44999999999999996*0.44999999999999996*(2 - 0.44999999999999996) : falloffType == 4 ? 0.44999999999999996*(1 + 0.44999999999999996*(1 - 0.44999999999999996)) : 0"}}
  mix {{falloff}}
  name Multiply25
  xpos 3064
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*22, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*22, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur22
  xpos 2964
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.475 :falloffType == 1 ? pow(0.475, 3) : falloffType == 2 ? 0.475*0.475*(3-2*0.475) : falloffType == 3 ? 0.475*0.475*(2 - 0.475) : falloffType == 4 ? 0.475*(1 + 0.475*(1 - 0.475)) : 0"} {"falloffType == 0 ? 0.475 :falloffType == 1 ? pow(0.475, 3) : falloffType == 2 ? 0.475*0.475*(3-2*0.475) : falloffType == 3 ? 0.475*0.475*(2 - 0.475) : falloffType == 4 ? 0.475*(1 + 0.475*(1 - 0.475)) : 0"} {"falloffType == 0 ? 0.475 :falloffType == 1 ? pow(0.475, 3) : falloffType == 2 ? 0.475*0.475*(3-2*0.475) : falloffType == 3 ? 0.475*0.475*(2 - 0.475) : falloffType == 4 ? 0.475*(1 + 0.475*(1 - 0.475)) : 0"} {"falloffType == 0 ? 0.475 :falloffType == 1 ? pow(0.475, 3) : falloffType == 2 ? 0.475*0.475*(3-2*0.475) : falloffType == 3 ? 0.475*0.475*(2 - 0.475) : falloffType == 4 ? 0.475*(1 + 0.475*(1 - 0.475)) : 0"}}
  mix {{falloff}}
  name Multiply24
  xpos 2964
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*21, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*21, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur21
  xpos 2864
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.5 :falloffType == 1 ? pow(0.5, 3) : falloffType == 2 ? 0.5*0.5*(3-2*0.5) : falloffType == 3 ? 0.5*0.5*(2 - 0.5) : falloffType == 4 ? 0.5*(1 + 0.5*(1 - 0.5)) : 0"} {"falloffType == 0 ? 0.5 :falloffType == 1 ? pow(0.5, 3) : falloffType == 2 ? 0.5*0.5*(3-2*0.5) : falloffType == 3 ? 0.5*0.5*(2 - 0.5) : falloffType == 4 ? 0.5*(1 + 0.5*(1 - 0.5)) : 0"} {"falloffType == 0 ? 0.5 :falloffType == 1 ? pow(0.5, 3) : falloffType == 2 ? 0.5*0.5*(3-2*0.5) : falloffType == 3 ? 0.5*0.5*(2 - 0.5) : falloffType == 4 ? 0.5*(1 + 0.5*(1 - 0.5)) : 0"} {"falloffType == 0 ? 0.5 :falloffType == 1 ? pow(0.5, 3) : falloffType == 2 ? 0.5*0.5*(3-2*0.5) : falloffType == 3 ? 0.5*0.5*(2 - 0.5) : falloffType == 4 ? 0.5*(1 + 0.5*(1 - 0.5)) : 0"}}
  mix {{falloff}}
  name Multiply23
  xpos 2864
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*20, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*20, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur20
  xpos 2764
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.525 :falloffType == 1 ? pow(0.525, 3) : falloffType == 2 ? 0.525*0.525*(3-2*0.525) : falloffType == 3 ? 0.525*0.525*(2 - 0.525) : falloffType == 4 ? 0.525*(1 + 0.525*(1 - 0.525)) : 0"} {"falloffType == 0 ? 0.525 :falloffType == 1 ? pow(0.525, 3) : falloffType == 2 ? 0.525*0.525*(3-2*0.525) : falloffType == 3 ? 0.525*0.525*(2 - 0.525) : falloffType == 4 ? 0.525*(1 + 0.525*(1 - 0.525)) : 0"} {"falloffType == 0 ? 0.525 :falloffType == 1 ? pow(0.525, 3) : falloffType == 2 ? 0.525*0.525*(3-2*0.525) : falloffType == 3 ? 0.525*0.525*(2 - 0.525) : falloffType == 4 ? 0.525*(1 + 0.525*(1 - 0.525)) : 0"} {"falloffType == 0 ? 0.525 :falloffType == 1 ? pow(0.525, 3) : falloffType == 2 ? 0.525*0.525*(3-2*0.525) : falloffType == 3 ? 0.525*0.525*(2 - 0.525) : falloffType == 4 ? 0.525*(1 + 0.525*(1 - 0.525)) : 0"}}
  mix {{falloff}}
  name Multiply22
  xpos 2764
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*19, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*19, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur19
  xpos 2664
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.55 :falloffType == 1 ? pow(0.55, 3) : falloffType == 2 ? 0.55*0.55*(3-2*0.55) : falloffType == 3 ? 0.55*0.55*(2 - 0.55) : falloffType == 4 ? 0.55*(1 + 0.55*(1 - 0.55)) : 0"} {"falloffType == 0 ? 0.55 :falloffType == 1 ? pow(0.55, 3) : falloffType == 2 ? 0.55*0.55*(3-2*0.55) : falloffType == 3 ? 0.55*0.55*(2 - 0.55) : falloffType == 4 ? 0.55*(1 + 0.55*(1 - 0.55)) : 0"} {"falloffType == 0 ? 0.55 :falloffType == 1 ? pow(0.55, 3) : falloffType == 2 ? 0.55*0.55*(3-2*0.55) : falloffType == 3 ? 0.55*0.55*(2 - 0.55) : falloffType == 4 ? 0.55*(1 + 0.55*(1 - 0.55)) : 0"} {"falloffType == 0 ? 0.55 :falloffType == 1 ? pow(0.55, 3) : falloffType == 2 ? 0.55*0.55*(3-2*0.55) : falloffType == 3 ? 0.55*0.55*(2 - 0.55) : falloffType == 4 ? 0.55*(1 + 0.55*(1 - 0.55)) : 0"}}
  mix {{falloff}}
  name Multiply21
  xpos 2664
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*18, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*18, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur18
  xpos 2564
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.575 :falloffType == 1 ? pow(0.575, 3) : falloffType == 2 ? 0.575*0.575*(3-2*0.575) : falloffType == 3 ? 0.575*0.575*(2 - 0.575) : falloffType == 4 ? 0.575*(1 + 0.575*(1 - 0.575)) : 0"} {"falloffType == 0 ? 0.575 :falloffType == 1 ? pow(0.575, 3) : falloffType == 2 ? 0.575*0.575*(3-2*0.575) : falloffType == 3 ? 0.575*0.575*(2 - 0.575) : falloffType == 4 ? 0.575*(1 + 0.575*(1 - 0.575)) : 0"} {"falloffType == 0 ? 0.575 :falloffType == 1 ? pow(0.575, 3) : falloffType == 2 ? 0.575*0.575*(3-2*0.575) : falloffType == 3 ? 0.575*0.575*(2 - 0.575) : falloffType == 4 ? 0.575*(1 + 0.575*(1 - 0.575)) : 0"} {"falloffType == 0 ? 0.575 :falloffType == 1 ? pow(0.575, 3) : falloffType == 2 ? 0.575*0.575*(3-2*0.575) : falloffType == 3 ? 0.575*0.575*(2 - 0.575) : falloffType == 4 ? 0.575*(1 + 0.575*(1 - 0.575)) : 0"}}
  mix {{falloff}}
  name Multiply20
  xpos 2564
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*17, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*17, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur17
  xpos 2464
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.6 :falloffType == 1 ? pow(0.6, 3) : falloffType == 2 ? 0.6*0.6*(3-2*0.6) : falloffType == 3 ? 0.6*0.6*(2 - 0.6) : falloffType == 4 ? 0.6*(1 + 0.6*(1 - 0.6)) : 0"} {"falloffType == 0 ? 0.6 :falloffType == 1 ? pow(0.6, 3) : falloffType == 2 ? 0.6*0.6*(3-2*0.6) : falloffType == 3 ? 0.6*0.6*(2 - 0.6) : falloffType == 4 ? 0.6*(1 + 0.6*(1 - 0.6)) : 0"} {"falloffType == 0 ? 0.6 :falloffType == 1 ? pow(0.6, 3) : falloffType == 2 ? 0.6*0.6*(3-2*0.6) : falloffType == 3 ? 0.6*0.6*(2 - 0.6) : falloffType == 4 ? 0.6*(1 + 0.6*(1 - 0.6)) : 0"} {"falloffType == 0 ? 0.6 :falloffType == 1 ? pow(0.6, 3) : falloffType == 2 ? 0.6*0.6*(3-2*0.6) : falloffType == 3 ? 0.6*0.6*(2 - 0.6) : falloffType == 4 ? 0.6*(1 + 0.6*(1 - 0.6)) : 0"}}
  mix {{falloff}}
  name Multiply19
  xpos 2464
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*16, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*16, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur16
  xpos 2364
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.625 :falloffType == 1 ? pow(0.625, 3) : falloffType == 2 ? 0.625*0.625*(3-2*0.625) : falloffType == 3 ? 0.625*0.625*(2 - 0.625) : falloffType == 4 ? 0.625*(1 + 0.625*(1 - 0.625)) : 0"} {"falloffType == 0 ? 0.625 :falloffType == 1 ? pow(0.625, 3) : falloffType == 2 ? 0.625*0.625*(3-2*0.625) : falloffType == 3 ? 0.625*0.625*(2 - 0.625) : falloffType == 4 ? 0.625*(1 + 0.625*(1 - 0.625)) : 0"} {"falloffType == 0 ? 0.625 :falloffType == 1 ? pow(0.625, 3) : falloffType == 2 ? 0.625*0.625*(3-2*0.625) : falloffType == 3 ? 0.625*0.625*(2 - 0.625) : falloffType == 4 ? 0.625*(1 + 0.625*(1 - 0.625)) : 0"} {"falloffType == 0 ? 0.625 :falloffType == 1 ? pow(0.625, 3) : falloffType == 2 ? 0.625*0.625*(3-2*0.625) : falloffType == 3 ? 0.625*0.625*(2 - 0.625) : falloffType == 4 ? 0.625*(1 + 0.625*(1 - 0.625)) : 0"}}
  mix {{falloff}}
  name Multiply18
  xpos 2364
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*15, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*15, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur15
  xpos 2264
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.65 :falloffType == 1 ? pow(0.65, 3) : falloffType == 2 ? 0.65*0.65*(3-2*0.65) : falloffType == 3 ? 0.65*0.65*(2 - 0.65) : falloffType == 4 ? 0.65*(1 + 0.65*(1 - 0.65)) : 0"} {"falloffType == 0 ? 0.65 :falloffType == 1 ? pow(0.65, 3) : falloffType == 2 ? 0.65*0.65*(3-2*0.65) : falloffType == 3 ? 0.65*0.65*(2 - 0.65) : falloffType == 4 ? 0.65*(1 + 0.65*(1 - 0.65)) : 0"} {"falloffType == 0 ? 0.65 :falloffType == 1 ? pow(0.65, 3) : falloffType == 2 ? 0.65*0.65*(3-2*0.65) : falloffType == 3 ? 0.65*0.65*(2 - 0.65) : falloffType == 4 ? 0.65*(1 + 0.65*(1 - 0.65)) : 0"} {"falloffType == 0 ? 0.65 :falloffType == 1 ? pow(0.65, 3) : falloffType == 2 ? 0.65*0.65*(3-2*0.65) : falloffType == 3 ? 0.65*0.65*(2 - 0.65) : falloffType == 4 ? 0.65*(1 + 0.65*(1 - 0.65)) : 0"}}
  mix {{falloff}}
  name Multiply17
  xpos 2264
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*14, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*14, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur14
  xpos 2164
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.675 :falloffType == 1 ? pow(0.675, 3) : falloffType == 2 ? 0.675*0.675*(3-2*0.675) : falloffType == 3 ? 0.675*0.675*(2 - 0.675) : falloffType == 4 ? 0.675*(1 + 0.675*(1 - 0.675)) : 0"} {"falloffType == 0 ? 0.675 :falloffType == 1 ? pow(0.675, 3) : falloffType == 2 ? 0.675*0.675*(3-2*0.675) : falloffType == 3 ? 0.675*0.675*(2 - 0.675) : falloffType == 4 ? 0.675*(1 + 0.675*(1 - 0.675)) : 0"} {"falloffType == 0 ? 0.675 :falloffType == 1 ? pow(0.675, 3) : falloffType == 2 ? 0.675*0.675*(3-2*0.675) : falloffType == 3 ? 0.675*0.675*(2 - 0.675) : falloffType == 4 ? 0.675*(1 + 0.675*(1 - 0.675)) : 0"} {"falloffType == 0 ? 0.675 :falloffType == 1 ? pow(0.675, 3) : falloffType == 2 ? 0.675*0.675*(3-2*0.675) : falloffType == 3 ? 0.675*0.675*(2 - 0.675) : falloffType == 4 ? 0.675*(1 + 0.675*(1 - 0.675)) : 0"}}
  mix {{falloff}}
  name Multiply16
  xpos 2164
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*13, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*13, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur13
  xpos 2064
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.7 :falloffType == 1 ? pow(0.7, 3) : falloffType == 2 ? 0.7*0.7*(3-2*0.7) : falloffType == 3 ? 0.7*0.7*(2 - 0.7) : falloffType == 4 ? 0.7*(1 + 0.7*(1 - 0.7)) : 0"} {"falloffType == 0 ? 0.7 :falloffType == 1 ? pow(0.7, 3) : falloffType == 2 ? 0.7*0.7*(3-2*0.7) : falloffType == 3 ? 0.7*0.7*(2 - 0.7) : falloffType == 4 ? 0.7*(1 + 0.7*(1 - 0.7)) : 0"} {"falloffType == 0 ? 0.7 :falloffType == 1 ? pow(0.7, 3) : falloffType == 2 ? 0.7*0.7*(3-2*0.7) : falloffType == 3 ? 0.7*0.7*(2 - 0.7) : falloffType == 4 ? 0.7*(1 + 0.7*(1 - 0.7)) : 0"} {"falloffType == 0 ? 0.7 :falloffType == 1 ? pow(0.7, 3) : falloffType == 2 ? 0.7*0.7*(3-2*0.7) : falloffType == 3 ? 0.7*0.7*(2 - 0.7) : falloffType == 4 ? 0.7*(1 + 0.7*(1 - 0.7)) : 0"}}
  mix {{falloff}}
  name Multiply15
  xpos 2064
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*12, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*12, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur12
  xpos 1964
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.725 :falloffType == 1 ? pow(0.725, 3) : falloffType == 2 ? 0.725*0.725*(3-2*0.725) : falloffType == 3 ? 0.725*0.725*(2 - 0.725) : falloffType == 4 ? 0.725*(1 + 0.725*(1 - 0.725)) : 0"} {"falloffType == 0 ? 0.725 :falloffType == 1 ? pow(0.725, 3) : falloffType == 2 ? 0.725*0.725*(3-2*0.725) : falloffType == 3 ? 0.725*0.725*(2 - 0.725) : falloffType == 4 ? 0.725*(1 + 0.725*(1 - 0.725)) : 0"} {"falloffType == 0 ? 0.725 :falloffType == 1 ? pow(0.725, 3) : falloffType == 2 ? 0.725*0.725*(3-2*0.725) : falloffType == 3 ? 0.725*0.725*(2 - 0.725) : falloffType == 4 ? 0.725*(1 + 0.725*(1 - 0.725)) : 0"} {"falloffType == 0 ? 0.725 :falloffType == 1 ? pow(0.725, 3) : falloffType == 2 ? 0.725*0.725*(3-2*0.725) : falloffType == 3 ? 0.725*0.725*(2 - 0.725) : falloffType == 4 ? 0.725*(1 + 0.725*(1 - 0.725)) : 0"}}
  mix {{falloff}}
  name Multiply14
  xpos 1964
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*11, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*11, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur11
  xpos 1864
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.75 :falloffType == 1 ? pow(0.75, 3) : falloffType == 2 ? 0.75*0.75*(3-2*0.75) : falloffType == 3 ? 0.75*0.75*(2 - 0.75) : falloffType == 4 ? 0.75*(1 + 0.75*(1 - 0.75)) : 0"} {"falloffType == 0 ? 0.75 :falloffType == 1 ? pow(0.75, 3) : falloffType == 2 ? 0.75*0.75*(3-2*0.75) : falloffType == 3 ? 0.75*0.75*(2 - 0.75) : falloffType == 4 ? 0.75*(1 + 0.75*(1 - 0.75)) : 0"} {"falloffType == 0 ? 0.75 :falloffType == 1 ? pow(0.75, 3) : falloffType == 2 ? 0.75*0.75*(3-2*0.75) : falloffType == 3 ? 0.75*0.75*(2 - 0.75) : falloffType == 4 ? 0.75*(1 + 0.75*(1 - 0.75)) : 0"} {"falloffType == 0 ? 0.75 :falloffType == 1 ? pow(0.75, 3) : falloffType == 2 ? 0.75*0.75*(3-2*0.75) : falloffType == 3 ? 0.75*0.75*(2 - 0.75) : falloffType == 4 ? 0.75*(1 + 0.75*(1 - 0.75)) : 0"}}
  mix {{falloff}}
  name Multiply13
  xpos 1864
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*10, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*10, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur10
  xpos 1764
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.775 :falloffType == 1 ? pow(0.775, 3) : falloffType == 2 ? 0.775*0.775*(3-2*0.775) : falloffType == 3 ? 0.775*0.775*(2 - 0.775) : falloffType == 4 ? 0.775*(1 + 0.775*(1 - 0.775)) : 0"} {"falloffType == 0 ? 0.775 :falloffType == 1 ? pow(0.775, 3) : falloffType == 2 ? 0.775*0.775*(3-2*0.775) : falloffType == 3 ? 0.775*0.775*(2 - 0.775) : falloffType == 4 ? 0.775*(1 + 0.775*(1 - 0.775)) : 0"} {"falloffType == 0 ? 0.775 :falloffType == 1 ? pow(0.775, 3) : falloffType == 2 ? 0.775*0.775*(3-2*0.775) : falloffType == 3 ? 0.775*0.775*(2 - 0.775) : falloffType == 4 ? 0.775*(1 + 0.775*(1 - 0.775)) : 0"} {"falloffType == 0 ? 0.775 :falloffType == 1 ? pow(0.775, 3) : falloffType == 2 ? 0.775*0.775*(3-2*0.775) : falloffType == 3 ? 0.775*0.775*(2 - 0.775) : falloffType == 4 ? 0.775*(1 + 0.775*(1 - 0.775)) : 0"}}
  mix {{falloff}}
  name Multiply10
  xpos 1764
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*9, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*9, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur9
  xpos 1664
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.8 :falloffType == 1 ? pow(0.8, 3) : falloffType == 2 ? 0.8*0.8*(3-2*0.8) : falloffType == 3 ? 0.8*0.8*(2 - 0.8) : falloffType == 4 ? 0.8*(1 + 0.8*(1 - 0.8)) : 0"} {"falloffType == 0 ? 0.8 :falloffType == 1 ? pow(0.8, 3) : falloffType == 2 ? 0.8*0.8*(3-2*0.8) : falloffType == 3 ? 0.8*0.8*(2 - 0.8) : falloffType == 4 ? 0.8*(1 + 0.8*(1 - 0.8)) : 0"} {"falloffType == 0 ? 0.8 :falloffType == 1 ? pow(0.8, 3) : falloffType == 2 ? 0.8*0.8*(3-2*0.8) : falloffType == 3 ? 0.8*0.8*(2 - 0.8) : falloffType == 4 ? 0.8*(1 + 0.8*(1 - 0.8)) : 0"} {"falloffType == 0 ? 0.8 :falloffType == 1 ? pow(0.8, 3) : falloffType == 2 ? 0.8*0.8*(3-2*0.8) : falloffType == 3 ? 0.8*0.8*(2 - 0.8) : falloffType == 4 ? 0.8*(1 + 0.8*(1 - 0.8)) : 0"}}
  mix {{falloff}}
  name Multiply9
  xpos 1664
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*8, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*8, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur8
  xpos 1564
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.825 :falloffType == 1 ? pow(0.825, 3) : falloffType == 2 ? 0.825*0.825*(3-2*0.825) : falloffType == 3 ? 0.825*0.825*(2 - 0.825) : falloffType == 4 ? 0.825*(1 + 0.825*(1 - 0.825)) : 0"} {"falloffType == 0 ? 0.825 :falloffType == 1 ? pow(0.825, 3) : falloffType == 2 ? 0.825*0.825*(3-2*0.825) : falloffType == 3 ? 0.825*0.825*(2 - 0.825) : falloffType == 4 ? 0.825*(1 + 0.825*(1 - 0.825)) : 0"} {"falloffType == 0 ? 0.825 :falloffType == 1 ? pow(0.825, 3) : falloffType == 2 ? 0.825*0.825*(3-2*0.825) : falloffType == 3 ? 0.825*0.825*(2 - 0.825) : falloffType == 4 ? 0.825*(1 + 0.825*(1 - 0.825)) : 0"} {"falloffType == 0 ? 0.825 :falloffType == 1 ? pow(0.825, 3) : falloffType == 2 ? 0.825*0.825*(3-2*0.825) : falloffType == 3 ? 0.825*0.825*(2 - 0.825) : falloffType == 4 ? 0.825*(1 + 0.825*(1 - 0.825)) : 0"}}
  mix {{falloff}}
  name Multiply8
  xpos 1564
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*7, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*7, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur7
  xpos 1464
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.85 :falloffType == 1 ? pow(0.85, 3) : falloffType == 2 ? 0.85*0.85*(3-2*0.85) : falloffType == 3 ? 0.85*0.85*(2 - 0.85) : falloffType == 4 ? 0.85*(1 + 0.85*(1 - 0.85)) : 0"} {"falloffType == 0 ? 0.85 :falloffType == 1 ? pow(0.85, 3) : falloffType == 2 ? 0.85*0.85*(3-2*0.85) : falloffType == 3 ? 0.85*0.85*(2 - 0.85) : falloffType == 4 ? 0.85*(1 + 0.85*(1 - 0.85)) : 0"} {"falloffType == 0 ? 0.85 :falloffType == 1 ? pow(0.85, 3) : falloffType == 2 ? 0.85*0.85*(3-2*0.85) : falloffType == 3 ? 0.85*0.85*(2 - 0.85) : falloffType == 4 ? 0.85*(1 + 0.85*(1 - 0.85)) : 0"} {"falloffType == 0 ? 0.85 :falloffType == 1 ? pow(0.85, 3) : falloffType == 2 ? 0.85*0.85*(3-2*0.85) : falloffType == 3 ? 0.85*0.85*(2 - 0.85) : falloffType == 4 ? 0.85*(1 + 0.85*(1 - 0.85)) : 0"}}
  mix {{falloff}}
  name Multiply7
  xpos 1464
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*6, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*6, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur6
  xpos 1364
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.875 :falloffType == 1 ? pow(0.875, 3) : falloffType == 2 ? 0.875*0.875*(3-2*0.875) : falloffType == 3 ? 0.875*0.875*(2 - 0.875) : falloffType == 4 ? 0.875*(1 + 0.875*(1 - 0.875)) : 0"} {"falloffType == 0 ? 0.875 :falloffType == 1 ? pow(0.875, 3) : falloffType == 2 ? 0.875*0.875*(3-2*0.875) : falloffType == 3 ? 0.875*0.875*(2 - 0.875) : falloffType == 4 ? 0.875*(1 + 0.875*(1 - 0.875)) : 0"} {"falloffType == 0 ? 0.875 :falloffType == 1 ? pow(0.875, 3) : falloffType == 2 ? 0.875*0.875*(3-2*0.875) : falloffType == 3 ? 0.875*0.875*(2 - 0.875) : falloffType == 4 ? 0.875*(1 + 0.875*(1 - 0.875)) : 0"} {"falloffType == 0 ? 0.875 :falloffType == 1 ? pow(0.875, 3) : falloffType == 2 ? 0.875*0.875*(3-2*0.875) : falloffType == 3 ? 0.875*0.875*(2 - 0.875) : falloffType == 4 ? 0.875*(1 + 0.875*(1 - 0.875)) : 0"}}
  mix {{falloff}}
  name Multiply6
  xpos 1364
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*5, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*5, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur5
  xpos 1264
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.9 :falloffType == 1 ? pow(0.9, 3) : falloffType == 2 ? 0.9*0.9*(3-2*0.9) : falloffType == 3 ? 0.9*0.9*(2 - 0.9) : falloffType == 4 ? 0.9*(1 + 0.9*(1 - 0.9)) : 0"} {"falloffType == 0 ? 0.9 :falloffType == 1 ? pow(0.9, 3) : falloffType == 2 ? 0.9*0.9*(3-2*0.9) : falloffType == 3 ? 0.9*0.9*(2 - 0.9) : falloffType == 4 ? 0.9*(1 + 0.9*(1 - 0.9)) : 0"} {"falloffType == 0 ? 0.9 :falloffType == 1 ? pow(0.9, 3) : falloffType == 2 ? 0.9*0.9*(3-2*0.9) : falloffType == 3 ? 0.9*0.9*(2 - 0.9) : falloffType == 4 ? 0.9*(1 + 0.9*(1 - 0.9)) : 0"} {"falloffType == 0 ? 0.9 :falloffType == 1 ? pow(0.9, 3) : falloffType == 2 ? 0.9*0.9*(3-2*0.9) : falloffType == 3 ? 0.9*0.9*(2 - 0.9) : falloffType == 4 ? 0.9*(1 + 0.9*(1 - 0.9)) : 0"}}
  mix {{falloff}}
  name Multiply5
  xpos 1264
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*4, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*4, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur4
  xpos 1164
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.925 :falloffType == 1 ? pow(0.925, 3) : falloffType == 2 ? 0.925*0.925*(3-2*0.925) : falloffType == 3 ? 0.925*0.925*(2 - 0.925) : falloffType == 4 ? 0.925*(1 + 0.925*(1 - 0.925)) : 0"} {"falloffType == 0 ? 0.925 :falloffType == 1 ? pow(0.925, 3) : falloffType == 2 ? 0.925*0.925*(3-2*0.925) : falloffType == 3 ? 0.925*0.925*(2 - 0.925) : falloffType == 4 ? 0.925*(1 + 0.925*(1 - 0.925)) : 0"} {"falloffType == 0 ? 0.925 :falloffType == 1 ? pow(0.925, 3) : falloffType == 2 ? 0.925*0.925*(3-2*0.925) : falloffType == 3 ? 0.925*0.925*(2 - 0.925) : falloffType == 4 ? 0.925*(1 + 0.925*(1 - 0.925)) : 0"} {"falloffType == 0 ? 0.925 :falloffType == 1 ? pow(0.925, 3) : falloffType == 2 ? 0.925*0.925*(3-2*0.925) : falloffType == 3 ? 0.925*0.925*(2 - 0.925) : falloffType == 4 ? 0.925*(1 + 0.925*(1 - 0.925)) : 0"}}
  mix {{falloff}}
  name Multiply4
  xpos 1164
  ypos -477
 }
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*3, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*3, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur3
  xpos 1064
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.95 :falloffType == 1 ? pow(0.95, 3) : falloffType == 2 ? 0.95*0.95*(3-2*0.95) : falloffType == 3 ? 0.95*0.95*(2 - 0.95) : falloffType == 4 ? 0.95*(1 + 0.95*(1 - 0.95)) : 0"} {"falloffType == 0 ? 0.95 :falloffType == 1 ? pow(0.95, 3) : falloffType == 2 ? 0.95*0.95*(3-2*0.95) : falloffType == 3 ? 0.95*0.95*(2 - 0.95) : falloffType == 4 ? 0.95*(1 + 0.95*(1 - 0.95)) : 0"} {"falloffType == 0 ? 0.95 :falloffType == 1 ? pow(0.95, 3) : falloffType == 2 ? 0.95*0.95*(3-2*0.95) : falloffType == 3 ? 0.95*0.95*(2 - 0.95) : falloffType == 4 ? 0.95*(1 + 0.95*(1 - 0.95)) : 0"} {"falloffType == 0 ? 0.95 :falloffType == 1 ? pow(0.95, 3) : falloffType == 2 ? 0.95*0.95*(3-2*0.95) : falloffType == 3 ? 0.95*0.95*(2 - 0.95) : falloffType == 4 ? 0.95*(1 + 0.95*(1 - 0.95)) : 0"}}
  mix {{falloff}}
  name Multiply3
  xpos 1064
  ypos -477
 }
push 0
push $Needdf800
 Blur {
  size {{"(width/25*pow(parent.size*2, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*2, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
  crop false
  name Blur2
  xpos 964
  ypos -555
 }
 Multiply {
  value {{"falloffType == 0 ? 0.975 :falloffType == 1 ? pow(0.975, 3) : falloffType == 2 ? 0.975*0.975*(3-2*0.975) : falloffType == 3 ? 0.975*0.975*(2 - 0.975) : falloffType == 4 ? 0.975*(1 + 0.975*(1 - 0.975)) : 0"} {"falloffType == 0 ? 0.975 :falloffType == 1 ? pow(0.975, 3) : falloffType == 2 ? 0.975*0.975*(3-2*0.975) : falloffType == 3 ? 0.975*0.975*(2 - 0.975) : falloffType == 4 ? 0.975*(1 + 0.975*(1 - 0.975)) : 0"} {"falloffType == 0 ? 0.975 :falloffType == 1 ? pow(0.975, 3) : falloffType == 2 ? 0.975*0.975*(3-2*0.975) : falloffType == 3 ? 0.975*0.975*(2 - 0.975) : falloffType == 4 ? 0.975*(1 + 0.975*(1 - 0.975)) : 0"} {"falloffType == 0 ? 0.975 :falloffType == 1 ? pow(0.975, 3) : falloffType == 2 ? 0.975*0.975*(3-2*0.975) : falloffType == 3 ? 0.975*0.975*(2 - 0.975) : falloffType == 4 ? 0.975*(1 + 0.975*(1 - 0.975)) : 0"}}
  mix {{falloff}}
  name Multiply2
  xpos 964
  ypos -477
 }
push $Needdf800
 Blur {
  size {{(width/10*parent.size*(aspectCalc.aspect.w/100))} {(height/10*parent.size*(aspectCalc.aspect.h/100))}}
  crop false
  name Blur1
  xpos 864
  ypos -555
 }
 Multiply {
  value {1 1 1 1}
  mix {{falloff}}
  name Multiply1
  xpos 864
  ypos -477
 }
 Merge2 {
  inputs 40+1
  operation {{mergeNumber.mergeNumber}}
  also_merge all
  name Merge1
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos 864
  ypos -327
 }
 NoOp {
  name End
  xpos 864
  ypos -279
 }
set N6e60d000 [stack 0]
 CopyBBox {
  inputs 2
  name CopyBBox1
  xpos 585
  ypos -149
 }
 Group {
  name BBoxToFormat
  onCreate "n = nuke.thisNode()\ninputFormat = n.knob(\"inputFormat\")\ninputBBox = n.knob(\"inputBBox\")\ncrop = nuke.toNode(\"Crop6\")\ncropb = crop.knob('box')\noutputBBox = n.knob('outputBBox')\noutputBBoxCenter = n.knob(\"outputBBoxCenter\")\n\ninputFormat.setFlag(0x0000000000008000)\ninputBBox.setFlag(0x0000000000008000)\ncropb.setFlag(0x0000000000008000)\noutputBBox.setFlag(0x0000000000008000)\noutputBBoxCenter.setFlag(0x0000000000008000)\n\nn = nuke.thisNode()\nn.knob(\"overscan\").setRange(0,400)\nn.knob(\"overscanPercent\").setRange(1,4)"
  tile_color 0xa57aaaff
  note_font "Verdana Bold"
  note_font_color 0xffffffff
  xpos 585
  ypos -106
  addUserKnob {20 CropBBox}
  addUserKnob {4 type l Type +INVISIBLE M {"To Format" "To BBox"}}
  addUserKnob {41 intersect T Crop6.intersect}
  addUserKnob {6 blackOutside l "Black Outside" -STARTLINE}
  addUserKnob {4 overscanType l "Overscan Type:" M {Pixels Percentage}}
  overscanType {{parent.safetyBBoxMethod}}
  addUserKnob {14 overscan l Overscan R 0 400}
  overscan {{parent.safeBBoxPixels} {parent.safeBBoxPixels}}
  addUserKnob {14 overscanPercent l "Overscan Percent" R 1 4}
  overscanPercent {{parent.safeBBoxPercent} {parent.safeBBoxPercent}}
  addUserKnob {20 inputBbox l "BBox Data" n 1}
  addUserKnob {15 inputFormat l "Input Format"}
  inputFormat {0 0 {input.width} {input.height}}
  addUserKnob {15 inputBBox l "Input BBox"}
  inputBBox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
  addUserKnob {12 outputBBoxCenter l OutputBBoxCenter}
  outputBBoxCenter {{OutputBBox1.outputBBoxCenter.w} {OutputBBox1.outputBBoxCenter.h}}
  addUserKnob {15 outputBBox l "Output BBox"}
  outputBBox {{OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox}}
  addUserKnob {20 endGroup n -1}
  addUserKnob {20 info_1 l Info}
  addUserKnob {26 creator l Creator: T "<b><big>Tony Lyons"}
  addUserKnob {26 desc l Description: t "crop to inputformat\n\ndisplays values of input bbox" T CropBBox}
  addUserKnob {26 ver l Version: T v02}
 }
  Input {
   inputs 0
   name Input
   xpos 261
   ypos 394
  }
  Dot {
   name Dot2
   note_font_size 41
   xpos 295
   ypos 462
  }
set N6e60dc00 [stack 0]
  Dot {
   name Dot1
   note_font_size 41
   xpos -160
   ypos 462
  }
set N6e640000 [stack 0]
push $N6e60dc00
  Crop {
   box {{parent.inputBBox} {parent.inputBBox} {parent.inputBBox} {parent.inputBBox}}
   crop {{parent.blackOutside}}
   name Crop6
   xpos 261
   ypos 510
   addUserKnob {20 User}
   addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  }
set N6e640400 [stack 0]
  Remove {
   operation keep
   channels none
   name Remove1
   xpos 120
   ypos 504
  }
set N6e640800 [stack 0]
  Transform {
   scale {{parent.overscanPercent} {parent.overscanPercent}}
   center {{((input.bbox.r-input.bbox.x)/2)+input.bbox.x} {((input.bbox.t-input.bbox.y)/2)+input.bbox.y}}
   shutteroffset centred
   name Transform1
   selected true
   xpos 120
   ypos 553
  }
push $N6e640800
  AdjBBox {
   numpixels {{parent.overscan} {parent.overscan}}
   name AdjBBox1
   xpos -5
   ypos 510
  }
  Switch {
   inputs 2
   which {{overscanType}}
   name Switch2
   label "\[value which]"
   xpos -5
   ypos 549
  }
  Merge2 {
   inputs 2
   bbox intersection
   Achannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
   Bchannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
   output {-rgba.red -rgba.green -rgba.blue rgba.alpha}
   name Merge1
   xpos -5
   ypos 647
   disable {{!parent.Crop6.intersect}}
  }
push $N6e640000
  CopyBBox {
   inputs 2
   name CopyBBox1
   xpos -194
   ypos 653
  }
  BlackOutside {
   name BlackOutside1
   xpos -194
   ypos 692
   disable {{!parent.blackOutside}}
  }
  Dot {
   name Dot4
   note_font_size 41
   xpos -160
   ypos 769
  }
push $N6e640400
  Switch {
   inputs 2
   which {{"overscanType == 0 ? overscan.w != 0 || overscan.h != 0 : overscanPercent.w != 1 || overscanPercent.h != 1 ? 1 : 0"}}
   name Switch1
   label "\[value which]"
   xpos 261
   ypos 759
  }
set N2e04800 [stack 0]
  Output {
   name Output1
   xpos 261
   ypos 921
  }
push $N2e04800
  NoOp {
   name OutputBBox1
   xpos 378
   ypos 821
   addUserKnob {20 User}
   addUserKnob {15 OutputBBox l "Output BBox"}
   OutputBBox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
   addUserKnob {14 outputBBoxCenter l "Output BBox Center" R 0 100}
   outputBBoxCenter {{OutputBBox.x+(OutputBBox.r-OutputBBox.x)/2} {OutputBBox.y+(OutputBBox.t-OutputBBox.y)/2}}
  }
 end_group
push $N6e60d000
 Merge2 {
  inputs 2
  bbox intersection
  name Merge4
  xpos 585
  ypos -66
 }
push $N6e60d000
 CopyBBox {
  inputs 2
  name CopyBBox2
  xpos 585
  ypos -21
 }
set N2e05800 [stack 0]
push $Needdf400
 Dot {
  name Dot4
  note_font_size 41
  xpos 540
  ypos -678
 }
 NoOp {
  name Original
  xpos 506
  ypos -327
 }
 Dot {
  name Dot5
  note_font_size 41
  xpos 540
  ypos 78
 }
push $N2e05800
push $N6e60d000
 Switch {
  inputs 2
  which {{"parent.safeBBox && ((BBoxResult.bbox.x < BBoxInput.bbox.x || BBoxResult.bbox.y < BBoxInput.bbox.y || BBoxResult.bbox.r > BBoxInput.bbox.r || BBoxResult.bbox.t > BBoxInput.bbox.t))"}}
  name Switch2
  label "\[value which]"
  xpos 864
  ypos -25
 }
 Grade {
  channels all
  whitepoint 40
  black_clamp false
  name AverageMult
  xpos 864
  ypos 27
  disable {{"output2 == 4 ? 0 : 1"}}
 }
 Merge2 {
  inputs 2
  operation max
  also_merge all
  name Merge2
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos 864
  ypos 74
  disable {{"output2 == 4 && includeOriginal == 1 && AvgMaxOriginal == 1 ? 0 : 1"}}
 }
 Multiply {
  value {{parent.intensity/steps}}
  name Multiply12
  xpos 864
  ypos 98
 }
 Blur {
  size {{postBlur} {postBlur}}
  name BlurOriginal
  xpos 864
  ypos 155
 }
 CopyBBox {
  inputs 2
  name CopyBBox3
  xpos 864
  ypos 224
 }
 Invert {
  name Invert2
  xpos 864
  ypos 283
  disable {{"parent.size < 0 ? 0 : 1"}}
 }
push $Needde000
 Switch {
  inputs 2
  which {{"parent.size == 0 ? 0 : 1"}}
  name Switch1
  label "\[value which]"
  xpos 427
  ypos 283
 }
push $Nb9555400
 Dot {
  name Dot22
  note_font_size 41
  xpos 34
  ypos 157
 }
 Multiply {
  channels {{{parent.Remove1.channels}}}
  value 0
  name Multiply11
  xpos 0
  ypos 227
  disable {{!effectOnly}}
 }
 Merge2 {
  inputs 2
  operation {{mergeNumber.mergeNumber}}
  also_merge all
  name Merge7
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos 0
  ypos 287
 }
 Dot {
  name Dot17
  label A
  note_font_size 41
  xpos 34
  ypos 599
 }
 Dot {
  name Dot7
  note_font_size 41
  xpos 34
  ypos 729
 }
set Nb8a6d800 [stack 0]
 Dot {
  name Dot12
  note_font_size 41
  xpos -260
  ypos 729
 }
 Dot {
  name Dot13
  note_font_size 41
  xpos -260
  ypos 943
 }
push $Need94400
 Input {
  inputs 0
  name Inputmask
  xpos 346
  ypos 516
  number 1
 }
 Dot {
  name Dot19
  label Mask
  note_font_size 41
  xpos 380
  ypos 582
 }
set Nb8a94800 [stack 0]
 Dot {
  name Dot20
  note_font_size 41
  xpos 270
  ypos 582
 }
push $Nb8a6d800
 Merge2 {
  inputs 2
  bbox intersection
  Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
  Bchannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
  output {rgba.red -rgba.green -rgba.blue rgba.alpha}
  name MergeIntersection
  xpos 236
  ypos 719
  disable {{"!\[exists parent.input1]"}}
 }
 Merge2 {
  inputs 2
  Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
  Bchannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
  output {rgba.red -rgba.green -rgba.blue rgba.alpha}
  name MergeUnion
  xpos 236
  ypos 757
  disable {{"!\[exists parent.input1]"}}
 }
 Dot {
  name Dot6
  label "intersection\nof (Mask and A) + B"
  note_font_size 14
  note_font_color 0xffffffff
  xpos 270
  ypos 917
 }
push $Nb8a94800
 Dot {
  name Dot10
  note_font_size 41
  xpos 380
  ypos 819
 }
push $Nb8a6d800
push $Need94800
 Merge2 {
  inputs 2+1
  operation copy
  Achannels none
  Bchannels none
  output none
  also_merge {{{parent.Remove1.channels}}}
  name MergeKeymix
  xpos 0
  ypos 809
 }
 Dot {
  name Dot14
  note_font_size 41
  xpos 34
  ypos 891
 }
set Nb8ab6400 [stack 0]
push $Need94800
 CopyBBox {
  inputs 2
  name CopyBBoxUnion
  xpos -401
  ypos 887
  disable {{parent.bbox==0?0:1}}
 }
 CopyBBox {
  inputs 2
  name CopyBBoxIntersection
  xpos -401
  ypos 913
  disable {{"parent.bbox==1 ? 0 : 1"}}
 }
 CopyBBox {
  inputs 2
  name CopyBBoxA
  xpos -401
  ypos 939
  disable {{"parent.bbox==2 ? 0 : 1"}}
 }
 CopyBBox {
  inputs 2
  name CopyBBoxB
  xpos -401
  ypos 971
  disable {{"parent.bbox==3 ? 0 : 1"}}
 }
 Crop {
  box {0 0 {parent.width} {parent.height}}
  crop false
  name CopyBBoxFormat
  xpos -401
  ypos 997
  disable {{"parent.bbox==4 ? 0 : 1"}}
  addUserKnob {20 User}
  addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
 }
set Nb8ab7800 [stack 0]
 Transform {
  scale {{parent.adjustBBoxPercent} {parent.adjustBBoxPercent}}
  center {{((input.bbox.r-input.bbox.x)/2)+input.bbox.x} {((input.bbox.t-input.bbox.y)/2)+input.bbox.y}}
  black_outside false
  shutteroffset centred
  name TransformBBoxAdjustPercent
  xpos -516
  ypos 1042
 }
push $Nb8ab7800
 AdjBBox {
  numpixels {{parent.adjustBBoxPixels} {parent.adjustBBoxPixels}}
  name AdjBBoxPixels
  xpos -401
  ypos 1045
 }
 Switch {
  inputs 2
  which {{adjustBBoxExtra}}
  name Switch3
  xpos -401
  ypos 1084
 }
 Dot {
  name Dot9
  note_font_size 41
  xpos -367
  ypos 1137
 }
push $Nb8ab6400
 CopyBBox {
  inputs 2
  name CopyBBox
  xpos 0
  ypos 1133
 }
 BlackOutside {
  name BlackOutside1
  xpos 0
  ypos 1159
  disable {{!parent.blackOutside}}
 }
 Output {
  name Output1
  xpos 0
  ypos 1299
 }
push $N6e60d000
 NoOp {
  name BBoxResult
  xpos 714
  ypos -279
  addUserKnob {20 User}
  addUserKnob {15 bbox}
  bbox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
 }
 NoOp {
  inputs 0
  name mergeNumber
  xpos 202
  ypos -1339
  addUserKnob {20 User}
  addUserKnob {3 mergeNumber}
  mergeNumber {{"output2 == 0 ? 25 : output2 == 1 ? 24 : output2 == 2 ? 22 : output2 == 3 ? 13 : output2 == 4 ? 24 : output2 == 5 ? 17 : 18"}}
 }
end_group
Merge2 {
 inputs 2
 operation mask
 name Merge7
 selected true
 xpos -3560
 ypos 11799
}
push $N6eafe800
push $Nc6386800
Dot {
 name Dot77
 tile_color 0xff0000ff
 label BG
 note_font "Verdana Bold"
 note_font_size 15
 selected true
 xpos -4076
 ypos 9738
}
set Nc6387400 [stack 0]
NoOp {
 inputs 0
 name fc_Doppelganger6
 tile_color 0x349739ff
 label "\n\[knob Name]\n\n-"
 note_font "Verdana Bold"
 note_font_size 15
 note_font_color 0x94dcfeff
 selected true
 xpos -3890
 ypos 9458
 hide_input true
 addUserKnob {20 TG}
 addUserKnob {26 ""}
 addUserKnob {26 Divider l "<font color=\"lightblue\">Name" -STARTLINE}
 addUserKnob {1 Name l "" t "Type the name of the node you want to connect to in here" +STARTLINE}
 Name CLEAN
 addUserKnob {22 Connect l "<font color=\"lightblue\">Connect" -STARTLINE T "THIS = nuke.thisNode()\nPARENT = THIS\['Name'].getValue()\nE = nuke.exists(PARENT)\n\nif E == True:\n    v = nuke.toNode(PARENT)\n    THIS.setInput(0,v)\n    firstInput = THIS.input(0) \n    colour = firstInput\['tile_color'].getValue()\n    if firstInput is not None:\n        THIS\['tile_color'].setValue(int(colour)) \n    else: \n        pass\n    \nelse:\n    pass\n    nuke.message('There is no node named that')\n    \n\nnukescripts.clear_selection_recursive() \n\n\n"}
 addUserKnob {26 ""}
 addUserKnob {22 Find l "<font color=\"lightblue\">Find Connected" t "This will show you the node Doppelganger is connected to" -STARTLINE T "THIS = nuke.thisNode()\nPARENT = THIS.knob('Name').getValue()\nE = nuke.exists(PARENT)\n\nif E == True:\n    v = nuke.toNode(PARENT)\n    nuke.zoom( 2, \[ v.xpos(), v.ypos() ])\nelse:\n    pass\n    nuke.message('Cannot find that node')\n    \n\nnukescripts.clear_selection_recursive() \n\n"}
 addUserKnob {22 ConnectAll l "<font color=\"lightblue\">Connect all Doppelgangers" t "This will connect all Doppelgangers in your script. Handy if you have pasted a large script" -STARTLINE T "for s in nuke.allNodes():\n    classTypes = \['NoOp']\n    for n in classTypes:\n        if n in s.Class():\n            try:\n                s\['Connect'].execute()\n            except:\n                pass"}
 addUserKnob {26 ""}
 addUserKnob {20 Help}
 addUserKnob {26 ""}
 addUserKnob {26 Tip l :?: T "Doppelganger acts as a bridge between your Read nodes and your script\n\nUse this instead of duplicating a camera or geo or a plate over and over\n\nJust type in the name of the node and press connect\n\nAs a tip, add a NoOp underneath your Plate and call it 'Plate'. This will then make it easier to remember\n\nAny questions contact Thomas Greenhalgh\ntomgreenhalgh125@gmail.com\n"}
 addUserKnob {26 ""}
}
Group {
 name fc_Despill2
 selected true
 xpos -3890
 ypos 9591
 addUserKnob {20 User}
 addUserKnob {18 despill_colour l "despill colour" R 0 4}
 despill_colour {0 0 1}
 addUserKnob {6 despill_colour_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 _1 l "" +STARTLINE}
 addUserKnob {18 despill_bias l "despill bias"}
 despill_bias {0.5 0.5 0.5}
 addUserKnob {6 despill_bias_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {7 balance t "The Balance control can be used to adjust the weighting of secondary channels in the despill operation.\n\nAll common despill algorithms can be achieved with values on this slider.\n\naverage = 0.5\n\nThis control behaves in the same way as the keylight screen balance"}
 balance 0.9
 addUserKnob {7 limit t "Adjust the colour range affected by despill, a limit of less than 1 will affect a greated range, whilst a limit of more than 1 will reduce the range.\n\nThis control behaves in same way as the DespillMadness fine tune." R 0.5 1.5}
 limit 0.75
 addUserKnob {7 strength t "A multiply control to adjust the mix or strength of the despill applied.\n\nThis control behaves in the same way as the keylight screen gain." R 0 2}
 strength 1
 addUserKnob {26 _2 l "" +STARTLINE}
 addUserKnob {18 restore_luminance l luminance t "When set to 1, this control is restoring the luminance liost in the despill. THis can also be thought of as a target coliur for your screen and manipulating the colour channel will allow you to get a spill colour and luminance suitable for your shot." R -1 2}
 restore_luminance {2.9 1.9 2.1}
 addUserKnob {6 restore_luminance_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 restore_luminance_panelDropped true
 addUserKnob {4 luminance_math l "" +STARTLINE M {"Rec 709" "Ccir 601" Average Maximum ""}}
 addUserKnob {26 _3 l "" +STARTLINE}
 addUserKnob {6 black_clamp l "black clamp" +STARTLINE}
 addUserKnob {26 _4 l "" +STARTLINE}
 addUserKnob {41 in l "in 1" T Shuffle2.in}
 addUserKnob {41 in_2 l "in 1" T Shuffle5.in}
 addUserKnob {41 in_1 l "in 1" T Shuffle9.in}
 addUserKnob {41 in_4 l "in 1" T Shuffle13.in}
 addUserKnob {41 in_3 l "in 1" T Shuffle17.in}
 addUserKnob {41 in_5 l "in 1" T Shuffle21.in}
}
 StickyNote {
  inputs 0
  name StickyNote1
  label "StrongestColour.which == 0 ? -parent.despill_colour.r*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.r*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.r*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.g*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.g*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.g*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.b*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.b*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.b*clamp(1/blue_value,0,1000000):\n0"
  xpos -2040
  ypos 561
 }
 StickyNote {
  inputs 0
  name StickyNote2
  label "StrongestColour.which == 0 ? -parent.despill_colour.r*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.r*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.r*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.g*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.g*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.g*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.b*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.b*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.b*clamp(1/blue_value,0,1000000):\n0"
  xpos -3662
  ypos 552
 }
 StickyNote {
  inputs 0
  name StickyNote3
  label "StrongestColour.which == 0 ? -parent.despill_colour.r*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.r*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.r*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.g*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.g*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.g*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.b*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.b*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.b*clamp(1/blue_value,0,1000000):\n0"
  xpos -5312
  ypos 553
 }
 Input {
  inputs 0
  name Input1
  xpos -208
  ypos -465
 }
 Dot {
  name Dot1
  xpos -174
  ypos -222
 }
set Nfd3f000 [stack 0]
 Dot {
  name Dot2
  xpos -1876
  ypos -219
 }
set Nfd3f400 [stack 0]
 Dot {
  name Dot18
  xpos -3498
  ypos -228
 }
set Nfd3f800 [stack 0]
 Dot {
  name Dot33
  xpos -5148
  ypos -227
 }
set Nfd3fc00 [stack 0]
 Dot {
  name Dot47
  xpos -6686
  ypos -227
 }
set Nfd5a000 [stack 0]
 Dot {
  name Dot63
  xpos -8258
  ypos -227
 }
set Nfd5a400 [stack 0]
 Dot {
  name Dot78
  xpos -9796
  ypos -227
 }
 Shuffle {
  name Shuffle21
  label "\[value in]"
  xpos -9830
  ypos -39
 }
 Dot {
  name Dot79
  xpos -9796
  ypos 106
 }
set Nfd5b000 [stack 0]
 Dot {
  name Dot80
  xpos -9576
  ypos 106
 }
set Nfd5b400 [stack 0]
 Dot {
  name Dot81
  xpos -8696
  ypos 106
 }
push $Nfd5b400
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  name bias5
  xpos -9610
  ypos 223
 }
 Dot {
  name Dot82
  xpos -9576
  ypos 349
 }
set N595a6000 [stack 0]
 Dot {
  name Dot83
  xpos -9356
  ypos 349
 }
 Expression {
  temp_name0 redweight
  temp_expr0 ((b*parent.balance)+(g*(1-parent.balance)))
  temp_name1 greenweight
  temp_expr1 ((b*parent.balance)+(r*(1-parent.balance)))
  temp_name2 blueweight
  temp_expr2 ((g*parent.balance)+(r*(1-parent.balance)))
  expr0 clamp(r-(redweight*parent.limit),0,1000000)
  expr1 clamp(r-(greenweight*parent.limit),0,1000000)
  expr2 clamp(r-(blueweight*parent.limit),0,1000000)
  name ClampedKey5
  xpos -9390
  ypos 391
 }
 Dot {
  name Dot84
  xpos -9356
  ypos 443
 }
set N595a6c00 [stack 0]
 Dot {
  name Dot85
  xpos -9024
  ypos 443
 }
set N595a7000 [stack 0]
 Shuffle {
  red blue
  green blue
  alpha blue
  name Shuffle22
  label "\[value in]"
  xpos -8950
  ypos 529
 }
push $N595a7000
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle23
  label "\[value in]"
  xpos -9060
  ypos 532
 }
push $N595a7000
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle24
  label "\[value in]"
  xpos -9170
  ypos 532
 }
 Switch {
  inputs 3
  which {{StrongestColour.which}}
  name Switch6
  xpos -9060
  ypos 610
 }
 Dot {
  name Dot86
  xpos -9026
  ypos 733
 }
push $N595a6c00
 Grade {
  add {{parent.StrongestColour.red} {parent.StrongestColour.green} {parent.StrongestColour.blue} 0}
  name KeylightOffset5
  xpos -9390
  ypos 559
  addUserKnob {20 User}
  addUserKnob {7 red_value}
  red_value {{parent.despill_colour.r-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.g*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 green_value}
  green_value {{parent.despill_colour.g-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 blue_value}
  blue_value {{parent.despill_colour.b-(((parent.despill_colour.g*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge21
  xpos -9390
  ypos 727
 }
 Dot {
  name Dot87
  xpos -9356
  ypos 802
 }
push $N595a6000
 Merge2 {
  inputs 2
  operation plus
  name Merge22
  xpos -9610
  ypos 799
 }
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  reverse true
  name Grade6
  xpos -9610
  ypos 871
 }
 Dot {
  name Dot88
  xpos -9576
  ypos 970
 }
push $Nfd5b000
 MergeExpression {
  inputs 2
  expr0 Br+(Ar-Br)*parent.strength
  expr1 Bg+(Ag-Bg)*parent.strength
  expr2 Bb+(Ab-Bb)*parent.strength
  name MergeExpression6
  xpos -9830
  ypos 967
 }
 Dot {
  name Dot89
  xpos -9796
  ypos 1138
 }
set Nb89ec400 [stack 0]
 Merge2 {
  inputs 2
  operation minus
  name Merge23
  xpos -8730
  ypos 1135
 }
 Dot {
  name Dot90
  xpos -8696
  ypos 1186
 }
set Nb89ecc00 [stack 0]
 Saturation {
  mode Maximum
  name Saturation21
  xpos -8510
  ypos 1231
 }
push $Nb89ecc00
 Saturation {
  mode Average
  name Saturation22
  xpos -8620
  ypos 1231
 }
push $Nb89ecc00
 Saturation {
  mode "Ccir 601"
  name Saturation23
  xpos -8840
  ypos 1231
 }
push $Nb89ecc00
 Saturation {
  name Saturation24
  xpos -8950
  ypos 1231
 }
 Switch {
  inputs 4
  which {{parent.luminance_math}}
  name SwitchMaths5
  xpos -8730
  ypos 1327
 }
 Multiply {
  value {{parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance}}
  name Multiply6
  xpos -8730
  ypos 1393
 }
 Dot {
  name Dot91
  xpos -8696
  ypos 1474
 }
push $Nb89ec400
 Merge2 {
  inputs 2
  operation plus
  name Merge24
  xpos -9830
  ypos 1471
 }
 Clamp {
  name Clamp6
  xpos -9830
  ypos 1633
  disable {{!parent.black_clamp}}
 }
 Dot {
  name Dot92
  xpos -9796
  ypos 2634
 }
push $Nfd5a400
 Shuffle {
  name Shuffle17
  label "\[value in]"
  xpos -8292
  ypos -39
 }
 Dot {
  name Dot64
  xpos -8258
  ypos 106
 }
set Nc654fc00 [stack 0]
 Dot {
  name Dot65
  xpos -8038
  ypos 106
 }
set Nc657e000 [stack 0]
 Dot {
  name Dot66
  xpos -7158
  ypos 106
 }
push $Nc657e000
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  name bias4
  xpos -8072
  ypos 223
 }
 Dot {
  name Dot67
  xpos -8038
  ypos 349
 }
set Nc657ec00 [stack 0]
 Dot {
  name Dot68
  xpos -7818
  ypos 349
 }
 Expression {
  temp_name0 redweight
  temp_expr0 ((b*parent.balance)+(g*(1-parent.balance)))
  temp_name1 greenweight
  temp_expr1 ((b*parent.balance)+(r*(1-parent.balance)))
  temp_name2 blueweight
  temp_expr2 ((g*parent.balance)+(r*(1-parent.balance)))
  expr0 clamp(r-(redweight*parent.limit),0,1000000)
  expr1 clamp(r-(greenweight*parent.limit),0,1000000)
  expr2 clamp(r-(blueweight*parent.limit),0,1000000)
  name ClampedKey4
  xpos -7852
  ypos 391
 }
 Dot {
  name Dot69
  xpos -7818
  ypos 443
 }
set Nc657f800 [stack 0]
 Dot {
  name Dot70
  xpos -7486
  ypos 443
 }
set Nc657fc00 [stack 0]
 Shuffle {
  red blue
  green blue
  alpha blue
  name Shuffle18
  label "\[value in]"
  xpos -7412
  ypos 529
 }
push $Nc657fc00
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle19
  label "\[value in]"
  xpos -7522
  ypos 532
 }
push $Nc657fc00
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle20
  label "\[value in]"
  xpos -7632
  ypos 532
 }
 Switch {
  inputs 3
  which {{StrongestColour.which}}
  name Switch5
  xpos -7522
  ypos 610
 }
 Dot {
  name Dot71
  xpos -7488
  ypos 733
 }
push $Nc657f800
 Grade {
  add {{parent.StrongestColour.red} {parent.StrongestColour.green} {parent.StrongestColour.blue} 0}
  name KeylightOffset4
  xpos -7852
  ypos 559
  addUserKnob {20 User}
  addUserKnob {7 red_value}
  red_value {{parent.despill_colour.r-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.g*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 green_value}
  green_value {{parent.despill_colour.g-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 blue_value}
  blue_value {{parent.despill_colour.b-(((parent.despill_colour.g*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge17
  xpos -7852
  ypos 727
 }
 Dot {
  name Dot72
  xpos -7818
  ypos 802
 }
push $Nc657ec00
 Merge2 {
  inputs 2
  operation plus
  name Merge18
  xpos -8072
  ypos 799
 }
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  reverse true
  name Grade5
  xpos -8072
  ypos 871
 }
 Dot {
  name Dot73
  xpos -8038
  ypos 970
 }
push $Nc654fc00
 MergeExpression {
  inputs 2
  expr0 Br+(Ar-Br)*parent.strength
  expr1 Bg+(Ag-Bg)*parent.strength
  expr2 Bb+(Ab-Bb)*parent.strength
  name MergeExpression5
  xpos -8292
  ypos 967
 }
 Dot {
  name Dot74
  xpos -8258
  ypos 1138
 }
set Ne8a67000 [stack 0]
 Merge2 {
  inputs 2
  operation minus
  name Merge19
  xpos -7192
  ypos 1135
 }
 Dot {
  name Dot75
  xpos -7158
  ypos 1186
 }
set Ne8a67800 [stack 0]
 Saturation {
  mode Maximum
  name Saturation17
  xpos -6972
  ypos 1231
 }
push $Ne8a67800
 Saturation {
  mode Average
  name Saturation18
  xpos -7082
  ypos 1231
 }
push $Ne8a67800
 Saturation {
  mode "Ccir 601"
  name Saturation19
  xpos -7302
  ypos 1231
 }
push $Ne8a67800
 Saturation {
  name Saturation20
  xpos -7412
  ypos 1231
 }
 Switch {
  inputs 4
  which {{parent.luminance_math}}
  name SwitchMaths4
  xpos -7192
  ypos 1327
 }
 Multiply {
  value {{parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance}}
  name Multiply5
  xpos -7192
  ypos 1393
 }
 Dot {
  name Dot76
  xpos -7158
  ypos 1474
 }
push $Ne8a67000
 Merge2 {
  inputs 2
  operation plus
  name Merge20
  xpos -8292
  ypos 1471
 }
 Clamp {
  name Clamp5
  xpos -8292
  ypos 1633
  disable {{!parent.black_clamp}}
 }
 Dot {
  name Dot77
  xpos -8256
  ypos 2418
 }
push $Nfd5a000
 Shuffle {
  in screen_colour
  name Shuffle13
  label "\[value in]"
  xpos -6720
  ypos -39
 }
 Dot {
  name Dot49
  xpos -6686
  ypos 106
 }
set Nb90ec800 [stack 0]
 Dot {
  name Dot50
  xpos -6466
  ypos 106
 }
set Nb90ecc00 [stack 0]
 Dot {
  name Dot51
  xpos -5586
  ypos 106
 }
push $Nb90ecc00
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  name bias3
  xpos -6500
  ypos 223
 }
 Dot {
  name Dot52
  xpos -6466
  ypos 349
 }
set Nb90ed800 [stack 0]
 Dot {
  name Dot53
  xpos -6246
  ypos 349
 }
 Expression {
  temp_name0 redweight
  temp_expr0 ((b*parent.balance)+(g*(1-parent.balance)))
  temp_name1 greenweight
  temp_expr1 ((b*parent.balance)+(r*(1-parent.balance)))
  temp_name2 blueweight
  temp_expr2 ((g*parent.balance)+(r*(1-parent.balance)))
  expr0 clamp(r-(redweight*parent.limit),0,1000000)
  expr1 clamp(r-(greenweight*parent.limit),0,1000000)
  expr2 clamp(r-(blueweight*parent.limit),0,1000000)
  name ClampedKey3
  xpos -6280
  ypos 391
 }
 Dot {
  name Dot54
  xpos -6246
  ypos 443
 }
set Nb9112400 [stack 0]
 Dot {
  name Dot55
  xpos -5914
  ypos 443
 }
set Nb9112800 [stack 0]
 Shuffle {
  red blue
  green blue
  alpha blue
  name Shuffle14
  label "\[value in]"
  xpos -5840
  ypos 529
 }
push $Nb9112800
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle15
  label "\[value in]"
  xpos -5950
  ypos 532
 }
push $Nb9112800
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle16
  label "\[value in]"
  xpos -6060
  ypos 532
 }
 Switch {
  inputs 3
  which {{StrongestColour.which}}
  name Switch4
  xpos -5950
  ypos 610
 }
 Dot {
  name Dot56
  xpos -5916
  ypos 733
 }
push $Nb9112400
 Grade {
  add {{parent.StrongestColour.red} {parent.StrongestColour.green} {parent.StrongestColour.blue} 0}
  name KeylightOffset3
  xpos -6280
  ypos 559
  addUserKnob {20 User}
  addUserKnob {7 red_value}
  red_value {{parent.despill_colour.r-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.g*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 green_value}
  green_value {{parent.despill_colour.g-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 blue_value}
  blue_value {{parent.despill_colour.b-(((parent.despill_colour.g*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge13
  xpos -6280
  ypos 727
 }
 Dot {
  name Dot57
  xpos -6246
  ypos 802
 }
push $Nb90ed800
 Merge2 {
  inputs 2
  operation plus
  name Merge14
  xpos -6500
  ypos 799
 }
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  reverse true
  name Grade4
  xpos -6500
  ypos 871
 }
 Dot {
  name Dot58
  xpos -6466
  ypos 970
 }
push $Nb90ec800
 MergeExpression {
  inputs 2
  expr0 Br+(Ar-Br)*parent.strength
  expr1 Bg+(Ag-Bg)*parent.strength
  expr2 Bb+(Ab-Bb)*parent.strength
  name MergeExpression4
  xpos -6720
  ypos 967
 }
 Dot {
  name Dot59
  xpos -6686
  ypos 1138
 }
set N6e4c1c00 [stack 0]
 Merge2 {
  inputs 2
  operation minus
  name Merge15
  xpos -5620
  ypos 1135
 }
 Dot {
  name Dot60
  xpos -5586
  ypos 1186
 }
set N6e4fc400 [stack 0]
 Saturation {
  mode Maximum
  name Saturation13
  xpos -5400
  ypos 1231
 }
push $N6e4fc400
 Saturation {
  mode Average
  name Saturation14
  xpos -5510
  ypos 1231
 }
push $N6e4fc400
 Saturation {
  mode "Ccir 601"
  name Saturation15
  xpos -5730
  ypos 1231
 }
push $N6e4fc400
 Saturation {
  name Saturation16
  xpos -5840
  ypos 1231
 }
 Switch {
  inputs 4
  which {{parent.luminance_math}}
  name SwitchMaths3
  xpos -5620
  ypos 1327
 }
 Multiply {
  value {{parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance}}
  name Multiply4
  xpos -5620
  ypos 1393
 }
 Dot {
  name Dot61
  xpos -5586
  ypos 1474
 }
push $N6e4c1c00
 Merge2 {
  inputs 2
  operation plus
  name Merge16
  xpos -6720
  ypos 1471
 }
 Clamp {
  name Clamp4
  xpos -6720
  ypos 1633
  disable {{!parent.black_clamp}}
 }
 Dot {
  name Dot62
  xpos -6686
  ypos 2218
 }
push $Nfd3fc00
 Shuffle {
  in fg_denoise_plate
  name Shuffle9
  label "\[value in]"
  xpos -5182
  ypos -39
 }
 Dot {
  name Dot34
  xpos -5148
  ypos 106
 }
set Nbccaf400 [stack 0]
 Dot {
  name Dot35
  xpos -4928
  ypos 106
 }
set Nbccaf800 [stack 0]
 Dot {
  name Dot36
  xpos -4048
  ypos 106
 }
push $Nbccaf800
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  name bias2
  xpos -4962
  ypos 223
 }
 Dot {
  name Dot37
  xpos -4928
  ypos 349
 }
set Nbccda400 [stack 0]
 Dot {
  name Dot38
  xpos -4708
  ypos 349
 }
 Expression {
  temp_name0 redweight
  temp_expr0 ((b*parent.balance)+(g*(1-parent.balance)))
  temp_name1 greenweight
  temp_expr1 ((b*parent.balance)+(r*(1-parent.balance)))
  temp_name2 blueweight
  temp_expr2 ((g*parent.balance)+(r*(1-parent.balance)))
  expr0 clamp(r-(redweight*parent.limit),0,1000000)
  expr1 clamp(r-(greenweight*parent.limit),0,1000000)
  expr2 clamp(r-(blueweight*parent.limit),0,1000000)
  name ClampedKey2
  xpos -4742
  ypos 391
 }
 Dot {
  name Dot39
  xpos -4708
  ypos 443
 }
set Nbccdb000 [stack 0]
 Dot {
  name Dot40
  xpos -4376
  ypos 443
 }
set Nbccdb400 [stack 0]
 Shuffle {
  red blue
  green blue
  alpha blue
  name Shuffle10
  label "\[value in]"
  xpos -4302
  ypos 529
 }
push $Nbccdb400
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle11
  label "\[value in]"
  xpos -4412
  ypos 532
 }
push $Nbccdb400
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle12
  label "\[value in]"
  xpos -4522
  ypos 532
 }
 Switch {
  inputs 3
  which {{StrongestColour.which}}
  name Switch3
  xpos -4412
  ypos 610
 }
 Dot {
  name Dot41
  xpos -4378
  ypos 733
 }
push $Nbccdb000
 Grade {
  add {{parent.StrongestColour.red} {parent.StrongestColour.green} {parent.StrongestColour.blue} 0}
  name KeylightOffset2
  xpos -4742
  ypos 559
  addUserKnob {20 User}
  addUserKnob {7 red_value}
  red_value {{parent.despill_colour.r-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.g*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 green_value}
  green_value {{parent.despill_colour.g-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 blue_value}
  blue_value {{parent.despill_colour.b-(((parent.despill_colour.g*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge9
  xpos -4742
  ypos 727
 }
 Dot {
  name Dot42
  xpos -4708
  ypos 802
 }
push $Nbccda400
 Merge2 {
  inputs 2
  operation plus
  name Merge10
  xpos -4962
  ypos 799
 }
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  reverse true
  name Grade3
  xpos -4962
  ypos 871
 }
 Dot {
  name Dot43
  xpos -4928
  ypos 970
 }
push $Nbccaf400
 MergeExpression {
  inputs 2
  expr0 Br+(Ar-Br)*parent.strength
  expr1 Bg+(Ag-Bg)*parent.strength
  expr2 Bb+(Ab-Bb)*parent.strength
  name MergeExpression3
  xpos -5182
  ypos 967
 }
 Dot {
  name Dot44
  xpos -5148
  ypos 1138
 }
set Nb6ef6800 [stack 0]
 Merge2 {
  inputs 2
  operation minus
  name Merge11
  xpos -4082
  ypos 1135
 }
 Dot {
  name Dot45
  xpos -4048
  ypos 1186
 }
set Nb6ef7000 [stack 0]
 Saturation {
  mode Maximum
  name Saturation9
  xpos -3862
  ypos 1231
 }
push $Nb6ef7000
 Saturation {
  mode Average
  name Saturation10
  xpos -3972
  ypos 1231
 }
push $Nb6ef7000
 Saturation {
  mode "Ccir 601"
  name Saturation11
  xpos -4192
  ypos 1231
 }
push $Nb6ef7000
 Saturation {
  name Saturation12
  xpos -4302
  ypos 1231
 }
 Switch {
  inputs 4
  which {{parent.luminance_math}}
  name SwitchMaths2
  xpos -4082
  ypos 1327
 }
 Multiply {
  value {{parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance}}
  name Multiply3
  xpos -4082
  ypos 1393
 }
 Dot {
  name Dot46
  xpos -4048
  ypos 1474
 }
push $Nb6ef6800
 Merge2 {
  inputs 2
  operation plus
  name Merge12
  xpos -5182
  ypos 1471
 }
 Clamp {
  name Clamp3
  xpos -5182
  ypos 1633
  disable {{!parent.black_clamp}}
 }
 Dot {
  name Dot48
  xpos -5148
  ypos 2026
 }
push $Nfd3f800
 Shuffle {
  in fg_plate
  name Shuffle5
  label "\[value in]"
  xpos -3532
  ypos -41
 }
 Dot {
  name Dot19
  xpos -3498
  ypos 105
 }
set Nb677a000 [stack 0]
 Dot {
  name Dot20
  xpos -3278
  ypos 105
 }
set Nb677a400 [stack 0]
 Dot {
  name Dot21
  xpos -2398
  ypos 105
 }
push $Nb677a400
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  name bias1
  xpos -3312
  ypos 222
 }
 Dot {
  name Dot22
  xpos -3278
  ypos 348
 }
set Nb677b000 [stack 0]
 Dot {
  name Dot23
  xpos -3058
  ypos 348
 }
 Expression {
  temp_name0 redweight
  temp_expr0 ((b*parent.balance)+(g*(1-parent.balance)))
  temp_name1 greenweight
  temp_expr1 ((b*parent.balance)+(r*(1-parent.balance)))
  temp_name2 blueweight
  temp_expr2 ((g*parent.balance)+(r*(1-parent.balance)))
  expr0 clamp(r-(redweight*parent.limit),0,1000000)
  expr1 clamp(r-(greenweight*parent.limit),0,1000000)
  expr2 clamp(r-(blueweight*parent.limit),0,1000000)
  name ClampedKey1
  xpos -3092
  ypos 390
 }
 Dot {
  name Dot24
  xpos -3058
  ypos 442
 }
set Nb677bc00 [stack 0]
 Dot {
  name Dot25
  xpos -2726
  ypos 442
 }
set Nb679e000 [stack 0]
 Shuffle {
  red blue
  green blue
  alpha blue
  name Shuffle6
  label "\[value in]"
  xpos -2652
  ypos 528
 }
push $Nb679e000
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle7
  label "\[value in]"
  xpos -2762
  ypos 531
 }
push $Nb679e000
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle8
  label "\[value in]"
  xpos -2872
  ypos 531
 }
 Switch {
  inputs 3
  which {{StrongestColour.which}}
  name Switch2
  xpos -2762
  ypos 609
 }
 Dot {
  name Dot26
  xpos -2728
  ypos 732
 }
push $Nb677bc00
 Grade {
  add {{parent.StrongestColour.red} {parent.StrongestColour.green} {parent.StrongestColour.blue} 0}
  name KeylightOffset1
  xpos -3092
  ypos 558
  addUserKnob {20 User}
  addUserKnob {7 red_value}
  red_value {{parent.despill_colour.r-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.g*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 green_value}
  green_value {{parent.despill_colour.g-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 blue_value}
  blue_value {{parent.despill_colour.b-(((parent.despill_colour.g*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge5
  xpos -3092
  ypos 726
 }
 Dot {
  name Dot27
  xpos -3058
  ypos 801
 }
push $Nb677b000
 Merge2 {
  inputs 2
  operation plus
  name Merge6
  xpos -3312
  ypos 798
 }
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  reverse true
  name Grade2
  xpos -3312
  ypos 870
 }
 Dot {
  name Dot28
  xpos -3278
  ypos 969
 }
push $Nb677a000
 MergeExpression {
  inputs 2
  expr0 Br+(Ar-Br)*parent.strength
  expr1 Bg+(Ag-Bg)*parent.strength
  expr2 Bb+(Ab-Bb)*parent.strength
  name MergeExpression2
  xpos -3532
  ypos 966
 }
 Dot {
  name Dot29
  xpos -3498
  ypos 1137
 }
set Nb90a1400 [stack 0]
 Merge2 {
  inputs 2
  operation minus
  name Merge7
  xpos -2432
  ypos 1134
 }
 Dot {
  name Dot30
  xpos -2398
  ypos 1185
 }
set Nb90a1c00 [stack 0]
 Saturation {
  mode Maximum
  name Saturation5
  xpos -2212
  ypos 1230
 }
push $Nb90a1c00
 Saturation {
  mode Average
  name Saturation6
  xpos -2322
  ypos 1230
 }
push $Nb90a1c00
 Saturation {
  mode "Ccir 601"
  name Saturation7
  xpos -2542
  ypos 1230
 }
push $Nb90a1c00
 Saturation {
  name Saturation8
  xpos -2652
  ypos 1230
 }
 Switch {
  inputs 4
  which {{parent.luminance_math}}
  name SwitchMaths1
  xpos -2432
  ypos 1326
 }
 Multiply {
  value {{parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance}}
  name Multiply2
  xpos -2432
  ypos 1392
 }
 Dot {
  name Dot31
  xpos -2398
  ypos 1473
 }
push $Nb90a1400
 Merge2 {
  inputs 2
  operation plus
  name Merge8
  xpos -3532
  ypos 1470
 }
 Clamp {
  name Clamp2
  xpos -3532
  ypos 1632
  disable {{!parent.black_clamp}}
 }
 Dot {
  name Dot32
  xpos -3498
  ypos 1906
 }
push $Nfd3f400
 Shuffle {
  name Shuffle2
  label "\[value in]"
  xpos -1910
  ypos -33
 }
 Dot {
  name Dot3
  xpos -1876
  ypos 114
 }
set Nb4f94c00 [stack 0]
 Dot {
  name Dot4
  xpos -1656
  ypos 114
 }
set Nb4f95000 [stack 0]
 Dot {
  name Dot13
  xpos -776
  ypos 114
 }
push $Nb4f95000
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  name bias
  xpos -1690
  ypos 231
 }
 Dot {
  name Dot5
  xpos -1656
  ypos 357
 }
set Nb4f95c00 [stack 0]
 Dot {
  name Dot6
  xpos -1436
  ypos 357
 }
 Expression {
  temp_name0 redweight
  temp_expr0 ((b*parent.balance)+(g*(1-parent.balance)))
  temp_name1 greenweight
  temp_expr1 ((b*parent.balance)+(r*(1-parent.balance)))
  temp_name2 blueweight
  temp_expr2 ((g*parent.balance)+(r*(1-parent.balance)))
  expr0 clamp(r-(redweight*parent.limit),0,1000000)
  expr1 clamp(r-(greenweight*parent.limit),0,1000000)
  expr2 clamp(r-(blueweight*parent.limit),0,1000000)
  name ClampedKey
  xpos -1470
  ypos 399
 }
 Dot {
  name Dot7
  xpos -1436
  ypos 451
 }
set Nc6630800 [stack 0]
 Dot {
  name Dot9
  xpos -1104
  ypos 451
 }
set Nc6630c00 [stack 0]
 Shuffle {
  red blue
  green blue
  alpha blue
  name Shuffle4
  label "\[value in]"
  xpos -1030
  ypos 537
 }
push $Nc6630c00
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle3
  label "\[value in]"
  xpos -1140
  ypos 540
 }
push $Nc6630c00
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle1
  label "\[value in]"
  xpos -1250
  ypos 540
 }
 Switch {
  inputs 3
  which {{StrongestColour.which}}
  name Switch1
  xpos -1140
  ypos 618
 }
 Dot {
  name Dot8
  xpos -1106
  ypos 741
 }
push $Nc6630800
 Grade {
  add {{parent.StrongestColour.red} {parent.StrongestColour.green} {parent.StrongestColour.blue} 0}
  name KeylightOffset
  xpos -1470
  ypos 567
  addUserKnob {20 User}
  addUserKnob {7 red_value}
  red_value {{parent.despill_colour.r-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.g*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 green_value}
  green_value {{parent.despill_colour.g-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 blue_value}
  blue_value {{parent.despill_colour.b-(((parent.despill_colour.g*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge1
  xpos -1470
  ypos 735
 }
 Dot {
  name Dot10
  xpos -1436
  ypos 810
 }
push $Nb4f95c00
 Merge2 {
  inputs 2
  operation plus
  name Merge2
  xpos -1690
  ypos 807
 }
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  reverse true
  name Grade1
  xpos -1690
  ypos 879
 }
 Dot {
  name Dot11
  xpos -1656
  ypos 978
 }
push $Nb4f94c00
 MergeExpression {
  inputs 2
  expr0 Br+(Ar-Br)*parent.strength
  expr1 Bg+(Ag-Bg)*parent.strength
  expr2 Bb+(Ab-Bb)*parent.strength
  name MergeExpression1
  xpos -1910
  ypos 975
 }
 Dot {
  name Dot12
  xpos -1876
  ypos 1146
 }
set Nb3d0c000 [stack 0]
 Merge2 {
  inputs 2
  operation minus
  name Merge3
  xpos -810
  ypos 1143
 }
 Dot {
  name Dot14
  xpos -776
  ypos 1194
 }
set Nb3d0c800 [stack 0]
 Saturation {
  mode Maximum
  name Saturation4
  xpos -590
  ypos 1239
 }
push $Nb3d0c800
 Saturation {
  mode Average
  name Saturation3
  xpos -700
  ypos 1239
 }
push $Nb3d0c800
 Saturation {
  mode "Ccir 601"
  name Saturation2
  xpos -920
  ypos 1239
 }
push $Nb3d0c800
 Saturation {
  name Saturation1
  xpos -1030
  ypos 1239
 }
 Switch {
  inputs 4
  which {{parent.luminance_math}}
  name SwitchMaths
  xpos -810
  ypos 1335
 }
 Multiply {
  value {{parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance}}
  name Multiply1
  xpos -810
  ypos 1401
 }
 Dot {
  name Dot15
  xpos -776
  ypos 1482
 }
push $Nb3d0c000
 Merge2 {
  inputs 2
  operation plus
  name Merge4
  xpos -1910
  ypos 1479
 }
 Clamp {
  name Clamp1
  xpos -1910
  ypos 1641
  disable {{!parent.black_clamp}}
 }
 Dot {
  name Dot16
  xpos -1876
  ypos 1746
 }
push $Nfd3f000
 NoOp {
  name StrongestColour
  xpos -208
  ypos -57
  addUserKnob {20 User}
  addUserKnob {7 red}
  red {{parent.despill_colour.r}}
  addUserKnob {7 green}
  green {{parent.despill_colour.g}}
  addUserKnob {7 blue}
  blue {{parent.despill_colour.b}}
  addUserKnob {3 which}
  which {{"\[python -execlocal node\\ =\\ nuke.thisNode()\\noffsetred\\ =\\ node\\\['red'\\].value()\\noffsetgreen\\ =\\ node\\\['green'\\].value()\\noffsetblue\\ =\\ node\\\['blue'\\].value()\\n\\nif\\ offsetgreen\\ >=\\ offsetblue\\ and\\ offsetgreen\\ >=\\ offsetred:\\n\\ \\ \\ ret\\ =\\ 1\\nelif\\ offsetblue\\ >=\\ offsetred:\\n\\ \\ \\ ret\\ =\\ 2\\nelse:\\n\\ \\ \\ ret\\ =\\ 0]"}}
 }
 Dot {
  name Dot17
  xpos -174
  ypos 450
 }
 ShuffleCopy {
  inputs 2
  in2 {{{Shuffle2.in}}}
  out {{{Shuffle2.in}}}
  name ShuffleCopy1
  label "\[value in]"
  xpos -208
  ypos 1737
  disable {{!clamp(out)}}
 }
 ShuffleCopy {
  inputs 2
  in2 {{{Shuffle5.in}}}
  out {{{Shuffle5.in}}}
  name ShuffleCopy2
  label "\[value in]"
  xpos -208
  ypos 1905
  disable {{!clamp(out)}}
 }
 ShuffleCopy {
  inputs 2
  in2 {{{Shuffle9.in}}}
  out {{{Shuffle9.in}}}
  name ShuffleCopy3
  label "\[value in]"
  xpos -208
  ypos 2025
  disable {{!clamp(out)}}
 }
 ShuffleCopy {
  inputs 2
  in2 {{{Shuffle13.in}}}
  out {{{Shuffle13.in}}}
  name ShuffleCopy4
  label "\[value in]"
  xpos -208
  ypos 2217
  disable {{!clamp(out)}}
 }
 ShuffleCopy {
  inputs 2
  in2 {{{Shuffle17.in}}}
  out {{{Shuffle17.in}}}
  name ShuffleCopy5
  label "\[value in]"
  xpos -208
  ypos 2409
  disable {{!clamp(out)}}
 }
 ShuffleCopy {
  inputs 2
  in2 {{{Shuffle21.in}}}
  out {{{Shuffle21.in}}}
  name ShuffleCopy6
  label "\[value in]"
  xpos -208
  ypos 2601
  disable {{!clamp(out)}}
 }
 Output {
  name Output1
  xpos -208
  ypos 3495
 }
 StickyNote {
  inputs 0
  name StickyNote4
  label "StrongestColour.which == 0 ? -parent.despill_colour.r*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.r*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.r*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.g*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.g*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.g*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.b*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.b*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.b*clamp(1/blue_value,0,1000000):\n0"
  xpos -6850
  ypos 553
 }
 StickyNote {
  inputs 0
  name StickyNote5
  label "StrongestColour.which == 0 ? -parent.despill_colour.r*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.r*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.r*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.g*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.g*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.g*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.b*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.b*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.b*clamp(1/blue_value,0,1000000):\n0"
  xpos -8422
  ypos 553
 }
 StickyNote {
  inputs 0
  name StickyNote6
  label "StrongestColour.which == 0 ? -parent.despill_colour.r*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.r*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.r*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.g*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.g*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.g*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.b*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.b*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.b*clamp(1/blue_value,0,1000000):\n0"
  xpos -9960
  ypos 553
 }
end_group
Dot {
 name Dot78
 tile_color 0xff0000ff
 label "DESPILLED SCREEN"
 note_font "Verdana Bold"
 note_font_size 15
 selected true
 xpos -3856
 ypos 9786
}
set Nc6387800 [stack 0]
push $Nbaa77c00
NoOp {
 name fc_Doppelganger5
 tile_color 0x44b800ff
 label "\n\[knob Name]\n\n-"
 note_font "Verdana Bold"
 note_font_size 15
 note_font_color 0x94dcfeff
 selected true
 xpos -3744
 ypos 9458
 hide_input true
 addUserKnob {20 TG}
 addUserKnob {26 ""}
 addUserKnob {26 Divider l "<font color=\"lightblue\">Name" -STARTLINE}
 addUserKnob {1 Name l "" t "Type the name of the node you want to connect to in here" +STARTLINE}
 Name SCREENCLEAN
 addUserKnob {22 Connect l "<font color=\"lightblue\">Connect" -STARTLINE T "THIS = nuke.thisNode()\nPARENT = THIS\['Name'].getValue()\nE = nuke.exists(PARENT)\n\nif E == True:\n    v = nuke.toNode(PARENT)\n    THIS.setInput(0,v)\n    firstInput = THIS.input(0) \n    colour = firstInput\['tile_color'].getValue()\n    if firstInput is not None:\n        THIS\['tile_color'].setValue(int(colour)) \n    else: \n        pass\n    \nelse:\n    pass\n    nuke.message('There is no node named that')\n    \n\nnukescripts.clear_selection_recursive() \n\n\n"}
 addUserKnob {26 ""}
 addUserKnob {22 Find l "<font color=\"lightblue\">Find Connected" t "This will show you the node Doppelganger is connected to" -STARTLINE T "THIS = nuke.thisNode()\nPARENT = THIS.knob('Name').getValue()\nE = nuke.exists(PARENT)\n\nif E == True:\n    v = nuke.toNode(PARENT)\n    nuke.zoom( 2, \[ v.xpos(), v.ypos() ])\nelse:\n    pass\n    nuke.message('Cannot find that node')\n    \n\nnukescripts.clear_selection_recursive() \n\n"}
 addUserKnob {22 ConnectAll l "<font color=\"lightblue\">Connect all Doppelgangers" t "This will connect all Doppelgangers in your script. Handy if you have pasted a large script" -STARTLINE T "for s in nuke.allNodes():\n    classTypes = \['NoOp']\n    for n in classTypes:\n        if n in s.Class():\n            try:\n                s\['Connect'].execute()\n            except:\n                pass"}
 addUserKnob {26 ""}
 addUserKnob {20 Help}
 addUserKnob {26 ""}
 addUserKnob {26 Tip l :?: T "Doppelganger acts as a bridge between your Read nodes and your script\n\nUse this instead of duplicating a camera or geo or a plate over and over\n\nJust type in the name of the node and press connect\n\nAs a tip, add a NoOp underneath your Plate and call it 'Plate'. This will then make it easier to remember\n\nAny questions contact Thomas Greenhalgh\ntomgreenhalgh125@gmail.com\n"}
 addUserKnob {26 ""}
}
Group {
 name fc_Despill1
 selected true
 xpos -3744
 ypos 9591
 addUserKnob {20 User}
 addUserKnob {18 despill_colour l "despill colour" R 0 4}
 despill_colour {0 0 1}
 addUserKnob {6 despill_colour_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 _1 l "" +STARTLINE}
 addUserKnob {18 despill_bias l "despill bias"}
 despill_bias {0.5 0.5 0.5}
 addUserKnob {6 despill_bias_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {7 balance t "The Balance control can be used to adjust the weighting of secondary channels in the despill operation.\n\nAll common despill algorithms can be achieved with values on this slider.\n\naverage = 0.5\n\nThis control behaves in the same way as the keylight screen balance"}
 balance 0.9
 addUserKnob {7 limit t "Adjust the colour range affected by despill, a limit of less than 1 will affect a greated range, whilst a limit of more than 1 will reduce the range.\n\nThis control behaves in same way as the DespillMadness fine tune." R 0.5 1.5}
 limit 0.75
 addUserKnob {7 strength t "A multiply control to adjust the mix or strength of the despill applied.\n\nThis control behaves in the same way as the keylight screen gain." R 0 2}
 strength 1
 addUserKnob {26 _2 l "" +STARTLINE}
 addUserKnob {18 restore_luminance l luminance t "When set to 1, this control is restoring the luminance liost in the despill. THis can also be thought of as a target coliur for your screen and manipulating the colour channel will allow you to get a spill colour and luminance suitable for your shot." R -1 2}
 restore_luminance {2.9 1.9 2.1}
 addUserKnob {6 restore_luminance_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 restore_luminance_panelDropped true
 addUserKnob {4 luminance_math l "" +STARTLINE M {"Rec 709" "Ccir 601" Average Maximum ""}}
 addUserKnob {26 _3 l "" +STARTLINE}
 addUserKnob {6 black_clamp l "black clamp" +STARTLINE}
 addUserKnob {26 _4 l "" +STARTLINE}
 addUserKnob {41 in l "in 1" T Shuffle2.in}
 addUserKnob {41 in_2 l "in 1" T Shuffle5.in}
 addUserKnob {41 in_1 l "in 1" T Shuffle9.in}
 addUserKnob {41 in_4 l "in 1" T Shuffle13.in}
 addUserKnob {41 in_3 l "in 1" T Shuffle17.in}
 addUserKnob {41 in_5 l "in 1" T Shuffle21.in}
}
 StickyNote {
  inputs 0
  name StickyNote1
  label "StrongestColour.which == 0 ? -parent.despill_colour.r*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.r*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.r*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.g*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.g*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.g*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.b*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.b*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.b*clamp(1/blue_value,0,1000000):\n0"
  xpos -2040
  ypos 561
 }
 StickyNote {
  inputs 0
  name StickyNote2
  label "StrongestColour.which == 0 ? -parent.despill_colour.r*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.r*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.r*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.g*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.g*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.g*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.b*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.b*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.b*clamp(1/blue_value,0,1000000):\n0"
  xpos -3662
  ypos 552
 }
 StickyNote {
  inputs 0
  name StickyNote3
  label "StrongestColour.which == 0 ? -parent.despill_colour.r*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.r*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.r*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.g*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.g*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.g*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.b*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.b*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.b*clamp(1/blue_value,0,1000000):\n0"
  xpos -5312
  ypos 553
 }
 Input {
  inputs 0
  name Input1
  xpos -208
  ypos -465
 }
 Dot {
  name Dot1
  xpos -174
  ypos -222
 }
set Nbb2f5400 [stack 0]
 Dot {
  name Dot2
  xpos -1876
  ypos -219
 }
set Nbb2f5800 [stack 0]
 Dot {
  name Dot18
  xpos -3498
  ypos -228
 }
set Nbb2f5c00 [stack 0]
 Dot {
  name Dot33
  xpos -5148
  ypos -227
 }
set Nbb314000 [stack 0]
 Dot {
  name Dot47
  xpos -6686
  ypos -227
 }
set Nbb314400 [stack 0]
 Dot {
  name Dot63
  xpos -8258
  ypos -227
 }
set Nbb314800 [stack 0]
 Dot {
  name Dot78
  xpos -9796
  ypos -227
 }
 Shuffle {
  name Shuffle21
  label "\[value in]"
  xpos -9830
  ypos -39
 }
 Dot {
  name Dot79
  xpos -9796
  ypos 106
 }
set Nbb315400 [stack 0]
 Dot {
  name Dot80
  xpos -9576
  ypos 106
 }
set Nbb315800 [stack 0]
 Dot {
  name Dot81
  xpos -8696
  ypos 106
 }
push $Nbb315800
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  name bias5
  xpos -9610
  ypos 223
 }
 Dot {
  name Dot82
  xpos -9576
  ypos 349
 }
set Ne9c74400 [stack 0]
 Dot {
  name Dot83
  xpos -9356
  ypos 349
 }
 Expression {
  temp_name0 redweight
  temp_expr0 ((b*parent.balance)+(g*(1-parent.balance)))
  temp_name1 greenweight
  temp_expr1 ((b*parent.balance)+(r*(1-parent.balance)))
  temp_name2 blueweight
  temp_expr2 ((g*parent.balance)+(r*(1-parent.balance)))
  expr0 clamp(r-(redweight*parent.limit),0,1000000)
  expr1 clamp(r-(greenweight*parent.limit),0,1000000)
  expr2 clamp(r-(blueweight*parent.limit),0,1000000)
  name ClampedKey5
  xpos -9390
  ypos 391
 }
 Dot {
  name Dot84
  xpos -9356
  ypos 443
 }
set Ne9c75000 [stack 0]
 Dot {
  name Dot85
  xpos -9024
  ypos 443
 }
set Ne9c75400 [stack 0]
 Shuffle {
  red blue
  green blue
  alpha blue
  name Shuffle22
  label "\[value in]"
  xpos -8950
  ypos 529
 }
push $Ne9c75400
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle23
  label "\[value in]"
  xpos -9060
  ypos 532
 }
push $Ne9c75400
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle24
  label "\[value in]"
  xpos -9170
  ypos 532
 }
 Switch {
  inputs 3
  which {{StrongestColour.which}}
  name Switch6
  xpos -9060
  ypos 610
 }
 Dot {
  name Dot86
  xpos -9026
  ypos 733
 }
push $Ne9c75000
 Grade {
  add {{parent.StrongestColour.red} {parent.StrongestColour.green} {parent.StrongestColour.blue} 0}
  name KeylightOffset5
  xpos -9390
  ypos 559
  addUserKnob {20 User}
  addUserKnob {7 red_value}
  red_value {{parent.despill_colour.r-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.g*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 green_value}
  green_value {{parent.despill_colour.g-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 blue_value}
  blue_value {{parent.despill_colour.b-(((parent.despill_colour.g*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge21
  xpos -9390
  ypos 727
 }
 Dot {
  name Dot87
  xpos -9356
  ypos 802
 }
push $Ne9c74400
 Merge2 {
  inputs 2
  operation plus
  name Merge22
  xpos -9610
  ypos 799
 }
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  reverse true
  name Grade6
  xpos -9610
  ypos 871
 }
 Dot {
  name Dot88
  xpos -9576
  ypos 970
 }
push $Nbb315400
 MergeExpression {
  inputs 2
  expr0 Br+(Ar-Br)*parent.strength
  expr1 Bg+(Ag-Bg)*parent.strength
  expr2 Bb+(Ab-Bb)*parent.strength
  name MergeExpression6
  xpos -9830
  ypos 967
 }
 Dot {
  name Dot89
  xpos -9796
  ypos 1138
 }
set Nb5030800 [stack 0]
 Merge2 {
  inputs 2
  operation minus
  name Merge23
  xpos -8730
  ypos 1135
 }
 Dot {
  name Dot90
  xpos -8696
  ypos 1186
 }
set Nb5031000 [stack 0]
 Saturation {
  mode Maximum
  name Saturation21
  xpos -8510
  ypos 1231
 }
push $Nb5031000
 Saturation {
  mode Average
  name Saturation22
  xpos -8620
  ypos 1231
 }
push $Nb5031000
 Saturation {
  mode "Ccir 601"
  name Saturation23
  xpos -8840
  ypos 1231
 }
push $Nb5031000
 Saturation {
  name Saturation24
  xpos -8950
  ypos 1231
 }
 Switch {
  inputs 4
  which {{parent.luminance_math}}
  name SwitchMaths5
  xpos -8730
  ypos 1327
 }
 Multiply {
  value {{parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance}}
  name Multiply6
  xpos -8730
  ypos 1393
 }
 Dot {
  name Dot91
  xpos -8696
  ypos 1474
 }
push $Nb5030800
 Merge2 {
  inputs 2
  operation plus
  name Merge24
  xpos -9830
  ypos 1471
 }
 Clamp {
  name Clamp6
  xpos -9830
  ypos 1633
  disable {{!parent.black_clamp}}
 }
 Dot {
  name Dot92
  xpos -9796
  ypos 2634
 }
push $Nbb314800
 Shuffle {
  name Shuffle17
  label "\[value in]"
  xpos -8292
  ypos -39
 }
 Dot {
  name Dot64
  xpos -8258
  ypos 106
 }
set Nbaa28000 [stack 0]
 Dot {
  name Dot65
  xpos -8038
  ypos 106
 }
set Nbaa28400 [stack 0]
 Dot {
  name Dot66
  xpos -7158
  ypos 106
 }
push $Nbaa28400
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  name bias4
  xpos -8072
  ypos 223
 }
 Dot {
  name Dot67
  xpos -8038
  ypos 349
 }
set Nbaa29000 [stack 0]
 Dot {
  name Dot68
  xpos -7818
  ypos 349
 }
 Expression {
  temp_name0 redweight
  temp_expr0 ((b*parent.balance)+(g*(1-parent.balance)))
  temp_name1 greenweight
  temp_expr1 ((b*parent.balance)+(r*(1-parent.balance)))
  temp_name2 blueweight
  temp_expr2 ((g*parent.balance)+(r*(1-parent.balance)))
  expr0 clamp(r-(redweight*parent.limit),0,1000000)
  expr1 clamp(r-(greenweight*parent.limit),0,1000000)
  expr2 clamp(r-(blueweight*parent.limit),0,1000000)
  name ClampedKey4
  xpos -7852
  ypos 391
 }
 Dot {
  name Dot69
  xpos -7818
  ypos 443
 }
set Nbaa29c00 [stack 0]
 Dot {
  name Dot70
  xpos -7486
  ypos 443
 }
set Nbaa4a000 [stack 0]
 Shuffle {
  red blue
  green blue
  alpha blue
  name Shuffle18
  label "\[value in]"
  xpos -7412
  ypos 529
 }
push $Nbaa4a000
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle19
  label "\[value in]"
  xpos -7522
  ypos 532
 }
push $Nbaa4a000
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle20
  label "\[value in]"
  xpos -7632
  ypos 532
 }
 Switch {
  inputs 3
  which {{StrongestColour.which}}
  name Switch5
  xpos -7522
  ypos 610
 }
 Dot {
  name Dot71
  xpos -7488
  ypos 733
 }
push $Nbaa29c00
 Grade {
  add {{parent.StrongestColour.red} {parent.StrongestColour.green} {parent.StrongestColour.blue} 0}
  name KeylightOffset4
  xpos -7852
  ypos 559
  addUserKnob {20 User}
  addUserKnob {7 red_value}
  red_value {{parent.despill_colour.r-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.g*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 green_value}
  green_value {{parent.despill_colour.g-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 blue_value}
  blue_value {{parent.despill_colour.b-(((parent.despill_colour.g*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge17
  xpos -7852
  ypos 727
 }
 Dot {
  name Dot72
  xpos -7818
  ypos 802
 }
push $Nbaa29000
 Merge2 {
  inputs 2
  operation plus
  name Merge18
  xpos -8072
  ypos 799
 }
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  reverse true
  name Grade5
  xpos -8072
  ypos 871
 }
 Dot {
  name Dot73
  xpos -8038
  ypos 970
 }
push $Nbaa28000
 MergeExpression {
  inputs 2
  expr0 Br+(Ar-Br)*parent.strength
  expr1 Bg+(Ag-Bg)*parent.strength
  expr2 Bb+(Ab-Bb)*parent.strength
  name MergeExpression5
  xpos -8292
  ypos 967
 }
 Dot {
  name Dot74
  xpos -8258
  ypos 1138
 }
set Nbecdf400 [stack 0]
 Merge2 {
  inputs 2
  operation minus
  name Merge19
  xpos -7192
  ypos 1135
 }
 Dot {
  name Dot75
  xpos -7158
  ypos 1186
 }
set Nbecdfc00 [stack 0]
 Saturation {
  mode Maximum
  name Saturation17
  xpos -6972
  ypos 1231
 }
push $Nbecdfc00
 Saturation {
  mode Average
  name Saturation18
  xpos -7082
  ypos 1231
 }
push $Nbecdfc00
 Saturation {
  mode "Ccir 601"
  name Saturation19
  xpos -7302
  ypos 1231
 }
push $Nbecdfc00
 Saturation {
  name Saturation20
  xpos -7412
  ypos 1231
 }
 Switch {
  inputs 4
  which {{parent.luminance_math}}
  name SwitchMaths4
  xpos -7192
  ypos 1327
 }
 Multiply {
  value {{parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance}}
  name Multiply5
  xpos -7192
  ypos 1393
 }
 Dot {
  name Dot76
  xpos -7158
  ypos 1474
 }
push $Nbecdf400
 Merge2 {
  inputs 2
  operation plus
  name Merge20
  xpos -8292
  ypos 1471
 }
 Clamp {
  name Clamp5
  xpos -8292
  ypos 1633
  disable {{!parent.black_clamp}}
 }
 Dot {
  name Dot77
  xpos -8256
  ypos 2418
 }
push $Nbb314400
 Shuffle {
  in screen_colour
  name Shuffle13
  label "\[value in]"
  xpos -6720
  ypos -39
 }
 Dot {
  name Dot49
  xpos -6686
  ypos 106
 }
set Nc650ec00 [stack 0]
 Dot {
  name Dot50
  xpos -6466
  ypos 106
 }
set Nc650f000 [stack 0]
 Dot {
  name Dot51
  xpos -5586
  ypos 106
 }
push $Nc650f000
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  name bias3
  xpos -6500
  ypos 223
 }
 Dot {
  name Dot52
  xpos -6466
  ypos 349
 }
set Nc650fc00 [stack 0]
 Dot {
  name Dot53
  xpos -6246
  ypos 349
 }
 Expression {
  temp_name0 redweight
  temp_expr0 ((b*parent.balance)+(g*(1-parent.balance)))
  temp_name1 greenweight
  temp_expr1 ((b*parent.balance)+(r*(1-parent.balance)))
  temp_name2 blueweight
  temp_expr2 ((g*parent.balance)+(r*(1-parent.balance)))
  expr0 clamp(r-(redweight*parent.limit),0,1000000)
  expr1 clamp(r-(greenweight*parent.limit),0,1000000)
  expr2 clamp(r-(blueweight*parent.limit),0,1000000)
  name ClampedKey3
  xpos -6280
  ypos 391
 }
 Dot {
  name Dot54
  xpos -6246
  ypos 443
 }
set Nc653c800 [stack 0]
 Dot {
  name Dot55
  xpos -5914
  ypos 443
 }
set Nc653cc00 [stack 0]
 Shuffle {
  red blue
  green blue
  alpha blue
  name Shuffle14
  label "\[value in]"
  xpos -5840
  ypos 529
 }
push $Nc653cc00
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle15
  label "\[value in]"
  xpos -5950
  ypos 532
 }
push $Nc653cc00
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle16
  label "\[value in]"
  xpos -6060
  ypos 532
 }
 Switch {
  inputs 3
  which {{StrongestColour.which}}
  name Switch4
  xpos -5950
  ypos 610
 }
 Dot {
  name Dot56
  xpos -5916
  ypos 733
 }
push $Nc653c800
 Grade {
  add {{parent.StrongestColour.red} {parent.StrongestColour.green} {parent.StrongestColour.blue} 0}
  name KeylightOffset3
  xpos -6280
  ypos 559
  addUserKnob {20 User}
  addUserKnob {7 red_value}
  red_value {{parent.despill_colour.r-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.g*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 green_value}
  green_value {{parent.despill_colour.g-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 blue_value}
  blue_value {{parent.despill_colour.b-(((parent.despill_colour.g*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge13
  xpos -6280
  ypos 727
 }
 Dot {
  name Dot57
  xpos -6246
  ypos 802
 }
push $Nc650fc00
 Merge2 {
  inputs 2
  operation plus
  name Merge14
  xpos -6500
  ypos 799
 }
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  reverse true
  name Grade4
  xpos -6500
  ypos 871
 }
 Dot {
  name Dot58
  xpos -6466
  ypos 970
 }
push $Nc650ec00
 MergeExpression {
  inputs 2
  expr0 Br+(Ar-Br)*parent.strength
  expr1 Bg+(Ag-Bg)*parent.strength
  expr2 Bb+(Ab-Bb)*parent.strength
  name MergeExpression4
  xpos -6720
  ypos 967
 }
 Dot {
  name Dot59
  xpos -6686
  ypos 1138
 }
set Nba89e000 [stack 0]
 Merge2 {
  inputs 2
  operation minus
  name Merge15
  xpos -5620
  ypos 1135
 }
 Dot {
  name Dot60
  xpos -5586
  ypos 1186
 }
set Nba89e800 [stack 0]
 Saturation {
  mode Maximum
  name Saturation13
  xpos -5400
  ypos 1231
 }
push $Nba89e800
 Saturation {
  mode Average
  name Saturation14
  xpos -5510
  ypos 1231
 }
push $Nba89e800
 Saturation {
  mode "Ccir 601"
  name Saturation15
  xpos -5730
  ypos 1231
 }
push $Nba89e800
 Saturation {
  name Saturation16
  xpos -5840
  ypos 1231
 }
 Switch {
  inputs 4
  which {{parent.luminance_math}}
  name SwitchMaths3
  xpos -5620
  ypos 1327
 }
 Multiply {
  value {{parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance}}
  name Multiply4
  xpos -5620
  ypos 1393
 }
 Dot {
  name Dot61
  xpos -5586
  ypos 1474
 }
push $Nba89e000
 Merge2 {
  inputs 2
  operation plus
  name Merge16
  xpos -6720
  ypos 1471
 }
 Clamp {
  name Clamp4
  xpos -6720
  ypos 1633
  disable {{!parent.black_clamp}}
 }
 Dot {
  name Dot62
  xpos -6686
  ypos 2218
 }
push $Nbb314000
 Shuffle {
  in fg_denoise_plate
  name Shuffle9
  label "\[value in]"
  xpos -5182
  ypos -39
 }
 Dot {
  name Dot34
  xpos -5148
  ypos 106
 }
set Nba7f7800 [stack 0]
 Dot {
  name Dot35
  xpos -4928
  ypos 106
 }
set Nba7f7c00 [stack 0]
 Dot {
  name Dot36
  xpos -4048
  ypos 106
 }
push $Nba7f7c00
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  name bias2
  xpos -4962
  ypos 223
 }
 Dot {
  name Dot37
  xpos -4928
  ypos 349
 }
set Nba822800 [stack 0]
 Dot {
  name Dot38
  xpos -4708
  ypos 349
 }
 Expression {
  temp_name0 redweight
  temp_expr0 ((b*parent.balance)+(g*(1-parent.balance)))
  temp_name1 greenweight
  temp_expr1 ((b*parent.balance)+(r*(1-parent.balance)))
  temp_name2 blueweight
  temp_expr2 ((g*parent.balance)+(r*(1-parent.balance)))
  expr0 clamp(r-(redweight*parent.limit),0,1000000)
  expr1 clamp(r-(greenweight*parent.limit),0,1000000)
  expr2 clamp(r-(blueweight*parent.limit),0,1000000)
  name ClampedKey2
  xpos -4742
  ypos 391
 }
 Dot {
  name Dot39
  xpos -4708
  ypos 443
 }
set Nba823400 [stack 0]
 Dot {
  name Dot40
  xpos -4376
  ypos 443
 }
set Nba823800 [stack 0]
 Shuffle {
  red blue
  green blue
  alpha blue
  name Shuffle10
  label "\[value in]"
  xpos -4302
  ypos 529
 }
push $Nba823800
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle11
  label "\[value in]"
  xpos -4412
  ypos 532
 }
push $Nba823800
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle12
  label "\[value in]"
  xpos -4522
  ypos 532
 }
 Switch {
  inputs 3
  which {{StrongestColour.which}}
  name Switch3
  xpos -4412
  ypos 610
 }
 Dot {
  name Dot41
  xpos -4378
  ypos 733
 }
push $Nba823400
 Grade {
  add {{parent.StrongestColour.red} {parent.StrongestColour.green} {parent.StrongestColour.blue} 0}
  name KeylightOffset2
  xpos -4742
  ypos 559
  addUserKnob {20 User}
  addUserKnob {7 red_value}
  red_value {{parent.despill_colour.r-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.g*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 green_value}
  green_value {{parent.despill_colour.g-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 blue_value}
  blue_value {{parent.despill_colour.b-(((parent.despill_colour.g*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge9
  xpos -4742
  ypos 727
 }
 Dot {
  name Dot42
  xpos -4708
  ypos 802
 }
push $Nba822800
 Merge2 {
  inputs 2
  operation plus
  name Merge10
  xpos -4962
  ypos 799
 }
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  reverse true
  name Grade3
  xpos -4962
  ypos 871
 }
 Dot {
  name Dot43
  xpos -4928
  ypos 970
 }
push $Nba7f7800
 MergeExpression {
  inputs 2
  expr0 Br+(Ar-Br)*parent.strength
  expr1 Bg+(Ag-Bg)*parent.strength
  expr2 Bb+(Ab-Bb)*parent.strength
  name MergeExpression3
  xpos -5182
  ypos 967
 }
 Dot {
  name Dot44
  xpos -5148
  ypos 1138
 }
set Nb091ac00 [stack 0]
 Merge2 {
  inputs 2
  operation minus
  name Merge11
  xpos -4082
  ypos 1135
 }
 Dot {
  name Dot45
  xpos -4048
  ypos 1186
 }
set Nb091b400 [stack 0]
 Saturation {
  mode Maximum
  name Saturation9
  xpos -3862
  ypos 1231
 }
push $Nb091b400
 Saturation {
  mode Average
  name Saturation10
  xpos -3972
  ypos 1231
 }
push $Nb091b400
 Saturation {
  mode "Ccir 601"
  name Saturation11
  xpos -4192
  ypos 1231
 }
push $Nb091b400
 Saturation {
  name Saturation12
  xpos -4302
  ypos 1231
 }
 Switch {
  inputs 4
  which {{parent.luminance_math}}
  name SwitchMaths2
  xpos -4082
  ypos 1327
 }
 Multiply {
  value {{parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance}}
  name Multiply3
  xpos -4082
  ypos 1393
 }
 Dot {
  name Dot46
  xpos -4048
  ypos 1474
 }
push $Nb091ac00
 Merge2 {
  inputs 2
  operation plus
  name Merge12
  xpos -5182
  ypos 1471
 }
 Clamp {
  name Clamp3
  xpos -5182
  ypos 1633
  disable {{!parent.black_clamp}}
 }
 Dot {
  name Dot48
  xpos -5148
  ypos 2026
 }
push $Nbb2f5c00
 Shuffle {
  in fg_plate
  name Shuffle5
  label "\[value in]"
  xpos -3532
  ypos -41
 }
 Dot {
  name Dot19
  xpos -3498
  ypos 105
 }
set Nbc6a8400 [stack 0]
 Dot {
  name Dot20
  xpos -3278
  ypos 105
 }
set Nbc6a8800 [stack 0]
 Dot {
  name Dot21
  xpos -2398
  ypos 105
 }
push $Nbc6a8800
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  name bias1
  xpos -3312
  ypos 222
 }
 Dot {
  name Dot22
  xpos -3278
  ypos 348
 }
set Nbc6a9400 [stack 0]
 Dot {
  name Dot23
  xpos -3058
  ypos 348
 }
 Expression {
  temp_name0 redweight
  temp_expr0 ((b*parent.balance)+(g*(1-parent.balance)))
  temp_name1 greenweight
  temp_expr1 ((b*parent.balance)+(r*(1-parent.balance)))
  temp_name2 blueweight
  temp_expr2 ((g*parent.balance)+(r*(1-parent.balance)))
  expr0 clamp(r-(redweight*parent.limit),0,1000000)
  expr1 clamp(r-(greenweight*parent.limit),0,1000000)
  expr2 clamp(r-(blueweight*parent.limit),0,1000000)
  name ClampedKey1
  xpos -3092
  ypos 390
 }
 Dot {
  name Dot24
  xpos -3058
  ypos 442
 }
set Nbc6d2000 [stack 0]
 Dot {
  name Dot25
  xpos -2726
  ypos 442
 }
set Nbc6d2400 [stack 0]
 Shuffle {
  red blue
  green blue
  alpha blue
  name Shuffle6
  label "\[value in]"
  xpos -2652
  ypos 528
 }
push $Nbc6d2400
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle7
  label "\[value in]"
  xpos -2762
  ypos 531
 }
push $Nbc6d2400
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle8
  label "\[value in]"
  xpos -2872
  ypos 531
 }
 Switch {
  inputs 3
  which {{StrongestColour.which}}
  name Switch2
  xpos -2762
  ypos 609
 }
 Dot {
  name Dot26
  xpos -2728
  ypos 732
 }
push $Nbc6d2000
 Grade {
  add {{parent.StrongestColour.red} {parent.StrongestColour.green} {parent.StrongestColour.blue} 0}
  name KeylightOffset1
  xpos -3092
  ypos 558
  addUserKnob {20 User}
  addUserKnob {7 red_value}
  red_value {{parent.despill_colour.r-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.g*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 green_value}
  green_value {{parent.despill_colour.g-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 blue_value}
  blue_value {{parent.despill_colour.b-(((parent.despill_colour.g*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge5
  xpos -3092
  ypos 726
 }
 Dot {
  name Dot27
  xpos -3058
  ypos 801
 }
push $Nbc6a9400
 Merge2 {
  inputs 2
  operation plus
  name Merge6
  xpos -3312
  ypos 798
 }
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  reverse true
  name Grade2
  xpos -3312
  ypos 870
 }
 Dot {
  name Dot28
  xpos -3278
  ypos 969
 }
push $Nbc6a8400
 MergeExpression {
  inputs 2
  expr0 Br+(Ar-Br)*parent.strength
  expr1 Bg+(Ag-Bg)*parent.strength
  expr2 Bb+(Ab-Bb)*parent.strength
  name MergeExpression2
  xpos -3532
  ypos 966
 }
 Dot {
  name Dot29
  xpos -3498
  ypos 1137
 }
set Nbc701800 [stack 0]
 Merge2 {
  inputs 2
  operation minus
  name Merge7
  xpos -2432
  ypos 1134
 }
 Dot {
  name Dot30
  xpos -2398
  ypos 1185
 }
set N8e06000 [stack 0]
 Saturation {
  mode Maximum
  name Saturation5
  xpos -2212
  ypos 1230
 }
push $N8e06000
 Saturation {
  mode Average
  name Saturation6
  xpos -2322
  ypos 1230
 }
push $N8e06000
 Saturation {
  mode "Ccir 601"
  name Saturation7
  xpos -2542
  ypos 1230
 }
push $N8e06000
 Saturation {
  name Saturation8
  xpos -2652
  ypos 1230
 }
 Switch {
  inputs 4
  which {{parent.luminance_math}}
  name SwitchMaths1
  xpos -2432
  ypos 1326
 }
 Multiply {
  value {{parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance}}
  name Multiply2
  xpos -2432
  ypos 1392
 }
 Dot {
  name Dot31
  xpos -2398
  ypos 1473
 }
push $Nbc701800
 Merge2 {
  inputs 2
  operation plus
  name Merge8
  xpos -3532
  ypos 1470
 }
 Clamp {
  name Clamp2
  xpos -3532
  ypos 1632
  disable {{!parent.black_clamp}}
 }
 Dot {
  name Dot32
  xpos -3498
  ypos 1906
 }
push $Nbb2f5800
 Shuffle {
  name Shuffle2
  label "\[value in]"
  xpos -1910
  ypos -33
 }
 Dot {
  name Dot3
  xpos -1876
  ypos 114
 }
set Nfcc9000 [stack 0]
 Dot {
  name Dot4
  xpos -1656
  ypos 114
 }
set Nfcc9400 [stack 0]
 Dot {
  name Dot13
  xpos -776
  ypos 114
 }
push $Nfcc9400
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  name bias
  xpos -1690
  ypos 231
 }
 Dot {
  name Dot5
  xpos -1656
  ypos 357
 }
set Nfcf6000 [stack 0]
 Dot {
  name Dot6
  xpos -1436
  ypos 357
 }
 Expression {
  temp_name0 redweight
  temp_expr0 ((b*parent.balance)+(g*(1-parent.balance)))
  temp_name1 greenweight
  temp_expr1 ((b*parent.balance)+(r*(1-parent.balance)))
  temp_name2 blueweight
  temp_expr2 ((g*parent.balance)+(r*(1-parent.balance)))
  expr0 clamp(r-(redweight*parent.limit),0,1000000)
  expr1 clamp(r-(greenweight*parent.limit),0,1000000)
  expr2 clamp(r-(blueweight*parent.limit),0,1000000)
  name ClampedKey
  xpos -1470
  ypos 399
 }
 Dot {
  name Dot7
  xpos -1436
  ypos 451
 }
set Nfcf6c00 [stack 0]
 Dot {
  name Dot9
  xpos -1104
  ypos 451
 }
set Nfcf7000 [stack 0]
 Shuffle {
  red blue
  green blue
  alpha blue
  name Shuffle4
  label "\[value in]"
  xpos -1030
  ypos 537
 }
push $Nfcf7000
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle3
  label "\[value in]"
  xpos -1140
  ypos 540
 }
push $Nfcf7000
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle1
  label "\[value in]"
  xpos -1250
  ypos 540
 }
 Switch {
  inputs 3
  which {{StrongestColour.which}}
  name Switch1
  xpos -1140
  ypos 618
 }
 Dot {
  name Dot8
  xpos -1106
  ypos 741
 }
push $Nfcf6c00
 Grade {
  add {{parent.StrongestColour.red} {parent.StrongestColour.green} {parent.StrongestColour.blue} 0}
  name KeylightOffset
  xpos -1470
  ypos 567
  addUserKnob {20 User}
  addUserKnob {7 red_value}
  red_value {{parent.despill_colour.r-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.g*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 green_value}
  green_value {{parent.despill_colour.g-(((parent.despill_colour.b*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
  addUserKnob {7 blue_value}
  blue_value {{parent.despill_colour.b-(((parent.despill_colour.g*parent.balance)+(parent.despill_colour.r*(1-parent.balance)))*parent.limit)}}
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge1
  xpos -1470
  ypos 735
 }
 Dot {
  name Dot10
  xpos -1436
  ypos 810
 }
push $Nfcf6000
 Merge2 {
  inputs 2
  operation plus
  name Merge2
  xpos -1690
  ypos 807
 }
 Grade {
  whitepoint {{parent.despill_bias} {parent.despill_bias} {parent.despill_bias} {parent.despill_bias}}
  reverse true
  name Grade1
  xpos -1690
  ypos 879
 }
 Dot {
  name Dot11
  xpos -1656
  ypos 978
 }
push $Nfcc9000
 MergeExpression {
  inputs 2
  expr0 Br+(Ar-Br)*parent.strength
  expr1 Bg+(Ag-Bg)*parent.strength
  expr2 Bb+(Ab-Bb)*parent.strength
  name MergeExpression1
  xpos -1910
  ypos 975
 }
 Dot {
  name Dot12
  xpos -1876
  ypos 1146
 }
set Nb4702400 [stack 0]
 Merge2 {
  inputs 2
  operation minus
  name Merge3
  xpos -810
  ypos 1143
 }
 Dot {
  name Dot14
  xpos -776
  ypos 1194
 }
set Nb4702c00 [stack 0]
 Saturation {
  mode Maximum
  name Saturation4
  xpos -590
  ypos 1239
 }
push $Nb4702c00
 Saturation {
  mode Average
  name Saturation3
  xpos -700
  ypos 1239
 }
push $Nb4702c00
 Saturation {
  mode "Ccir 601"
  name Saturation2
  xpos -920
  ypos 1239
 }
push $Nb4702c00
 Saturation {
  name Saturation1
  xpos -1030
  ypos 1239
 }
 Switch {
  inputs 4
  which {{parent.luminance_math}}
  name SwitchMaths
  xpos -810
  ypos 1335
 }
 Multiply {
  value {{parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance} {parent.restore_luminance}}
  name Multiply1
  xpos -810
  ypos 1401
 }
 Dot {
  name Dot15
  xpos -776
  ypos 1482
 }
push $Nb4702400
 Merge2 {
  inputs 2
  operation plus
  name Merge4
  xpos -1910
  ypos 1479
 }
 Clamp {
  name Clamp1
  xpos -1910
  ypos 1641
  disable {{!parent.black_clamp}}
 }
 Dot {
  name Dot16
  xpos -1876
  ypos 1746
 }
push $Nbb2f5400
 NoOp {
  name StrongestColour
  xpos -208
  ypos -57
  addUserKnob {20 User}
  addUserKnob {7 red}
  red {{parent.despill_colour.r}}
  addUserKnob {7 green}
  green {{parent.despill_colour.g}}
  addUserKnob {7 blue}
  blue {{parent.despill_colour.b}}
  addUserKnob {3 which}
  which {{"\[python -execlocal node\\ =\\ nuke.thisNode()\\noffsetred\\ =\\ node\\\['red'\\].value()\\noffsetgreen\\ =\\ node\\\['green'\\].value()\\noffsetblue\\ =\\ node\\\['blue'\\].value()\\n\\nif\\ offsetgreen\\ >=\\ offsetblue\\ and\\ offsetgreen\\ >=\\ offsetred:\\n\\ \\ \\ ret\\ =\\ 1\\nelif\\ offsetblue\\ >=\\ offsetred:\\n\\ \\ \\ ret\\ =\\ 2\\nelse:\\n\\ \\ \\ ret\\ =\\ 0]"}}
 }
 Dot {
  name Dot17
  xpos -174
  ypos 450
 }
 ShuffleCopy {
  inputs 2
  in2 {{{Shuffle2.in}}}
  out {{{Shuffle2.in}}}
  name ShuffleCopy1
  label "\[value in]"
  xpos -208
  ypos 1737
  disable {{!clamp(out)}}
 }
 ShuffleCopy {
  inputs 2
  in2 {{{Shuffle5.in}}}
  out {{{Shuffle5.in}}}
  name ShuffleCopy2
  label "\[value in]"
  xpos -208
  ypos 1905
  disable {{!clamp(out)}}
 }
 ShuffleCopy {
  inputs 2
  in2 {{{Shuffle9.in}}}
  out {{{Shuffle9.in}}}
  name ShuffleCopy3
  label "\[value in]"
  xpos -208
  ypos 2025
  disable {{!clamp(out)}}
 }
 ShuffleCopy {
  inputs 2
  in2 {{{Shuffle13.in}}}
  out {{{Shuffle13.in}}}
  name ShuffleCopy4
  label "\[value in]"
  xpos -208
  ypos 2217
  disable {{!clamp(out)}}
 }
 ShuffleCopy {
  inputs 2
  in2 {{{Shuffle17.in}}}
  out {{{Shuffle17.in}}}
  name ShuffleCopy5
  label "\[value in]"
  xpos -208
  ypos 2409
  disable {{!clamp(out)}}
 }
 ShuffleCopy {
  inputs 2
  in2 {{{Shuffle21.in}}}
  out {{{Shuffle21.in}}}
  name ShuffleCopy6
  label "\[value in]"
  xpos -208
  ypos 2601
  disable {{!clamp(out)}}
 }
 Output {
  name Output1
  xpos -208
  ypos 3495
 }
 StickyNote {
  inputs 0
  name StickyNote4
  label "StrongestColour.which == 0 ? -parent.despill_colour.r*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.r*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.r*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.g*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.g*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.g*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.b*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.b*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.b*clamp(1/blue_value,0,1000000):\n0"
  xpos -6850
  ypos 553
 }
 StickyNote {
  inputs 0
  name StickyNote5
  label "StrongestColour.which == 0 ? -parent.despill_colour.r*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.r*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.r*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.g*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.g*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.g*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.b*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.b*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.b*clamp(1/blue_value,0,1000000):\n0"
  xpos -8422
  ypos 553
 }
 StickyNote {
  inputs 0
  name StickyNote6
  label "StrongestColour.which == 0 ? -parent.despill_colour.r*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.r*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.r*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.g*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.g*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.g*clamp(1/blue_value,0,1000000):\n0\n\nStrongestColour.which == 0 ? -parent.despill_colour.b*clamp(1/red_value,0,1000000):\nStrongestColour.which == 1 ? -parent.despill_colour.b*clamp(1/green_value,0,1000000):\nStrongestColour.which == 2 ? -parent.despill_colour.b*clamp(1/blue_value,0,1000000):\n0"
  xpos -9960
  ypos 553
 }
end_group
Dot {
 name Dot79
 tile_color 0xff0000ff
 label "DESPILLED FG DENOISED"
 note_font "Verdana Bold"
 note_font_size 15
 selected true
 xpos -3710
 ypos 9858
}
set Nc6387c00 [stack 0]
Group {
 inputs 3
 name fc_DivAdditiveKeyer
 tile_color 0xff00ff
 selected true
 xpos -3890
 ypos 9945
 addUserKnob {20 User}
 addUserKnob {4 output t "Choose the output type, either a comp using the bg input or output the multiplicative image before it is merger. This is for conveinience in stereo minicomp scrimpts making it possible to create a precomped layer that can be plused over the bg. Remember to inlcude a log conversion on the bh before merging and after merging if this was enabled." M {"bg comp" "multiplicative image" ""}}
 addUserKnob {4 maths M {lin log ""}}
 maths log
 addUserKnob {26 _1 l "" +STARTLINE}
 addUserKnob {4 screen l "screen type" M {pick input ""}}
 screen input
 addUserKnob {6 screencolour_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {18 screencolour l colour R 0 4}
 screencolour {0 0 0}
 addUserKnob {6 screencolour_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 _2 l "" +STARTLINE}
 addUserKnob {7 saturation R 0 4}
 saturation 0.25
 addUserKnob {7 contrast R 0 5}
 contrast 1
 addUserKnob {7 balance R -1 1}
 addUserKnob {18 tint R 0 2}
 tint 1
 addUserKnob {6 tint_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 _3 l "" +STARTLINE}
 addUserKnob {7 limitdarks l darks}
 addUserKnob {7 limitlights l lights}
}
 Input {
  inputs 0
  name FG
  xpos -41
  ypos 46
 }
 AddChannels {
  channels rgb
  name AddChannels3
  xpos -41
  ypos 118
 }
 Dot {
  name Dot1
  xpos -6
  ypos 263
 }
set Nc63a8800 [stack 0]
 Shuffle2 {
  fromInput1 {{0} B}
  fromInput2 {{0} B}
  mappings "4 black -1 -1 rgba.blue 0 2 black -1 -1 rgba.red 0 0 black -1 -1 rgba.green 0 1 black -1 -1 rgba.alpha 0 3"
  name Shuffle1
  xpos -370
  ypos 260
 }
set Nc63a8c00 [stack 0]
 Dot {
  name Dot3
  xpos -446
  ypos 263
 }
 Dot {
  name Dot4
  xpos -446
  ypos 1074
 }
set Nc63a9400 [stack 0]
 Dot {
  name Dot7
  xpos -446
  ypos 1146
 }
push $Nc63a9400
push $Nc63a8800
 Log2Lin {
  operation lin2log
  name Log2Lin1
  xpos -41
  ypos 406
  dope_sheet true
 }
 set Cc63a9c00 [stack 0]
 Dot {
  name Dot5
  xpos -6
  ypos 692
 }
set Ne7c0a000 [stack 0]
 Dot {
  inputs 0
  name Dot6
  label BLACK
  note_font "Verdana Bold"
  note_font_size 15
  xpos 194
  ypos 522
 }
 Merge2 {
  inputs 2
  operation difference
  name Merge2
  xpos 160
  ypos 689
 }
 Expression {
  temp_name0 mono
  temp_expr0 (r*.3)+(g*.59)+(b*.11)
  expr0 0
  expr1 0
  expr2 0
  expr3 mono
  name monochrome
  xpos 160
  ypos 975
 }
push $Ne7c0a000
 Input {
  inputs 0
  name SCREEN
  xpos -590
  ypos 39
  number 1
 }
 AddChannels {
  channels rgb
  name AddChannels2
  xpos -590
  ypos 111
 }
 Dot {
  name Dot2
  xpos -556
  ypos 450
 }
push $Nc63a8c00
 Add {
  value {{parent.screencolour} {parent.screencolour} {parent.screencolour} {parent.screencolour}}
  name Add1
  xpos -370
  ypos 326
 }
 Switch {
  inputs 2
  which {{parent.screen}}
  name SwitchScreenType
  xpos -370
  ypos 447
 }
clone $Cc63a9c00 {
  xpos -370
  ypos 548
  selected false
 }
 Merge2 {
  inputs 2
  operation minus
  name Merge1
  xpos -370
  ypos 687
 }
 Saturation {
  saturation {{parent.saturation}}
  name Saturation1
  xpos -370
  ypos 759
 }
 Multiply {
  value {{parent.contrast}}
  name contrast
  xpos -370
  ypos 825
 }
 Multiply {
  value {{parent.tint} {parent.tint} {parent.tint} {parent.tint}}
  name tint
  xpos -370
  ypos 897
 }
 Add {
  inputs 1+1
  value {{parent.balance}}
  name balance
  xpos -370
  ypos 969
 }
 Merge2 {
  inputs 2
  operation max
  mix {{parent.limitdarks}}
  name Merge3
  xpos -370
  ypos 1071
 }
 Merge2 {
  inputs 2
  operation min
  mix {{parent.limitlights}}
  name Merge4
  xpos -370
  ypos 1143
 }
 Dot {
  name Dot8
  xpos -336
  ypos 1242
 }
set Nb8c2a400 [stack 0]
 Dot {
  name Dot9
  xpos -336
  ypos 1434
 }
push $Nb8c2a400
 Input {
  inputs 0
  name BG
  xpos -810
  ypos 45
  number 2
 }
 AddChannels {
  channels rgb
  name AddChannels1
  xpos -810
  ypos 111
 }
clone $Cc63a9c00 {
  xpos -810
  ypos 399
  selected false
 }
clone $Cc63a9c00 {
  xpos -810
  ypos 471
  selected false
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge5
  xpos -810
  ypos 1239
 }
 Log2Lin {
  name Log2Lin2
  xpos -810
  ypos 1335
 }
 Switch {
  inputs 2
  which {{parent.output}}
  name SwitchOutput
  xpos -810
  ypos 1431
 }
 Output {
  name Output1
  xpos -810
  ypos 1551
 }
end_group
push $Nc6387400
Dot {
 name Dot81
 tile_color 0xff0000ff
 label BG
 note_font "Verdana Bold"
 note_font_size 15
 selected true
 xpos -3625
 ypos 9738
}
push $Nc6387800
Dot {
 name Dot82
 tile_color 0xff0000ff
 label "DESPILLED SCREEN"
 note_font "Verdana Bold"
 note_font_size 15
 selected true
 xpos -3439
 ypos 9786
}
push $Nc6387c00
Dot {
 name Dot83
 tile_color 0xff0000ff
 label "DESPILLED FG DENOISED"
 note_font "Verdana Bold"
 note_font_size 15
 selected true
 xpos -3306
 ypos 9858
}
Group {
 inputs 3
 name fc_DivMultKeyer
 tile_color 0xff00ff
 selected true
 xpos -3473
 ypos 9945
 addUserKnob {20 User l DivMultKeyer t "Created by Alex Webb, 2014"}
 addUserKnob {4 output t "Choose the output type, either a comp using the bg input or output the multiplicative image before it is merger. This is for conveinience in stereo minicomp scrimpts making it possible to create a precomped layer that can be plused over the bg. Remember to inlcude a log conversion on the bh before merging and after merging if this was enabled." M {"bg comp" "multiplicative image" ""}}
 addUserKnob {4 maths M {lin log ""}}
 maths log
 addUserKnob {26 _1 l "" +STARTLINE}
 addUserKnob {4 screen l "screen type" M {pick input ""}}
 screen input
 addUserKnob {6 screencolour_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {18 screencolour l colour R 0 4}
 screencolour {0 0 0}
 addUserKnob {6 screencolour_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 _2 l "" +STARTLINE}
 addUserKnob {7 saturation R 0 4}
 saturation 0.25
 addUserKnob {18 gamma R 0 4}
 gamma 1
 addUserKnob {6 gamma_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 _3 l "" +STARTLINE}
 addUserKnob {7 lights t "Reduces the strenght of the areas that are brighter than the bg."}
 addUserKnob {7 darks t "Reduces the strength of the areas that are darker than the bg."}
 addUserKnob {26 _4 l "" +STARTLINE}
 addUserKnob {20 ColourLookup l "colour lookup" t "Control the dark and light levels with black and white points." n 1}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 _5 l "" +STARTLINE}
 addUserKnob {20 bgluma l "bg luminance" n 1}
 addUserKnob {7 limitdarks l "limit darks by bg luminance"}
 addUserKnob {7 limitlights l "limit lights by bg luminance"}
 addUserKnob {41 range T Keyer1.range}
 addUserKnob {20 endGroup_1 n -1}
 addUserKnob {26 _6 l "" +STARTLINE}
}
 Input {
  inputs 0
  name BG
  xpos -835
  ypos 45
  number 2
 }
 AddChannels {
  channels rgb
  name AddChannels1
  xpos -835
  ypos 111
 }
 Dot {
  name Dot10
  xpos -801
  ypos 282
 }
set Nad1b2400 [stack 0]
 Dot {
  name Dot19
  xpos -996
  ypos 282
 }
 Dot {
  name Dot18
  xpos -996
  ypos 2058
 }
 Input {
  inputs 0
  name FG
  xpos -41
  ypos 46
 }
 AddChannels {
  channels rgb
  name AddChannels3
  xpos -41
  ypos 118
 }
 Dot {
  name Dot1
  xpos -7
  ypos 330
 }
set Nad1b3800 [stack 0]
 Shuffle2 {
  fromInput1 {{0} B}
  fromInput2 {{0} B}
  mappings "4 black -1 -1 rgba.green 0 1 black -1 -1 rgba.red 0 0 black -1 -1 rgba.alpha 0 3 black -1 -1 rgba.blue 0 2"
  name Shuffle1
  xpos -370
  ypos 327
 }
set Nad1b3c00 [stack 0]
 Shuffle2 {
  fromInput1 {{0} B}
  fromInput2 {{0} B}
  mappings "4 white -1 -1 rgba.green 0 1 white -1 -1 rgba.red 0 0 white -1 -1 rgba.alpha 0 3 white -1 -1 rgba.blue 0 2"
  name Shuffle2
  xpos -480
  ypos 327
 }
 Dot {
  name Dot22
  xpos -446
  ypos 1146
 }
set Nad1d0400 [stack 0]
 Dot {
  name Dot25
  xpos -446
  ypos 1242
 }
set Nad1d0800 [stack 0]
 Dot {
  name Dot26
  xpos -446
  ypos 1362
 }
set Nad1d0c00 [stack 0]
 Dot {
  name Dot27
  xpos -446
  ypos 1434
 }
push $Nad1d0c00
push $Nad1b2400
 Dot {
  name Dot11
  xpos -556
  ypos 282
 }
 Keyer {
  operation "luminance key"
  name Keyer1
  xpos -590
  ypos 465
 }
 Dot {
  name Dot23
  xpos -556
  ypos 1194
 }
set Nad1d1c00 [stack 0]
 Dot {
  name Dot24
  xpos -556
  ypos 1290
 }
push $Nad1d0800
push $Nad1d1c00
push $Nad1d0400
push $Nad1b3800
 Dot {
  name Dot6
  xpos -6
  ypos 594
 }
set Nb1ea4400 [stack 0]
 Dot {
  name Dot7
  xpos 83
  ypos 594
 }
 Log2Lin {
  operation lin2log
  name Log2Lin4
  xpos 49
  ypos 639
 }
 Dot {
  name Dot20
  xpos 83
  ypos 738
 }
push $Nb1ea4400
 Switch {
  inputs 2
  which {{parent.maths}}
  name Switchmaths3
  xpos -40
  ypos 735
 }
 Dot {
  name Dot21
  xpos -6
  ypos 882
 }
 Input {
  inputs 0
  name SCREEN
  xpos -203
  ypos 63
  number 1
 }
 AddChannels {
  channels rgb
  name AddChannels2
  xpos -203
  ypos 135
 }
 Dot {
  name Dot2
  xpos -169
  ypos 511
 }
push $Nad1b3c00
 Add {
  value {{parent.screencolour} {parent.screencolour} {parent.screencolour} {parent.screencolour}}
  name Add1
  xpos -370
  ypos 417
 }
 Switch {
  inputs 2
  which {{parent.screen}}
  name Switch1
  xpos -370
  ypos 508
 }
 Dot {
  name Dot3
  xpos -336
  ypos 594
 }
set Nb1ec5000 [stack 0]
 Dot {
  name Dot4
  xpos -247
  ypos 594
 }
 Log2Lin {
  operation lin2log
  name Log2Lin1
  xpos -281
  ypos 639
 }
 Dot {
  name Dot5
  xpos -247
  ypos 738
 }
push $Nb1ec5000
 Switch {
  inputs 2
  which {{parent.maths}}
  name Switchmaths2
  xpos -370
  ypos 735
 }
 Merge2 {
  inputs 2
  operation divide
  name Merge1
  xpos -370
  ypos 879
 }
 Saturation {
  saturation {{parent.saturation}}
  name Saturation1
  xpos -370
  ypos 951
 }
 Gamma {
  value {{parent.gamma} {parent.gamma} {parent.gamma} {parent.gamma}}
  name Gamma1
  xpos -370
  ypos 1017
 }
 ColorLookup {
  name ColorLookup1
  xpos -370
  ypos 1119
 }
 Merge2 {
  inputs 2+1
  operation max
  mix {{parent.limitdarks}}
  name Merge2
  xpos -370
  ypos 1191
 }
 Merge2 {
  inputs 2+1
  operation min
  mix {{parent.limitlights}}
  name Merge3
  xpos -370
  ypos 1287
 }
 Merge2 {
  inputs 2
  operation mask
  mix {{clamp(1-parent.darks)}}
  name Merge4
  xpos -370
  ypos 1359
 }
 Merge2 {
  inputs 2
  operation min
  mix {{clamp(1-parent.lights)}}
  name Merge6
  xpos -370
  ypos 1431
 }
 Dot {
  name Dot8
  xpos -336
  ypos 1668
 }
set N6e5b4400 [stack 0]
 Dot {
  name Dot9
  xpos -336
  ypos 1908
 }
push $N6e5b4400
push $Nad1b2400
 Dot {
  name Dot12
  xpos -801
  ypos 594
 }
set N6e5b4c00 [stack 0]
 Dot {
  name Dot13
  xpos -712
  ypos 594
 }
 Log2Lin {
  operation lin2log
  name Log2Lin3
  xpos -746
  ypos 639
 }
 Dot {
  name Dot14
  xpos -712
  ypos 738
 }
push $N6e5b4c00
 Switch {
  inputs 2
  which {{parent.maths}}
  name Switchmaths
  xpos -835
  ypos 735
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge5
  xpos -835
  ypos 1665
 }
 Dot {
  name Dot15
  xpos -801
  ypos 1722
 }
set N6e5dc400 [stack 0]
 Dot {
  name Dot16
  xpos -712
  ypos 1722
 }
 Log2Lin {
  name Log2Lin2
  xpos -746
  ypos 1767
 }
 Dot {
  name Dot17
  xpos -712
  ypos 1836
 }
push $N6e5dc400
 Switch {
  inputs 2
  which {{parent.maths}}
  name Switchmaths1
  xpos -835
  ypos 1833
 }
 Switch {
  inputs 2
  which {{parent.output}}
  name SwitchOutput
  xpos -835
  ypos 1905
 }
 Copy {
  inputs 2
  from0 -rgba.alpha
  to0 -rgba.alpha
  channels rgb
  name Copy1
  xpos -835
  ypos 2043
 }
 Output {
  name Output1
  xpos -835
  ypos 2169
 }
end_group
Dot {
 name Dot80
 selected true
 xpos -3439
 ypos 10098
}
Switch {
 inputs 2
 name Switch6
 selected true
 xpos -4110
 ypos 10095
}
OCIOLogConvert {
 operation "lin to log"
 name OCIOLogConvert2
 selected true
 xpos -4110
 ypos 10863
}
Shuffle {
 alpha black
 name Shuffle9
 selected true
 xpos -4110
 ypos 10959
}
Merge2 {
 inputs 2
 name Merge5
 selected true
 xpos -4110
 ypos 11127
}
OCIOLogConvert {
 operation "log to lin"
 name OCIOLogConvert3
 selected true
 xpos -4110
 ypos 11247
}
Invert {
 name Invert1
 selected true
 xpos -4110
 ypos 11385
}
Merge2 {
 inputs 2
 operation plus
 mix 0.1
 name Merge6
 selected true
 xpos -4110
 ypos 11799
}
Merge2 {
 inputs 2
 operation plus
 name Merge10
 selected true
 xpos -4110
 ypos 12135
}
Dot {
 name Dot91
 tile_color 0xc5710fff
 label COMP
 note_font "Verdana Bold"
 note_font_size 20
 selected true
 xpos -4070
 ypos 12439
}
Dot {
 name Dot92
 selected true
 xpos -4070
 ypos 12559
}
set Nbab47400 [stack 0]
Dot {
 name Dot93
 selected true
 xpos -3960
 ypos 12559
}
Dot {
 name Dot94
 selected true
 xpos -3960
 ypos 12751
}
NoOp {
 inputs 0
 name fc_Doppelganger8
 tile_color 0x254c6dff
 label "\n\[knob Name]\n\n-"
 note_font "Verdana Bold"
 note_font_size 15
 note_font_color 0x94dcfeff
 selected true
 xpos -4544
 ypos 12495
 hide_input true
 addUserKnob {20 TG}
 addUserKnob {26 ""}
 addUserKnob {26 Divider l "<font color=\"lightblue\">Name" -STARTLINE}
 addUserKnob {1 Name l "" t "Type the name of the node you want to connect to in here" +STARTLINE}
 Name DEGRAIN
 addUserKnob {22 Connect l "<font color=\"lightblue\">Connect" -STARTLINE T "THIS = nuke.thisNode()\nPARENT = THIS\['Name'].getValue()\nE = nuke.exists(PARENT)\n\nif E == True:\n    v = nuke.toNode(PARENT)\n    THIS.setInput(0,v)\n    firstInput = THIS.input(0) \n    colour = firstInput\['tile_color'].getValue()\n    if firstInput is not None:\n        THIS\['tile_color'].setValue(int(colour)) \n    else: \n        pass\n    \nelse:\n    pass\n    nuke.message('There is no node named that')\n    \n\nnukescripts.clear_selection_recursive() \n\n\n"}
 addUserKnob {26 ""}
 addUserKnob {22 Find l "<font color=\"lightblue\">Find Connected" t "This will show you the node Doppelganger is connected to" -STARTLINE T "THIS = nuke.thisNode()\nPARENT = THIS.knob('Name').getValue()\nE = nuke.exists(PARENT)\n\nif E == True:\n    v = nuke.toNode(PARENT)\n    nuke.zoom( 2, \[ v.xpos(), v.ypos() ])\nelse:\n    pass\n    nuke.message('Cannot find that node')\n    \n\nnukescripts.clear_selection_recursive() \n\n"}
 addUserKnob {22 ConnectAll l "<font color=\"lightblue\">Connect all Doppelgangers" t "This will connect all Doppelgangers in your script. Handy if you have pasted a large script" -STARTLINE T "for s in nuke.allNodes():\n    classTypes = \['NoOp']\n    for n in classTypes:\n        if n in s.Class():\n            try:\n                s\['Connect'].execute()\n            except:\n                pass"}
 addUserKnob {26 ""}
 addUserKnob {20 Help}
 addUserKnob {26 ""}
 addUserKnob {26 Tip l :?: T "Doppelganger acts as a bridge between your Read nodes and your script\n\nUse this instead of duplicating a camera or geo or a plate over and over\n\nJust type in the name of the node and press connect\n\nAs a tip, add a NoOp underneath your Plate and call it 'Plate'. This will then make it easier to remember\n\nAny questions contact Thomas Greenhalgh\ntomgreenhalgh125@gmail.com\n"}
 addUserKnob {26 ""}
}
Dot {
 name Dot95
 tile_color 0x254c6dff
 label DEGRAIN
 note_font "Verdana Bold"
 note_font_size 20
 selected true
 xpos -4510
 ypos 12655
}
Dot {
 name Dot96
 selected true
 xpos -4510
 ypos 12751
}
set Nbab60800 [stack 0]
NoOp {
 inputs 0
 name fc_Doppelganger9
 tile_color 0x9454ff
 label "\n\[knob Name]\n\n-"
 note_font "Verdana Bold"
 note_font_size 15
 note_font_color 0x94dcfeff
 selected true
 xpos -4324
 ypos 12482
 hide_input true
 addUserKnob {20 TG}
 addUserKnob {26 ""}
 addUserKnob {26 Divider l "<font color=\"lightblue\">Name" -STARTLINE}
 addUserKnob {1 Name l "" t "Type the name of the node you want to connect to in here" +STARTLINE}
 Name PLATE
 addUserKnob {22 Connect l "<font color=\"lightblue\">Connect" -STARTLINE T "THIS = nuke.thisNode()\nPARENT = THIS\['Name'].getValue()\nE = nuke.exists(PARENT)\n\nif E == True:\n    v = nuke.toNode(PARENT)\n    THIS.setInput(0,v)\n    firstInput = THIS.input(0) \n    colour = firstInput\['tile_color'].getValue()\n    if firstInput is not None:\n        THIS\['tile_color'].setValue(int(colour)) \n    else: \n        pass\n    \nelse:\n    pass\n    nuke.message('There is no node named that')\n    \n\nnukescripts.clear_selection_recursive() \n\n\n"}
 addUserKnob {26 ""}
 addUserKnob {22 Find l "<font color=\"lightblue\">Find Connected" t "This will show you the node Doppelganger is connected to" -STARTLINE T "THIS = nuke.thisNode()\nPARENT = THIS.knob('Name').getValue()\nE = nuke.exists(PARENT)\n\nif E == True:\n    v = nuke.toNode(PARENT)\n    nuke.zoom( 2, \[ v.xpos(), v.ypos() ])\nelse:\n    pass\n    nuke.message('Cannot find that node')\n    \n\nnukescripts.clear_selection_recursive() \n\n"}
 addUserKnob {22 ConnectAll l "<font color=\"lightblue\">Connect all Doppelgangers" t "This will connect all Doppelgangers in your script. Handy if you have pasted a large script" -STARTLINE T "for s in nuke.allNodes():\n    classTypes = \['NoOp']\n    for n in classTypes:\n        if n in s.Class():\n            try:\n                s\['Connect'].execute()\n            except:\n                pass"}
 addUserKnob {26 ""}
 addUserKnob {20 Help}
 addUserKnob {26 ""}
 addUserKnob {26 Tip l :?: T "Doppelganger acts as a bridge between your Read nodes and your script\n\nUse this instead of duplicating a camera or geo or a plate over and over\n\nJust type in the name of the node and press connect\n\nAs a tip, add a NoOp underneath your Plate and call it 'Plate'. This will then make it easier to remember\n\nAny questions contact Thomas Greenhalgh\ntomgreenhalgh125@gmail.com\n"}
 addUserKnob {26 ""}
}
Dot {
 name Dot97
 tile_color 0x9454ff
 label PLATE
 note_font "Verdana Bold"
 note_font_size 20
 selected true
 xpos -4290
 ypos 12607
}
set Nbab61000 [stack 0]
push $Nbab47400
Group {
 inputs 4
 name DasGrain1
 help "DasGrain makes regraining as simple as clicking a few buttons.\n\nFollow the steps in the Help tab and you'll have a perfect regrain in no time!"
 onCreate "import random\n\ntestimonials = \[\n    \"Such an elegant solution, love it!\",\n    \"Your gizmo is beyond expectation\",\n    \"Totally awesome!\",\n    \"DasGrain is officially the best thing ever\",\n    \"It's really working!\",\n    \"Das bringt Tr&auml;nen in meine Augen\",\n    \"DasGrain is the salvation we waited for\",\n    \"I save a lot of time, and definitely my nerves :)\",\n    \"It's alright\",\n    \"My new favourite node, thanks!<br>Having said that, ...\"\n    ]\n\nnode = nuke.thisNode()\nnode\['testimonial'].setValue('<br><br><br><i>&laquo;%s&raquo;</i><br>&mdash; anonymous<br><br>' % random.choice(testimonials))\nnode\['box'].setFlag(nuke.NO_ANIMATION)"
 knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == 'box':\n    this_frame = nuke.frame()\n    n\['sample_frame'].setValue(this_frame)\n\nif k.name() == 'scatter':\n    n\['divider04'].setVisible(k.value() == False)\n    n\['divider05'].setVisible(k.value() == True)"
 tile_color 0x7f7f7fff
 label "v1.8 | 2021-03-07"
 selected true
 xpos -4104
 ypos 12736
 addUserKnob {20 DasGrain_tab l DasGrain}
 addUserKnob {41 output t "<strong>regrained comp</strong> it is what it sais\n<strong>plate grain</strong> plate minus degrained plate\n<strong>normalised grain</strong> check if the normalization worked. It should be as even as possible. This is what you want to output if you want to prerender a grain plate. Later you can plug it into the <i>external grain</i> input of another DasGrain\n<strong>adapted grain</strong> check if the adaptation worked. Output this if you want to further manipulate the grain (who knows what the sup is gonna come up with...). After, simply plus it to your comp (at that point the comp has to be in the <i>camera</i> colorspace, as set in the <i>Analyze</i> tab).\n<strong>grain QC</strong> check if voronoi seams are visible (&#8594; edgeblend), or the scattered grain looks different to the original plate grain (&#8594; maybe bad sample area or wrong luminance degrain amount)" T Output.output}
 addUserKnob {4 meta l "metadata from" t "Chances are you want to use the metadata from the plate, but who am I to assume :)" M {COMP PLATE}}
 addUserKnob {26 spacer01_1 l " " T " "}
 addUserKnob {20 GrainGroupBegin l "" +STARTLINE n -2}
 addUserKnob {20 Analyze_tab l Analyze}
 addUserKnob {26 text l <strong>Colorspace}
 addUserKnob {41 project_colorspace l project t "set this to the project color space" T OCIOColorSpace1.in_colorspace}
 addUserKnob {22 python_button l "What's this all about?" -STARTLINE T "nuke.message(\"Regraining in other color spaces than the camera native linear space can lead to unexpected behaviour.\\n\\nFor example converting Alexa plates to ACEScg might introduce negative values due to ACEScg's smaller gamut. In that case converting back to ARRI Linear ALEXA Wide Gamut will probably help.\\nJust set <i>project</i> to ACEScg and <i>camera</i> to ARRI Linear ALEXA Wide Gamut.\\n\\nThis might be transferable to other cameras, but I've only tested with Alexas.\\n---------\\nBypass by setting both knobs to the same value.\")"}
 addUserKnob {41 camera_colorspace l camera t "set this to the camera native linear space" T OCIOColorSpace1.out_colorspace}
 addUserKnob {26 text_2 l " " T " "}
 addUserKnob {26 level l "<strong>Degrain amount"}
 addUserKnob {78 luminance t "Leave this at 1 if you're working on a completely degrained plate.\n\nIn case you decided to leave some luminance grain in the degrained plate (use the DegrainHelper node for this!), set this to the same value as in the DegrainHelper in order to compensate.\n\nIf the luminance degrain amount was set to 0.8, this needs to be set to 0.8 as well.\n\nYou need to select a mask of all elements that cover the plate, otherwise the grain of whole comp will be too strong " n 1}
 luminance 1
 addUserKnob {26 divider01 l " "}
 addUserKnob {41 degrain_amount_mask l "degrain amount mask" t "Use this channel from the mask input to specify in what area of the comp the missing luminance grain needs to be compensated." T Multiply1.maskChannelMask}
 addUserKnob {41 invert_mask l invert -STARTLINE T Multiply1.invert_mask}
 addUserKnob {26 spacer02 l " " T " "}
 addUserKnob {26 divider02 l <strong>Analyze}
 addUserKnob {3 number_of_frames l "number of frames" t "Set the number of sample frames to be spread across the input range.\n\nMore frames lead to higher accuracy.\n\nIf there are particularly bright or dark frames, set them manually in the knob below to make sure they are part of the analysis.\n\nIf you want to set all sample frames manually, set this to 0 and add the frames in the knob below."}
 number_of_frames 10
 addUserKnob {1 additional_frames l "additional frames" t "Set additional frames like this:\n\n1001,1020,1053 (single frames)\n1020-1040 (frame ranges)\n1020-1040x4 (frame ranges with step)"}
 addUserKnob {3 sample_count l "sample count" t "The samples are spread across the sample range (which gets calculated automatically) based on the AlexaV3LogC curve. This results in more samples in the dark areas and less samples in the brights.\n\nMore samples lead to a more detailed response curve (while the accuracy is limited by the quality of the degrain)."}
 sample_count 20
 addUserKnob {22 analyze l Analyze t "this is where the magic happens" T "import base64\nthis = nuke.thisNode()\n\n\ndef _sample_count(this):\n    \"\"\"returns the sample count\"\"\"\n\n    sample_count = int(this\['sample_count'].value())\n\n    if sample_count <= 0:\n        raise RuntimeError('Enter a sample count greater than 0')\n\n    else:\n        return sample_count\n\n\ndef _generate_frame_list(this):\n    \"\"\"converts the frames submitted by the user into a list\"\"\"\n\n    frame_list = \[]\n    number_of_frames = int(this\['number_of_frames'].value())\n    additional_frames = this\['additional_frames'].value()\n\n    if number_of_frames < 1 and additional_frames is '':\n        raise RuntimeError('Either set the number of frames > 0\\nor define additional frames')\n\n    first_frame = max(this.input(1).firstFrame(), this.input(2).firstFrame())\n    last_frame = min(this.input(1).lastFrame(), this.input(2).lastFrame())\n\n    if number_of_frames > 0:\n        distance = (last_frame - first_frame) / (number_of_frames)\n        frame = first_frame + distance / 2\n\n        for x in range(number_of_frames):\n            int_frame = int(round(frame))\n            if int_frame not in frame_list:\n                frame_list.append(int_frame)\n\n            frame += distance\n\n    frange = nuke.FrameRanges(additional_frames.split(','))\n\n    for r in frange:\n        for f in r:\n            if f >= first_frame and f <= last_frame:\n                if f not in frame_list:\n                    frame_list.append(f)\n\n    frame_list.sort()\n\n    return frame_list\n\n\ndef _setup_for_multiframe(frame_list):\n    \"\"\" arranges all sample frames next to each other, starting at frame 0\n    and sets the frame number knob of the FrameBlend node\"\"\"\n\n    time_warp = nuke.toNode('TimeWarp1')\n    time_warp\['lookup'].clearAnimated()\n    time_warp\['lookup'].setAnimated()\n    anim_list = \[]\n\n    for n, frame in enumerate(frame_list):\n        anim_list.append(nuke.AnimationKey(n, frame))\n\n    anim = time_warp\['lookup'].animation(0)\n    anim.addKey(anim_list)\n\n    frame_blend = nuke.toNode('FrameBlend1')\n    frame_blend\['endframe'].setValue(len(frame_list)-1)\n\n\ndef _generate_sample_list(sample_count, sample_range, sample_radius):\n    \"\"\"generate a list of sample values spread equally between the\n    min and max values of the sample range\"\"\"\n\n    sample_list = \[]\n\n    for item in range(0, sample_count):\n        sample_list.append(float(item) / sample_count * (sample_range\[1] - sample_range\[0]) + sample_range\[0] + sample_radius)\n\n    return sample_list\n\n\ndef _get_sample_range(channel, channel_list, frame_list):\n    \"\"\" samples the minimum and maximum values of the given frame range and\n    sets the sample range to those values\"\"\"\n\n    curve_tool = nuke.toNode('CurveTool_Range')\n    min_knob = curve_tool\['minlumapixvalue']\n    max_knob = curve_tool\['maxlumapixvalue']\n\n    min_knob.setAnimated()\n    max_knob.setAnimated()\n\n    curve_tool\['channels'].setValue(channel)\n\n    nuke.execute(curve_tool, nuke.FrameRanges(frame_list))\n\n    index = channel_list.index(channel)\n    min_list = \[key.y for key in min_knob.animation(index).keys()]\n    max_list = \[key.y for key in max_knob.animation(index).keys()]\n\n    min_value = min(min_list)\n    max_value = max(max_list)\n\n    min_knob.clearAnimated()\n    max_knob.clearAnimated()\n    curve_tool\['minlumapixdata'].clearAnimated()\n    curve_tool\['maxlumapixdata'].clearAnimated()\n\n    return \[min_value, max_value]\n\n\ndef _sample_it(keyer, curve_tool, sample, sample_radius):\n    \"\"\"analyze the grain level per channel and sample value in the sample range\"\"\"\n\n    keyer\['temp_expr0'].setValue(str(sample - sample_radius))\n    keyer\['temp_expr1'].setValue(str(sample + sample_radius))\n\n    intensity_knob = curve_tool\['intensitydata']\n    intensity_knob.clearAnimated()\n    intensity_knob.setAnimated()\n\n    nuke.execute(curve_tool, nuke.frame(), nuke.frame())\n    sample_values = intensity_knob.value()\n    intensity_knob.clearAnimated()\n\n    return sample_values\n\n\ndef check_inputs(this):\n    if this.input(1) is None:\n        raise RuntimeError('no plate connected')\n\n    if this.input(2) is None:\n        raise RuntimeError('no degrained plate connected')\n\n    def format_tuple(node):\n        return node.format().width(), node.format().height(), node.format().pixelAspect()\n\n    if format_tuple(this.input(1)) != format_tuple(this.input(2)):\n        raise RuntimeError(\"Format missmatch: Make sure the formats of plate and degrained plate match.\")\n\n\ndef start(this):\n    \"\"\"let's do this!\"\"\"\n\n    check_inputs(this)\n\n    with this:\n        frame_list = _generate_frame_list(this)\n        _setup_for_multiframe(frame_list)\n        sample_count = _sample_count(this)\n\n        blank = base64.b64decode('cmVkIHtjdXJ2ZX0KZ3JlZW4ge2N1cnZlfQpibHVlIHtjdXJ2ZX0=').decode('ascii')\n\n        lut = nuke.toNode('Sampler1')\['lut']\n        lut.fromScript(blank)\n\n        channel_list = \['red', 'green', 'blue']\n\n        keyer = nuke.toNode('Expression2')\n        copy = nuke.toNode('Copy2')\n\n        curve_tool = nuke.toNode('CurveTool')\n        pixel = curve_tool\['ROI'].value()\[2] * curve_tool\['ROI'].value()\[3]\n\n        task = nuke.ProgressTask('Analysing...')\n        step = 100.0 / 3 / sample_count\n        progress = step\n\n        time_warp = nuke.toNode('TimeWarp1')\n        frame_blend = nuke.toNode('FrameBlend1')\n\n        time_warp\['disable'].setValue(False)\n        frame_blend\['disable'].setValue(False)\n\n        for channel in channel_list:\n            task.setMessage('\{\} range'.format(channel))\n\n            copy\['from0'].setValue('rgba.\{\}'.format(channel))\n\n            sample_range = _get_sample_range(channel, channel_list, frame_list)\n            sample_radius = (sample_range\[1] - sample_range\[0]) / sample_count / 2\n            sample_list = _generate_sample_list(sample_count, sample_range, sample_radius)\n\n            for sample in sample_list:\n                if task.isCancelled():\n                    return\n\n                task.setProgress(int(progress))\n\n                sample_values = _sample_it(keyer, curve_tool, sample, sample_radius)\n\n                task.setMessage('\{\} channel at \{\}'.format(channel, round(sample, 2)))\n\n                if sample_values\[3] * pixel >= 10:\n                    lut.setValueAt(sample_values\[0] / sample_values\[3], sample_values\[1] / sample_values\[3], channel_list.index(channel))\n\n                progress += step\n\n        time_warp\['lookup'].clearAnimated()\n        time_warp\['disable'].setValue(True)  # hopefully prevents slowing down the comp\n        frame_blend\['disable'].setValue(True)  # hopefully prevents slowing down the comp\n\n    del task\n\n\nstart(this)\n" +STARTLINE}
 addUserKnob {26 divider03 l " "}
 addUserKnob {41 analysis_mask l "analysis mask" t "Use this channel from the mask input to control what area of the plate will be analyzed.\n\nUsefull if the degrain is obviously bad in some areas." T ChannelMerge1.A}
 addUserKnob {6 invert_1 l invert -STARTLINE}
 addUserKnob {20 Adjust_tab l Adjust}
 addUserKnob {22 whatsthis l "What am I looking at?" T "nuke.message(\"After the analysis you'll see the sampled grain response curves here. On the x-axis is the brightness of the image and on the y-axis the grain intensity. Grain increases with brightness, so <strong>the slope of the curves should always be positive</strong> (they should always go up &#8599;).<br><br>The quality of the curves depends entirely on the quality of the degrain. If the curves look wrong (for example they go up and down), try to improve the degrain first. If they still look wrong and the resulting regrain doesn't work well enough, you can try to improve the curves here by deleting/correcting all points that don't follow an upwards trend.<br><br>You can also extend the curves (again: with an upwards trend) if the comp has values that don't exist in the plate.<br><br>Note: The curve is used for both the normalization as well as the adaptation of the grain, so it doesn't give direct control of the grain intensity.\")" +STARTLINE}
 addUserKnob {41 lut l "" +STARTLINE T Sampler1.lut}
 addUserKnob {20 Replace_tab l Replace}
 addUserKnob {6 external_grain l "use external grain" t "Use external grain from a second DasGrain, with the output set to 'normalised grain', to replace masked area.\nConnect it to the 'external grain' input of this DasGrain (it's a bit hidden on the left side of the node)." +STARTLINE}
 addUserKnob {26 divider04 l <strong>Scatter}
 addUserKnob {26 divider05 l <strong>Scatter +HIDDEN T "<span style=\"color:red\">Make sure you're sampling an area without any plate detail.</a>"}
 addUserKnob {6 scatter l activate t "Activates the scatter function. It generates a new grain based on the plate grain in the sample box using a Voronoi noise." +STARTLINE}
 addUserKnob {41 useGPUIfAvailable l "Use GPU if available" -STARTLINE T VoronoiScatter.useGPUIfAvailable}
 addUserKnob {15 box l "sample box" t "Define an area that is used as a source for the scatter function. The plate grain in this area should be as even as possible, without any visible detail."}
 box {100 100 500 300}
 addUserKnob {3 sample_frame l "sample frame" t "The frame at which the grain is being sampled. Is set automatically once the sample box is changed." +DISABLED}
 sample_frame 1
 addUserKnob {4 stereo l "stereo behaviour" t "randomize offset per view: same voronoy pattern for all views, but different offset\n\nrandomize pattern per view: different voronoy pattern for every view" M {none "randomize offset per view" "randomize pattern per view" ""}}
 addUserKnob {26 spacer06 l "" +STARTLINE T " "}
 addUserKnob {6 overlay l "overlay cell pattern" t "Overlay the cell pattern of the voronoy noise. Useful to check where the seams are and if distortion or blending is necessary." +STARTLINE}
 addUserKnob {7 cell_size l "cell size" t "Cell size of the scatter. Shoudn't be too small, as lower grain frequencies might break.\nCan't be too big either, to prevent it from breaking the border of the samplebox (will error if it does)." R 5 100}
 cell_size 40
 addUserKnob {26 spacer07 l "" +STARTLINE T " "}
 addUserKnob {20 concealer l "edge concealer" n 1}
 concealer 0
 addUserKnob {26 concealer_help l " " T "If you can see the voronoi pattern in the grain QC output,\nincrease the edge blend size."}
 addUserKnob {3 edge_blend_size l "edge blend size" t "Set the output to grain QC. If you see the cell seams, increase the edge blend size to conceal them.\n\nThis is a bit hacky and slow."}
 addUserKnob {26 tip l "" -STARTLINE T "sloooow - keep this below 3 if possible"}
 addUserKnob {26 distortion_help l " " T "\nDistortion might help as well, if somehow the straight\nseams are visible (you might want to toggle the overlay\nwhile adjusting)."}
 addUserKnob {7 amplitude R 0 50}
 addUserKnob {7 frequency R 0 50}
 frequency 15
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 divider06 l "" +STARTLINE}
 addUserKnob {41 replace_mask l "replace mask" t "Use this channel from the mask input to specify where you want to use scattered grain instead of the adapted plate grain." -STARTLINE T Merge9.maskChannelMask}
 addUserKnob {41 invert_mask_1 l invert -STARTLINE T Merge9.invert_mask}
 addUserKnob {20 GrainGroupEnd l "" +STARTLINE n -3}
 addUserKnob {20 Help_tab l Help}
 addUserKnob {26 basic_setup l "" +STARTLINE T "<font size=\"5\">Basic setup</font>"}
 addUserKnob {26 ""}
 addUserKnob {26 explanation l "" +STARTLINE T "<strong>Bold</strong> steps are always necessary"}
 addUserKnob {26 steps l "" +STARTLINE T "<br><strong>1. This should be the only regrain node in your comp.<br>2. Connect <i>plate</i>, <i>degrained plate</i> and <i>comp</i>.<br>&nbsp;&nbsp;&nbsp;&nbsp;The comp should be done on the degrained plate!</strong><br>3. Set the <i>luminance degrain amount</i>.<br><strong>4. Press the <i>Analyze</i> button.</strong><br>5. Correct the response curves in the <i>Adjust</i> tab.<br>6. Move the <i>sample box</i> to an area without any plate detail and activate <i>scatter</i>.<br>7. If necessary, activate <i>edge blend</i> and/or <i>distortion</i> to conceal seams."}
 addUserKnob {26 in_depth l "" +STARTLINE T "<br>For an in depth explanation of the steps, read the tooltips and check out this video:<br><a href=\"https://vimeo.com/284820390/\"><span style=\"color:#C8C8C8;\">https://vimeo.com/284820390</a>"}
 addUserKnob {26 pushthebutton l "" +STARTLINE T "<br><br>If the result is not as expected and you don't know why, push this button:"}
 addUserKnob {22 troubleshoot l Troubleshoot t HEEEEEEELP T "import base64\n\nmessages = \[]\n\nthis = nuke.thisNode()\n\n#########################\n\nif this.input(0) is None or this.input(1) is None or this.input(2) is None:\n    messages.append(\"<font color='red'><strong>ERROR</strong></font> Plate, degrained plate and comp need to be connected to the appropriate inputs.\")\n\n#########################\n\nelse:\n\n    def format_to_tuple(g):\n        \"\"\"returns (1024, 786, 2.0)\n        \"\"\"\n        return (g.format().width(), g.format().height(), g.format().pixelAspect())\n\n    format_set = set(\[\n        format_to_tuple(this.input(0)),\n        format_to_tuple(this.input(1)),\n        format_to_tuple(this.input(2)),\n        ])\n    if len(format_set) != 1:\n        messages.append(\"<font color='orange'><strong>WARNING</strong></font> Format missmatch: Make sure formats of plate, degrained plate and comp match.\")\n\n    if (this.input(1).firstFrame() != this.input(2).firstFrame()) or (this.input(1).lastFrame() != this.input(2).lastFrame()):\n        messages.append(\"<font color='orange'><strong>WARNING</strong></font> The frame ranges of plate and degrained plate don't match. Double check that they belong together.\")\n\n#########################\n\nmessages.append(\"Double check that plate and degrained plate haven't been modified in any way (paint, despill, etc).\")\n\n#########################\n\nif this\['luminance'].getValue() == 1:\n    messages.append(\"Are you working on a completely degrained plate? If not, you might have to set the luminance degrain amount.\")\n\n#########################\n\nblank = base64.b64decode('cmVkIHtjdXJ2ZX0KZ3JlZW4ge2N1cnZlfQpibHVlIHtjdXJ2ZX0=').decode('ascii')\n\nwith this:\n    Sampler = nuke.toNode('Sampler1')     \n    if Sampler\['lut'].toScript() == blank:\n        messages.append(\"<font color='red'><strong>ERROR</strong></font> You haven't pressed the Analyze button yet!\")\n\n#########################\n\nclass BadThings(Exception): pass\n\ndef thingy():\n    with this:\n        Sampler = nuke.toNode('Sampler1')\n        list = this\['lut'].toScript().replace('\}','').split('\\n')\n        for item in list:\n            sample_value = 0\n            for value in item.split(' '):\n                try:\n                    value == float(value)\n                    if value < sample_value:\n                        raise BadThings(\"<font color='orange'><strong>WARNING</strong></font> Check and fix the response curves. Their slopes should always be positive (the curves should always go up &#8599;).\")\n                        \n                    else:\n                        sample_value = value\n                except ValueError:\n                    # Ignore non-numeric things like x-values of \"x5.46\" and channel names like \"red\{\" etc\n                    pass\ntry:\n    thingy()\nexcept BadThings as e:\n    messages.append(str(e))\n    \n#########################\n\nif this\['scatter'].value() == True:\n    if this\['box'].getValue() == \[100.0, 100.0, 500.0, 300.0]:\n        messages.append(\"<font color='orange'><strong>WARNING</strong></font> Scatter has been activated, but the sample box is still in its default position. Are you sure that's a good area to sample?\")\n\n#########################\n\nmessages.append(\"Did you copy/paste DasGrain from another script? Make sure to reanalyze and to reset the sample area if you are using scatter.\")\n\n#########################\n\nif len(messages) > 0:\n    nuke.message(\"<font size=\\\"5\\\">Things worth checking</font><br><br>\"\n                               \"%s<br><br><br>If any of this doesn't make sense to you, it might be worth checking out the video on vimeo.\" % (\n                                  \"<hr>\".join(\"%s: %s\" % (i+1, m) for i, m in enumerate(messages))))\n" +STARTLINE}
 addUserKnob {26 dont_despair l "" +STARTLINE T "<br>If it still doesn't work and you're about to flip the table, send me a <a href=\"mailto:holtzf+nuke@gmail.com?subject=Help with DasGrain v1.7.8\"><span style=\"color:#C8C8C8;\">mail</a>.<br>I'm happy to help! :)"}
 addUserKnob {20 Info_tab l Info}
 addUserKnob {26 dasname l "" +STARTLINE T "<font size='5'>DasGrain</font> v1.8<br>"}
 addUserKnob {26 text_1 l "" +STARTLINE T "DasGrain makes regraining as simple as clicking a few buttons.<br>Follow the steps in the <i>Help</i> tab and you'll have a perfect\nregrain<br>in no time!"}
 addUserKnob {26 ""}
 addUserKnob {26 info l "" +STARTLINE T "Last change: 2021-03-07\n\n"}
 addUserKnob {26 name_1 l "" +STARTLINE T "Fabian Holtz"}
 addUserKnob {26 mail l "" +STARTLINE T "<a href=\"mailto:holtzf+nuke@gmail.com?subject=Help with DasGrain v1.7.8\"><span style=\"color:#C8C8C8;\">holtzf+nuke@gmail.com</a>"}
 addUserKnob {26 testimonial l "" +STARTLINE T "<br><br><br><i>&laquo;Das bringt Tr&auml;nen in meine Augen&raquo;</i><br>&mdash; anonymous<br><br>"}
 addUserKnob {26 ""}
 addUserKnob {26 credit l "" +STARTLINE T "<br>VoronoiScatter based on <a href=\"http://www.nukepedia.com/blink/image/voronoi/\"><span style=\"color:#C8C8C8;\">Ivan Busquets' implementation</a> of<br> libNoise's\nVoronoi generator"}
 addUserKnob {26 thanks l "" +STARTLINE T "<br>Special thanks to Ben Dickson for bearing with my questions and<br>problems and RSP comp for the valuable feedback."}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x7f7f7fff
  label "normalise grain"
  note_font_size 30
  xpos 170
  ypos 1662
  bdwidth 320
  bdheight 110
 }
 BackdropNode {
  inputs 0
  name BackdropNode11
  tile_color 0x7f7f7fff
  label "add grain"
  note_font_size 30
  xpos 830
  ypos 2766
  bdwidth 320
  bdheight 110
 }
 BackdropNode {
  inputs 0
  name BackdropNode13
  tile_color 0x7f7f7fff
  label scatter
  note_font_size 30
  xpos -50
  ypos 2022
  bdwidth 320
  bdheight 110
 }
 BackdropNode {
  inputs 0
  name BackdropNode14
  tile_color 0x7f7f7fff
  label "analyze grain"
  note_font_size 30
  xpos -159
  ypos 606
  bdwidth 319
  bdheight 877
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x7f7f7fff
  label "grain response curve"
  note_font_size 30
  xpos 610
  ypos 2574
  bdwidth 320
  bdheight 110
 }
 BackdropNode {
  inputs 0
  name BackdropNode3
  tile_color 0x7f7f7fff
  label QC
  note_font_size 30
  xpos 1050
  ypos 3222
  bdwidth 320
  bdheight 110
 }
 BackdropNode {
  inputs 0
  name BackdropNode4
  tile_color 0x7f7f7fff
  label "grain response curve"
  note_font_size 30
  xpos 610
  ypos 1422
  bdwidth 320
  bdheight 110
 }
 BackdropNode {
  inputs 0
  name BackdropNode5
  tile_color 0x7f7f7fff
  label "adapt grain"
  note_font_size 30
  xpos 170
  ypos 2574
  bdwidth 320
  bdheight 110
 }
 BackdropNode {
  inputs 0
  name BackdropNode6
  tile_color 0x7f7f7fff
  label "sample range"
  note_font_size 30
  xpos -490
  ypos 606
  bdwidth 320
  bdheight 110
 }
 BackdropNode {
  inputs 0
  name BackdropNode7
  tile_color 0x7f7f7fff
  label "luminance level"
  note_font_size 30
  xpos 280
  ypos -282
  bdwidth 760
  bdheight 685
 }
 BackdropNode {
  inputs 0
  name BackdropNode8
  tile_color 0x7f7f7fff
  label "plate grain"
  note_font_size 30
  xpos 170
  ypos 606
  bdwidth 320
  bdheight 110
 }
 BackdropNode {
  inputs 0
  name BackdropNode9
  tile_color 0x7f7f7fff
  label replace
  note_font_size 30
  xpos 60
  ypos 2191
  bdwidth 540
  bdheight 226
 }
 Input {
  inputs 0
  name DEGRAINED_PLATE
  label "\[value number]"
  note_font_size 30
  xpos 730
  ypos -896
  number 2
 }
 OCIOColorSpace {
  in_colorspace {{OCIOColorSpace1.in_colorspace}}
  out_colorspace {{OCIOColorSpace1.out_colorspace}}
  name OCIOColorSpace2
  xpos 730
  ypos -490
 }
 Dot {
  name Dot9
  xpos 764
  ypos -390
 }
set Naa498c00 [stack 0]
 Dot {
  name Dot28
  xpos 764
  ypos -198
 }
set Naa499000 [stack 0]
 Dot {
  name Dot32
  xpos 764
  ypos 234
 }
set Naa499400 [stack 0]
push $Naa499000
 Dot {
  name Dot27
  xpos 624
  ypos -198
 }
 Colorspace {
  colorspace_out YCbCr
  name Colorspace1
  xpos 590
  ypos -130
 }
 Dot {
  name Dot7
  xpos 624
  ypos -54
 }
set Naa4be000 [stack 0]
 Input {
  inputs 0
  name PLATE
  label "\[value number]"
  note_font_size 30
  xpos 290
  ypos -892
  number 1
 }
 Dot {
  name Dot50
  xpos 324
  ypos -726
 }
set Naa4be800 [stack 0]
 OCIOColorSpace {
  in_colorspace scene_linear
  out_colorspace scene_linear
  name OCIOColorSpace1
  xpos 290
  ypos -490
 }
 Dot {
  name Dot29
  xpos 324
  ypos -198
 }
set Naa4bf000 [stack 0]
 Dot {
  name Dot6
  xpos 464
  ypos -198
 }
 Colorspace {
  colorspace_out YCbCr
  name Colorspace2
  xpos 430
  ypos -130
 }
 Merge2 {
  inputs 2
  operation from
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge4
  xpos 430
  ypos -58
 }
 Multiply {
  channels rgb
  value {{"1 / parent.luminance - 1"} 0 0 0}
  name Multiply6
  xpos 430
  ypos 14
 }
 Dot {
  name Dot31
  xpos 464
  ypos 90
 }
push $Naa4be000
 Merge2 {
  inputs 2
  operation plus
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge5
  xpos 590
  ypos 86
 }
 Colorspace {
  colorspace_in YCbCr
  name Colorspace3
  xpos 590
  ypos 158
 }
 Merge2 {
  inputs 2
  operation from
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge6
  xpos 590
  ypos 230
 }
 Dot {
  name Dot35
  xpos 624
  ypos 306
 }
set Naa4ed400 [stack 0]
push $Naa499400
 Merge2 {
  inputs 2
  operation from
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge7
  xpos 730
  ypos 302
  disable {{"Multiply6.value.r == 0"}}
 }
 Dot {
  name Dot2
  xpos 764
  ypos 522
 }
set Naa4edc00 [stack 0]
 Dot {
  name Dot30
  xpos 764
  ypos 690
 }
set Nbb068000 [stack 0]
 Dot {
  name Dot55
  xpos 764
  ypos 1170
 }
set Nbb068400 [stack 0]
 Input {
  inputs 0
  name mask
  label "\[value number]"
  note_font_size 30
  xpos 1170
  ypos -896
  number 3
 }
 Dot {
  name Dot39
  xpos 1204
  ypos 258
 }
set Nbb068c00 [stack 0]
 Dot {
  name Dot26
  xpos 1204
  ypos 1074
 }
set Nbb069000 [stack 0]
 Invert {
  name Invert2
  xpos 180
  ypos 1064
  disable {{!parent.invert_1}}
 }
push $Nbb068000
push $Naa4bf000
 Merge2 {
  inputs 2
  operation from
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge27
  xpos 290
  ypos 686
 }
 Dot {
  name Dot3
  xpos 324
  ypos 786
 }
set Nbb069c00 [stack 0]
 Dot {
  name Dot5
  xpos 104
  ypos 786
 }
set Nbb08a000 [stack 0]
push $Nbb08a000
 Copy {
  inputs 2
  from0 {{{parent.Copy2.from0}}}
  to0 rgba.red
  name Copy3
  xpos 70
  ypos 848
 }
 Expression {
  expr0 abs(r)
  channel1 {none none none rgba.alpha}
  expr1 "r == 0"
  channel2 none
  channel3 none
  name Expression4
  xpos 70
  ypos 926
 }
set Nbb08a800 [stack 0]
push $Naa4edc00
 Colorspace {
  colorspace_out AlexaV3LogC
  name Colorspace5
  xpos 70
  ypos 518
 }
 Clamp {
  maximum_enable false
  name Clamp2
  xpos -40
  ypos 512
 }
 Dot {
  name Dot1
  xpos -116
  ypos 522
 }
set Nbb08b400 [stack 0]
 Dot {
  name Dot48
  xpos -116
  ypos 786
 }
set Nbb08b800 [stack 0]
push $Nbb08b800
 Copy {
  inputs 2
  from0 rgba.blue
  to0 rgba.red
  name Copy2
  xpos -150
  ypos 848
 }
 Expression {
  temp_name0 min
  temp_name1 max
  channel0 {none none none rgba.alpha}
  expr0 "r >= min && r <= max"
  channel1 none
  channel2 none
  channel3 none
  name Expression2
  xpos -150
  ypos 926
 }
 Dot {
  name Dot4
  xpos -116
  ypos 1002
 }
 ChannelMerge {
  inputs 2
  operation stencil
  name ChannelMerge2
  xpos -40
  ypos 985
 }
push $Nbb08a800
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos 70
  ypos 992
 }
 ChannelMerge {
  inputs 2
  A -rgba.green
  operation multiply
  name ChannelMerge1
  xpos 70
  ypos 1057
  disable {{!A}}
 }
 Copy {
  inputs 2
  from0 {{{parent.Copy2.from0}}}
  to0 rgba.green
  name Copy4
  xpos 70
  ypos 1160
 }
 Premult {
  channels {rgba.red rgba.green -rgba.blue none}
  name Premult1
  xpos 70
  ypos 1238
 }
 TimeWarp {
  lookup 1081
  time ""
  filter nearest
  name TimeWarp1
  xpos 70
  ypos 1286
  disable true
 }
 FrameBlend {
  channels {rgba.red rgba.green -rgba.blue rgba.alpha}
  startframe 0
  endframe 9
  userange true
  name FrameBlend1
  xpos 70
  ypos 1352
  disable true
 }
 CurveTool {
  avgframes 0
  channels {rgba.red rgba.green -rgba.blue rgba.alpha}
  ROI {0 0 {width} {height}}
  intensitydata {{curve}}
  name CurveTool
  xpos 70
  ypos 1424
 }
push $Nbb08b400
 Dot {
  name Dot16
  xpos -336
  ypos 522
 }
 CurveTool {
  operation "Max Luma Pixel"
  channels {-rgba.red -rgba.green rgba.blue none}
  ROI {0 0 {width} {height}}
  maxlumapixdata {{curve} {curve}}
  maxlumapixvalue {{curve}}
  minlumapixdata {{curve} {curve}}
  minlumapixvalue {{curve}}
  name CurveTool_Range
  xpos -370
  ypos 680
 }
 Sampler {
  inputs 0
  lut {red {curve}
    green {curve}
    blue {curve}}
  name Sampler1
  onCreate "n = nuke.thisNode()\nn\['sampler'].setEnabled(False)"
  knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\np = nuke.thisParent()\n\nif k.name() == 'lut':\n    with p:\n        for c in \['ColorLookup1','ColorLookup2']:\n           nuke.toNode(c)\['lut'].fromScript(k.toScript())"
  xpos 840
  ypos 1502
 }
push $Naa4be800
 Dot {
  name Dot51
  xpos 115
  ypos -726
 }
 Input {
  inputs 0
  name COMP
  label "\[value number]"
  note_font_size 30
  xpos 950
  ypos -896
 }
 Dot {
  name Dot49
  xpos 984
  ypos -605
 }
set Nfe19c00 [stack 0]
 Switch {
  inputs 2
  which {{parent.meta}}
  name Switch1
  xpos 81
  ypos -609
 }
 Dot {
  name Dot54
  xpos 115
  ypos -486
 }
 Dot {
  name Dot52
  xpos -685
  ypos -486
 }
 Dot {
  name Dot53
  xpos -685
  ypos 3762
 }
push $Nbb068c00
 Dot {
  name Dot40
  xpos 874
  ypos 258
 }
push $Naa4ed400
 Dot {
  name Dot34
  xpos 624
  ypos 378
 }
 Multiply {
  inputs 1+1
  channels rgb
  value 0
  maskChannelMask -rgba.red
  name Multiply1
  xpos 840
  ypos 374
 }
push $Nfe19c00
 OCIOColorSpace {
  in_colorspace {{OCIOColorSpace1.in_colorspace}}
  out_colorspace {{OCIOColorSpace1.out_colorspace}}
  name OCIOColorSpace3
  xpos 950
  ypos -490
 }
 Dot {
  name Dot44
  xpos 984
  ypos -390
 }
set Nfe74000 [stack 0]
 Merge2 {
  inputs 2
  operation from
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge8
  xpos 950
  ypos 374
  disable {{"Multiply6.value.r == 0"}}
 }
 Dot {
  name Dot18
  xpos 984
  ypos 2658
 }
set Nfe74800 [stack 0]
 ColorLookup {
  lut {master {}
    red {curve}
    green {curve}
    blue {curve}
    alpha {}}
  name ColorLookup2
  xpos 730
  ypos 2654
 }
push $Nbb069000
 Dot {
  name Dot38
  xpos 1204
  ypos 1842
 }
 Dot {
  name Dot37
  xpos 544
  ypos 1842
 }
 Dot {
  name Dot22
  xpos 544
  ypos 2271
 }
set Nfe75800 [stack 0]
 Dot {
  name Dot20
  xpos 544
  ypos 2391
 }
push $Nfe75800
 Dot {
  name Dot17
  xpos 434
  ypos 2271
 }
set Nbb0f2000 [stack 0]
 Dot {
  name Dot13
  xpos 214
  ypos 2271
 }
 Input {
  inputs 0
  name external_grain
  label "\[value number]"
  note_font_size 30
  xpos -150
  ypos 1716
  number 4
 }
 Dot {
  name Dot21
  xpos -116
  ypos 1938
 }
push $Nbb068400
 ColorLookup {
  channels rgb
  lut {master {}
    red {curve}
    green {curve}
    blue {curve}
    alpha {}}
  name ColorLookup1
  xpos 730
  ypos 1502
 }
 Dot {
  name Dot24
  xpos 764
  ypos 1746
 }
push $Nbb069c00
 Dot {
  name Dot33
  xpos 324
  ypos 1386
 }
 MergeExpression {
  inputs 2
  temp_name0 target
  temp_expr0 .01
  expr0 "Br * (target / Ar)"
  expr1 "Bg * (target / Ag)"
  expr2 "Bb * (target / Ab)"
  channel3 none
  name MergeExpression1
  xpos 290
  ypos 1742
 }
 Dot {
  name Dot15
  xpos 324
  ypos 1842
 }
set Nbb114000 [stack 0]
 Dot {
  name Dot25
  xpos 104
  ypos 1842
 }
 Switch {
  inputs 2
  which {{parent.external_grain}}
  name Switch2
  xpos 70
  ypos 1934
 }
 Group {
  name VoronoiScatter
  xpos 70
  ypos 2102
  disable {{!parent.scatter}}
  addUserKnob {20 User}
  addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T VoroNoise.useGPUIfAvailable}
  addUserKnob {41 vectorize l "Vectorize on CPU" -STARTLINE T VoroNoise.vectorize}
  addUserKnob {15 box}
  box {{parent.box x1004 0 x1036 -75} {parent.box x1004 100 x1036 120} {parent.box x1004 496 x1036 325} {parent.box x1004 916 x1036 320}}
  addUserKnob {3 sample_frame l "sample frame"}
  sample_frame {{parent.sample_frame}}
  addUserKnob {7 cell_size l "cell size" R 0 100}
  cell_size {{parent.cell_size}}
  addUserKnob {6 overlay_pattern l "overlay pattern" -STARTLINE}
  overlay_pattern {{parent.overlay}}
  addUserKnob {3 edge_blend_size l "edge blend size"}
  edge_blend_size {{parent.edge_blend_size}}
  addUserKnob {7 amplitude R 0 100}
  amplitude {{parent.amplitude}}
  addUserKnob {7 frequency R 0 100}
  frequency {{parent.frequency}}
  addUserKnob {41 VoroNoise_Seed l Seed T VoroNoise.VoroNoise_Seed}
 }
  Input {
   inputs 0
   name Input1
   xpos 180
   ypos -879
  }
  Dot {
   name Dot14
   xpos 214
   ypos -750
  }
set Nbb115000 [stack 0]
  Dot {
   name Dot16
   xpos 434
   ypos -750
  }
  Remove {
   name Remove1
   xpos 400
   ypos -687
  }
  Dot {
   name Dot6
   xpos 434
   ypos -606
  }
set Nbb115c00 [stack 0]
  Dot {
   name Dot15
   xpos 654
   ypos -606
  }
set Nbb136000 [stack 0]
  Dot {
   name Dot7
   xpos 874
   ypos -606
  }
  Noise {
   output {rgba.red -rgba.green -rgba.blue none}
   replace true
   size {{parent.frequency} {"parent.frequency * pixel_aspect"}}
   zoffset {{"x + 1000"}}
   gamma 1
   name Noise1
   xpos 840
   ypos -514
  }
  Noise {
   output {-rgba.red rgba.green -rgba.blue none}
   replace true
   size {{parent.Noise1.size} {parent.Noise1.size}}
   zoffset {{x}}
   gamma 1
   name Noise2
   xpos 840
   ypos -466
  }
  Clamp {
   name Clamp1
   xpos 840
   ypos -424
  }
  Dot {
   name Dot11
   xpos 874
   ypos -366
  }
push $Nbb136000
  BlinkScript {
   ProgramGroup 1
   KernelDescription "2 \"VoroNoise\" iterate pixelWise c117be128a07c11b6d82fd34148d66b3bcac41976ec9c2082affe38e890c2c0f 2 \"src\" Read Point \"dst\" Write Point 6 \"Frequency\" Float 1 AABIQg== \"Seed\" Int 1 AAAAAA== \"aspect ratio\" Float 1 AACAPw== \"width\" Int 1 AAAAAA== \"height\" Int 1 AAAAAA== \"Randomness\" Float 1 AAAAPw== 6 \"frequency\" 1 1 \"seed\" 1 1 \"aspect_ratio\" 1 1 \"width\" 1 1 \"height\" 1 1 \"randomness\" 1 1 0"
   kernelSource "// Voronoi.blink\n// A test implementation of libNoise's Voronoi generator using Blink\n// Ivan Busquets - August 2013\n// Modified for DasGrain by Fabian Holtz - April 2019\n\n#define X_NOISE_GEN  1619\n#define Y_NOISE_GEN  31337\n#define Z_NOISE_GEN  6971\n#define SEED_NOISE_GEN  1013\n#define SQRT_3 1.73205081\n\ninline int IntValueNoise3D (int x, int y, int z, int seed)\n\{\n  // All constants are primes and must remain prime in order for this noise\n  // function to work correctly.\n  int n = (\n      X_NOISE_GEN    * x\n    + Y_NOISE_GEN    * y\n    + Z_NOISE_GEN    * z\n    + SEED_NOISE_GEN * seed)\n    & 0x7fffffff;\n  n = (n >> 13) ^ n;\n  return (n * (n * n * 60493 + 19990303) + 1376312589) & 0x7fffffff;\n\}\n\ninline float ValueNoise3D (int x, int y, int z, int seed)\n\{\n  return 1.0 - ((float)IntValueNoise3D (x, y, z, seed) / 1073741824.0);\n\}\n\nkernel VoroNoise : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead> src;\n  Image<eWrite, eAccessPoint> dst;\n\nparam:\n  float frequency;\n  int seed;\n  float aspect_ratio;\n  int width;\n  int height;\n  float randomness;\n\n\n  void define() \{\n    defineParam(frequency, \"Frequency\", 50.0f);\n    defineParam(aspect_ratio, \"aspect ratio\", 1.0f);\n    defineParam(seed, \"Seed\", 0);\n    defineParam(randomness, \"Randomness\", 0.5f);\n  \}\n\n\n\n\n  void process(int2 pos) \{\n   float x = pos.x * aspect_ratio * frequency / width;\n   float y = pos.y * frequency / width;\n   int xInt = (x > 0.0) ? x : x - 1;\n   int yInt = (y > 0.0) ? y : y - 1;\n\n\n    float minDist = 2147483647.0;\n    float xCandidate = 0;\n    float yCandidate = 0;\n\n    float dist;\n\nfor (int yCur = yInt - 2; yCur <= yInt + 2; yCur++) \{\n      for (int xCur = xInt - 2; xCur <= xInt + 2; xCur++) \{\n\n        // Calculate the position and distance to the seed point inside of\n        // this unit cube. Limited by the randomness value\n        float xPos = xCur + (ValueNoise3D (xCur, yCur, 0, seed    ) + 1 ) * randomness + (1-randomness) - 1;\n        float yPos = yCur + (ValueNoise3D (xCur, yCur, 0, seed + 1) + 1 ) * randomness + (1-randomness) - 1;\n\n        float xDist = xPos - x;\n        float yDist = yPos - y;\n\n        dist = pow(xDist, 2) + pow(yDist, 2);\n        if (dist < minDist) \{\n          // This seed point is closer to any others found so far, so record\n          // this seed point.\n          minDist = dist;\n          xCandidate = xPos;\n          yCandidate = yPos;\n\t\}\n    \}\n\}\n\n    SampleType(dst) sample(0.0f);\n\n    sample.x = xCandidate / aspect_ratio / frequency;\n    sample.y = yCandidate / height * width / frequency;\n    sample.z = 0;\n\n    dst() = sample;\n\}\n\};"
   rebuild ""
   VoroNoise_Frequency {{"width / parent.cell_size"}}
   VoroNoise_Seed {{"(x + (parent.parent.stereo == 2 ? \[lsearch \[value root.views] \[view]] / 2 : 0)) * 5"}}
   "VoroNoise_aspect ratio" {{pixel_aspect}}
   VoroNoise_width {{width}}
   VoroNoise_height {{height}}
   rebuild_finalise ""
   name VoroNoise
   xpos 620
   ypos -520
  }
  Copy {
   inputs 2
   from0 rgba.red
   to0 forward.u
   from1 rgba.green
   to1 forward.v
   name Copy1
   xpos 620
   ypos -382
   disable {{"parent.amplitude == 0"}}
  }
  IDistort {
   uv forward
   uv_offset 0.5
   uv_scale {{parent.amplitude} {"uv_scale.w * pixel_aspect"}}
   filter impulse
   name IDistort1
   xpos 620
   ypos -280
   disable {{"parent.amplitude == 0"}}
  }
  Dot {
   name Dot5
   xpos 654
   ypos -246
  }
  NoTimeBlur {
   rounding floor
   name NoTimeBlur3
   xpos 620
   ypos -154
  }
  Transform {
   translate {{"floor((x * size) % 1 * (size)) - int(size / 2)"} {"floor(x % 1 * (size)) - int(size/2)"}}
   filter impulse
   black_outside false
   name Transform1
   xpos 620
   ypos -58
   disable {{"parent.edge_blend_size < 1"}}
   addUserKnob {20 User}
   addUserKnob {3 size}
   size {{"parent.edge_blend_size + 1"}}
  }
  Dot {
   name Dot9
   xpos 654
   ypos 42
  }
set Nbb173000 [stack 0]
push $Nbb115c00
  Expression {
   expr0 "(x + .5) / width"
   expr1 "(y + .5) / height"
   expr2 0
   name STMapGenerator
   xpos 400
   ypos -514
  }
  NoTimeBlur {
   rounding floor
   name NoTimeBlur2
   xpos 400
   ypos -154
  }
  Merge2 {
   inputs 2
   operation from
   Achannels {rgba.red rgba.green -rgba.blue none}
   Bchannels {rgba.red rgba.green -rgba.blue none}
   output {rgba.red rgba.green -rgba.blue none}
   name Merge2
   xpos 400
   ypos 38
  }
  Dot {
   name Dot10
   xpos 434
   ypos 210
  }
push $Nbb173000
  Expression {
   temp_name0 view_index
   temp_expr0 "parent.parent.stereo == 1 ? \[lsearch \[value root.views] \[view]] / 2 : 0"
   expr0 "random((r + view_index) * 1000000, 0) * (maxx - minx) + minx"
   expr1 "random((g + view_index) * 1000000, 0) * (maxy - miny) + miny"
   channel2 none
   channel3 none
   name Expression3
   xpos 620
   ypos 110
   addUserKnob {20 User}
   addUserKnob {7 frequency R 0 100}
   frequency {{parent.parent.cell_size}}
   addUserKnob {7 multiplier R 0 3}
   multiplier 0.5
   addUserKnob {15 shrink}
   shrink {{"frequency * multiplier + ceil(parent.edge_blend_size / 2) + IDistort1.uv_scale.w / 2"} {"frequency * multiplier + ceil(parent.edge_blend_size / 2) + IDistort1.uv_scale.h / 2"} {"frequency * multiplier + floor(parent.edge_blend_size / 2) + IDistort1.uv_scale.w / 2"} {"frequency * multiplier + floor(parent.edge_blend_size / 2) + IDistort1.uv_scale.h / 2"}}
   addUserKnob {26 ""}
   addUserKnob {7 minx}
   minx {{"(parent.box.x + shrink.x + .5) / width"}}
   addUserKnob {7 maxx}
   maxx {{"(parent.box.r - shrink.r - .5) / width"}}
   addUserKnob {7 miny}
   miny {{"(parent.box.y + shrink.y + .5) / height"}}
   addUserKnob {7 maxy}
   maxy {{"(parent.box.t - shrink.t - .5) / height"}}
  }
  Merge2 {
   inputs 2
   operation plus
   Achannels {rgba.red rgba.green -rgba.blue none}
   Bchannels {rgba.red rgba.green -rgba.blue none}
   output {rgba.red rgba.green -rgba.blue none}
   name Merge3
   xpos 620
   ypos 206
  }
  Expression {
   expr0 "(r + (maxx - minx) - minx) % (maxx - minx) + minx"
   expr1 "(g + (maxy - miny) - miny) % (maxy - miny) + miny"
   channel2 none
   channel3 none
   name Expression7
   xpos 620
   ypos 278
   addUserKnob {20 User}
   addUserKnob {7 minx}
   minx {{"(parent.box.x + rint(x % 1 * parent.edge_blend_size) + .5) / width"}}
   addUserKnob {7 maxx}
   maxx {{"(parent.box.r + rint(x % 1 * parent.edge_blend_size) - .5) / width"}}
   addUserKnob {7 miny}
   miny {{"(parent.box.y + rint(x % 1 * parent.edge_blend_size) + .5) / height"}}
   addUserKnob {7 maxy}
   maxy {{"(parent.box.t + rint(x % 1 * parent.edge_blend_size) - .5) / height"}}
  }
  Dot {
   name Dot3
   xpos 654
   ypos 354
  }
set Naa557000 [stack 0]
  Dot {
   name Dot13
   xpos 654
   ypos 546
  }
push $Naa557000
  Dot {
   name Dot8
   xpos 874
   ypos 354
  }
  Blur {
   channels rgb
   size {{pixel_aspect} 1}
   name Blur1
   label "\[value size]"
   xpos 840
   ypos 440
  }
  Difference {
   inputs 2
   name Difference2
   xpos 840
   ypos 536
  }
  Expression {
   channel0 {none none none rgba.alpha}
   expr0 "a > 1e-9"
   channel1 none
   channel2 none
   channel3 none
   name Expression2
   xpos 840
   ypos 614
  }
  Shuffle {
   red alpha
   green alpha
   blue alpha
   name Shuffle1
   label "\[value in]:\[value out]"
   xpos 840
   ypos 680
  }
  Dot {
   name Dot4
   xpos 874
   ypos 762
  }
push $Naa557000
push $Nbb115000
  FrameHold {
   firstFrame {{parent.sample_frame}}
   name FrameHold1
   xpos 180
   ypos -256
  }
  NoTimeBlur {
   rounding floor
   name NoTimeBlur1
   xpos 180
   ypos -154
  }
  STMap {
   inputs 2
   channels rgb
   uv rgb
   filter impulse
   name STMap1
   xpos 180
   ypos 350
  }
set Naa585400 [stack 0]
  TimeBlur {
   divisions {{"max(Transform1.size == 1 ? 2 : pow2(Transform1.size), 1)"}}
   shutter 1
   shuttercustomoffset {{"1 / divisions / 2"}}
   name TimeBlur1
   xpos 180
   ypos 446
   disable {{"parent.edge_blend_size < 1"}}
  }
set Naa585800 [stack 0]
push $Naa585400
  Dot {
   name Dot1
   xpos -6
   ypos 354
  }
  Difference {
   inputs 2
   name Difference1
   xpos -40
   ypos 440
  }
  Expression {
   channel0 {none none none rgba.alpha}
   expr0 "a > 1e-10"
   channel1 none
   channel2 none
   channel3 none
   name Expression1
   xpos -40
   ypos 494
  }
  Blur {
   channels alpha
   size {{parent.parent.edge_blend_size}}
   name Blur2
   xpos -40
   ypos 536
  }
  Grade {
   channels alpha
   blackpoint 0.5
   white_clamp true
   name Grade2
   xpos -40
   ypos 584
  }
  Dot {
   name Dot2
   xpos -6
   ypos 666
  }
push $Naa585800
  Grade {
   inputs 1+1
   white 1.4
   black_clamp false
   name Grade1
   xpos 180
   ypos 662
   disable {{"parent.edge_blend_size < 1"}}
  }
  Merge2 {
   inputs 2
   Achannels rgb
   Bchannels rgb
   output rgb
   name Merge1
   xpos 180
   ypos 758
   disable {{!parent.overlay_pattern}}
  }
  Assert {
   expression {{"Expression3.maxx > Expression3.minx && Expression3.maxy > Expression3.miny"}}
   message "increase sample box size or decrease cell size"
   name error
   xpos 180
   ypos 854
  }
  Output {
   name Output1
   xpos 180
   ypos 950
  }
 end_group
 Multiply {
  inputs 1+1
  channels rgb
  value 1.8
  maskChannelMask {{{parent.Merge9.maskChannelMask}}}
  invert_mask {{!Merge9.invert_mask}}
  name Multiply7
  xpos 70
  ypos 2315
  disable {{"!maskChannelMask || !\[exists parent.input3.name]"}}
 }
 Dot {
  name Dot23
  xpos 104
  ypos 2391
 }
push $Nbb0f2000
push $Nbb114000
 Multiply {
  inputs 1+1
  channels rgb
  value 1.8
  maskChannelMask {{{parent.Merge9.maskChannelMask}}}
  invert_mask {{parent.Merge9.invert_mask}}
  name Multiply2
  xpos 290
  ypos 2315
  disable {{"!maskChannelMask || (!parent.scatter && !parent.external_grain)"}}
 }
 Merge2 {
  inputs 2+1
  operation copy
  Achannels rgb
  Bchannels rgb
  output rgb
  maskChannelMask -rgba.alpha
  name Merge9
  xpos 290
  ypos 2387
  disable {{"!(parent.scatter || parent.external_grain)"}}
 }
 Dot {
  name Dot11
  xpos 324
  ypos 2490
 }
set N7982d400 [stack 0]
 MergeExpression {
  inputs 2
  temp_name0 reverse
  temp_expr0 "1 / MergeExpression1.temp_expr0"
  expr0 "Br * Ar * reverse"
  expr1 "Bg * Ag * reverse"
  expr2 "Bb * Ab * reverse"
  name MergeExpression2
  xpos 290
  ypos 2654
 }
 Dot {
  name Dot8
  xpos 324
  ypos 2850
 }
push $Nfe74800
 Merge2 {
  inputs 2
  operation plus
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge3
  xpos 950
  ypos 2846
 }
 Dot {
  name Dot42
  xpos 984
  ypos 3018
 }
set N79856400 [stack 0]
 OCIOColorSpace {
  in_colorspace {{OCIOColorSpace1.out_colorspace}}
  out_colorspace {{OCIOColorSpace1.in_colorspace}}
  name OCIOColorSpace4
  xpos 950
  ypos 3086
 }
 Dot {
  name Dot19
  xpos 984
  ypos 3162
 }
set N79856c00 [stack 0]
 Dot {
  name Dot41
  xpos 1204
  ypos 3162
 }
set N79857000 [stack 0]
 Dot {
  name Dot36
  xpos 1314
  ypos 3162
 }
 Blur {
  channels rgb
  size 1
  name Blur1
  xpos 1280
  ypos 3254
 }
push $N79857000
 Merge2 {
  inputs 2
  operation difference
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge10
  xpos 1170
  ypos 3254
 }
 Multiply {
  channels rgb
  value 50
  name Multiply3
  xpos 1170
  ypos 3302
 }
 Dot {
  name Dot43
  xpos 1204
  ypos 3402
 }
push $Nfe74000
 Dot {
  name Dot45
  xpos 1424
  ypos -390
 }
push $N79856400
 Merge2 {
  inputs 2
  operation from
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge11
  xpos 1390
  ypos 3014
 }
 Dot {
  name Dot46
  xpos 1424
  ypos 3522
 }
push $N7982d400
 Dot {
  name Dot14
  xpos 104
  ypos 2490
 }
 Dot {
  name Dot12
  xpos 104
  ypos 3402
 }
push $Naa498c00
 Dot {
  name Dot47
  xpos -556
  ypos -390
 }
push $Naa4bf000
 Merge2 {
  inputs 2
  operation from
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge12
  xpos -590
  ypos -202
 }
 Dot {
  name Dot10
  xpos -556
  ypos 3522
 }
push $N79856c00
 Switch {
  inputs 5
  which {{output}}
  name Output
  xpos 950
  ypos 3656
  addUserKnob {20 User}
  addUserKnob {4 output M {"regrained comp" "plate grain" "normalised grain" "adapted grain" "grain QC"}}
 }
 CopyMetaData {
  inputs 2
  mergeMode "Meta only"
  name CopyMetaData1
  xpos 950
  ypos 3758
 }
 Output {
  name Output1
  xpos 950
  ypos 3854
 }
end_group
Crop {
 box {0 0 2048 1556}
 name Crop1
 selected true
 xpos -4104
 ypos 12987
}
Remove {
 operation keep
 channels rgb
 name Remove3
 selected true
 xpos -4104
 ypos 13030
}
push $Nbab61000
push $Nbab60800
Dot {
 name Dot98
 selected true
 xpos -4510
 ypos 12919
}
Group {
 inputs 2
 name DegrainHelper1
 help "The degrained plate has to be completely degrained.\n\nThe slider controls how much luminance grain will be present in the output."
 tile_color 0x7f7f7fff
 selected true
 xpos -4324
 ypos 12916
 addUserKnob {20 User}
 addUserKnob {7 luma_mix l "luminance degrain amount"}
 luma_mix 0.8
}
 Input {
  inputs 0
  name PLATE
  xpos -590
  ypos -250
  number 1
 }
 Colorspace {
  colorspace_out YCbCr
  name Colorspace2
  xpos -590
  ypos -178
 }
 Dot {
  name Dot25
  xpos -556
  ypos -126
 }
 Input {
  inputs 0
  name DEGRAINED_PLATE
  xpos -700
  ypos -250
 }
 Colorspace {
  colorspace_out YCbCr
  name Colorspace1
  xpos -700
  ypos -178
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 rgba.red
  mix {{1-parent.luma_mix}}
  name Copy1
  xpos -700
  ypos -136
 }
 Colorspace {
  colorspace_in YCbCr
  name Colorspace3
  xpos -700
  ypos -82
 }
 Output {
  name Output1
  xpos -700
  ypos -10
 }
end_group
StickyNote {
 inputs 0
 name StickyNote7
 tile_color 0xff
 label "VERSIONS\nBELOW"
 note_font "Verdana Bold"
 note_font_size 20
 selected true
 xpos -4651
 ypos 13271
}
