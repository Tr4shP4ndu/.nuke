set cut_paste_input [stack 0]
version 14.0 v4
BackdropNode {
inputs 0
name BackdropNode42
tile_color 0x7f0001
label "<center><img src=\"Keyer.png\"> Key without Alpha"
note_font "Verdana Bold"
note_font_size 50
selected true
xpos -8055
ypos 7266
bdwidth 891
bdheight 1288
}
BackdropNode {
inputs 0
name BackdropNode43
tile_color 0x7f0001
label "<center><img src=\"Keyer.png\"> Multiplicative"
note_font "Verdana Bold"
note_font_size 50
selected true
xpos -6937
ypos 7186
bdwidth 2942
bdheight 1386
}
BackdropNode {
inputs 0
name BackdropNode59
tile_color 0x7f0001
label "<center><img src=\"Keyer.png\"> Addivitve"
note_font "Verdana Bold"
note_font_size 50
selected true
xpos -3934
ypos 7186
bdwidth 2942
bdheight 1386
}
BackdropNode {
inputs 0
name BackdropNode62
tile_color 0x7f0001
label "<center><img src=\"Keyer.png\"> Multiplicative"
note_font "Verdana Bold"
note_font_size 50
selected true
xpos -6928
ypos 8709
bdwidth 2942
bdheight 1386
}
BackdropNode {
inputs 0
name BackdropNode66
knobChanged "try:\n    node=nuke.thisNode()\n    knob=nuke.thisKnob()\n    name=knob.name()\n\n    def updateKnobs():\n        nodeWidth=node\['bdwidth'].getValue()\n        nodeHeight=node\['bdheight'].getValue()\n        node\['sizeNode'].setValue(\[int(nodeWidth),int(nodeHeight)])\n        node\['node_position_x'].setValue(int(node\['xpos'].value()))\n        node\['node_position_y'].setValue(int(node\['ypos'].value()))\n        node\['zorder'].setValue(int(node\['z_order'].getValue()))\n        node\['font_size'].setValue(int(node\['note_font_size'].getValue()))\n        node\['oz_appearance'].setValue( node\['appearance'].value() )\n        node\['oz_border_width'].setValue( node\['border_width'].value() )\n        #node\['fontColor'].setValue(int(node\['note_font_color'].getValue()))\n\n    def updateLabelKnob():\n        curLabel = node\['label'].getValue()\n        if '<p align=center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=center>', ''))\n            node\['alignment'].setValue(1)\n        elif '<p align=right>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=right>', ''))\n            node\['alignment'].setValue(2)\n        elif '<center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<center>', ''))\n            node\['alignment'].setValue(1)\n        else:\n            node\['text'].setValue(curLabel)\n            node\['alignment'].setValue(0)\n\n    ### OPENING SETUP\n    if name=='showPanel':\n        updateKnobs()\n        updateLabelKnob()\n\n    ### UPDATE STYLE\n    if name in \['oz_appearance', 'oz_border_width']:\n        node\['appearance'].setValue( node\['oz_appearance'].value() )\n        node\['border_width'].setValue( node\['oz_border_width'].value() )\n\n    ### CHANGE THE SIZE OF THE NODE\n    if name=='sizeNode':\n        node\['bdwidth'].setValue(int(node\['sizeNode'].getValue()\[0]))\n        node\['bdheight'].setValue(int(node\['sizeNode'].getValue()\[1]))\n\n    ### POSITION\n    if name=='node_position_x' or name=='node_position_y':\n        node.setXYpos(int(node\['node_position_x'].getValue()),int(node\['node_position_y'].getValue()))\n\n    ### ZORDER\n    if name=='zorder':\n        node\['z_order'].setValue(node\['zorder'].getValue())\n\n    ### UPDATE THE 'CURRENT SIZE' AND ORDER\n    #if name=='bdwidth' or name=='bdheight' or name=='z_order':\n    if name in \['bdwidth', 'bdheight', 'z_order']:\n        updateKnobs()\n\n    ### UPDATE LABEL\n    title = node\['name'].value()\n    text = node\['text'].value()\n\n    if name in \['text', 'alignment', 'title']:\n        if text=='':\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+title\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+title\n            else:\n                newLabel=title\n        else:\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+text\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+text\n            else:\n                newLabel=text\n\n        node\['label'].setValue(newLabel)\n\n    if name==\"font_size\":\n        new_font_size = node\[\"font_size\"].value()\n        node\['note_font_size'].setValue(new_font_size)\n\n    del newLabel\n\nexcept:\n    pass\n"
tile_color 0x3a413fff
label "Screen Clean"
note_font_size 50
selected true
xpos -864
ypos 7187
bdwidth 754
bdheight 1391
addUserKnob {20 Settings}
addUserKnob {43 text l Text}
text "Screen Clean"
addUserKnob {7 font_size l "Font Size" R 10 100}
font_size 50
addUserKnob {4 alignment l "" -STARTLINE M {left center right}}
addUserKnob {26 divider1 l "" +STARTLINE}
addUserKnob {26 S01 l " " T " "}
addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import random\nn=nuke.thisNode()\nr,g,b=\[(float(random.randint( 20, 40)))/100,(float(random.randint( 10, 50)))/100,(float(random.randint( 15, 60)))/100]\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (r*255,g*255,b*255,1),16) )\n"}
addUserKnob {22 red l " <img src=\"F_r.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.77, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 orange l " <img src=\"F_o.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 yellow l " <img src=\"F_y.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 green l " <img src=\"F_g.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 cyan l " <img src=\"F_c.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 blue l " <img src=\"F_b.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.7, 0.76]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 darkblue l " <img src=\"F_db.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.74, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 magenta l " <img src=\"F_m.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.74, 0.65]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 pink l " <img src=\"F_p.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.74, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {26 S08 l " " T " "}
addUserKnob {4 oz_appearance l appearance -STARTLINE M {Fill Border}}
addUserKnob {7 oz_border_width l width -STARTLINE R 0 10}
oz_border_width 2
addUserKnob {26 divider2 l "" +STARTLINE}
addUserKnob {26 S02 l " " T " "}
addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\ngrow(n,50)"}
addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\nshrink(n,50)"}
addUserKnob {26 S03 l " " -STARTLINE T "     "}
addUserKnob {22 encompassSelectedNodes l " <img src=\"oz_encompass.png\">" -STARTLINE T "this = nuke.thisNode()\npadding = this\['sides'].getValue()\nif this.isSelected:\n    this.setSelected(False)\nselNodes = nuke.selectedNodes()\n        \ndef nodeIsInside (node, backdropNode):\n    # Returns true if node geometry is inside backdropNode otherwise returns false\n    topLeftNode = \[node.xpos(), node.ypos()]\n    topLeftBackDrop = \[backdropNode.xpos(), backdropNode.ypos()]\n    bottomRightNode = \[node.xpos() + node.screenWidth(), node.ypos() + node.screenHeight()]\n    bottomRightBackdrop = \[backdropNode.xpos() + backdropNode.screenWidth(), backdropNode.ypos() + backdropNode.screenHeight()]\n                    \n    topLeft = ( topLeftNode\[0] >= topLeftBackDrop\[0] ) and ( topLeftNode\[1] >= topLeftBackDrop\[1] )\n    bottomRight = ( bottomRightNode\[0] <= bottomRightBackdrop\[0] ) and ( bottomRightNode\[1] <= bottomRightBackdrop\[1] )\n                    \n    return topLeft and bottomRight\n\nif not selNodes:\n    nuke.message('Some nodes should be selected')\nelse:\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in selNodes])\n    bdY = min(\[node.ypos() for node in selNodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in selNodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in selNodes]) - bdY\n                        \n    zOrder = 0\n    selectedBackdropNodes = nuke.selectedNodes( \"BackdropNode\" )\n\n    #if there are backdropNodes selected put the new one immediately behind the farthest one\n                \n    if len( selectedBackdropNodes ):\n        zOrder = min( \[node.knob( \"z_order\" ).value() for node in selectedBackdropNodes] ) - 1\n    else :\n        #otherwise (no backdrop in selection) find the nearest backdrop if exists and set the new one in front of it\n        nonSelectedBackdropNodes = nuke.allNodes(\"BackdropNode\")\n        for nonBackdrop in selNodes:\n            for backdrop in nonSelectedBackdropNodes:\n                if nodeIsInside( nonBackdrop, backdrop ):\n                    zOrder = max( zOrder, backdrop.knob( \"z_order\" ).value() + 1 )\n    \n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-padding, -(padding+70), padding, padding)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    this\['xpos'].setValue(bdX)\n    this\['bdwidth'].setValue(bdW)\n    this\['ypos'].setValue(bdY)\n    this\['bdheight'].setValue(bdH)\n    this\['z_order'].setValue(zOrder)\n"}
addUserKnob {26 S04 l " " -STARTLINE T " "}
addUserKnob {3 sides l "" -STARTLINE}
sides 50
addUserKnob {26 divider3 l "" +STARTLINE}
addUserKnob {26 S05 l " " -STARTLINE T " "}
addUserKnob {26 pos_text l Position -STARTLINE T " "}
addUserKnob {3 node_position_x l x -STARTLINE}
addUserKnob {3 node_position_y l y -STARTLINE}
addUserKnob {26 S06 l " " T " "}
addUserKnob {14 sizeNode l Size -STARTLINE R 0 100}
sizeNode {0 0}
addUserKnob {26 S07 l " " -STARTLINE T "     "}
addUserKnob {3 zorder l "Z Order" -STARTLINE}
}
BackdropNode {
inputs 0
name BackdropNode67
knobChanged "try:\n    node=nuke.thisNode()\n    knob=nuke.thisKnob()\n    name=knob.name()\n\n    def updateKnobs():\n        nodeWidth=node\['bdwidth'].getValue()\n        nodeHeight=node\['bdheight'].getValue()\n        node\['sizeNode'].setValue(\[int(nodeWidth),int(nodeHeight)])\n        node\['node_position_x'].setValue(int(node\['xpos'].value()))\n        node\['node_position_y'].setValue(int(node\['ypos'].value()))\n        node\['zorder'].setValue(int(node\['z_order'].getValue()))\n        node\['font_size'].setValue(int(node\['note_font_size'].getValue()))\n        node\['oz_appearance'].setValue( node\['appearance'].value() )\n        node\['oz_border_width'].setValue( node\['border_width'].value() )\n        #node\['fontColor'].setValue(int(node\['note_font_color'].getValue()))\n\n    def updateLabelKnob():\n        curLabel = node\['label'].getValue()\n        if '<p align=center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=center>', ''))\n            node\['alignment'].setValue(1)\n        elif '<p align=right>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=right>', ''))\n            node\['alignment'].setValue(2)\n        elif '<center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<center>', ''))\n            node\['alignment'].setValue(1)\n        else:\n            node\['text'].setValue(curLabel)\n            node\['alignment'].setValue(0)\n\n    ### OPENING SETUP\n    if name=='showPanel':\n        updateKnobs()\n        updateLabelKnob()\n\n    ### UPDATE STYLE\n    if name in \['oz_appearance', 'oz_border_width']:\n        node\['appearance'].setValue( node\['oz_appearance'].value() )\n        node\['border_width'].setValue( node\['oz_border_width'].value() )\n\n    ### CHANGE THE SIZE OF THE NODE\n    if name=='sizeNode':\n        node\['bdwidth'].setValue(int(node\['sizeNode'].getValue()\[0]))\n        node\['bdheight'].setValue(int(node\['sizeNode'].getValue()\[1]))\n\n    ### POSITION\n    if name=='node_position_x' or name=='node_position_y':\n        node.setXYpos(int(node\['node_position_x'].getValue()),int(node\['node_position_y'].getValue()))\n\n    ### ZORDER\n    if name=='zorder':\n        node\['z_order'].setValue(node\['zorder'].getValue())\n\n    ### UPDATE THE 'CURRENT SIZE' AND ORDER\n    #if name=='bdwidth' or name=='bdheight' or name=='z_order':\n    if name in \['bdwidth', 'bdheight', 'z_order']:\n        updateKnobs()\n\n    ### UPDATE LABEL\n    title = node\['name'].value()\n    text = node\['text'].value()\n\n    if name in \['text', 'alignment', 'title']:\n        if text=='':\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+title\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+title\n            else:\n                newLabel=title\n        else:\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+text\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+text\n            else:\n                newLabel=text\n\n        node\['label'].setValue(newLabel)\n\n    if name==\"font_size\":\n        new_font_size = node\[\"font_size\"].value()\n        node\['note_font_size'].setValue(new_font_size)\n\n    del newLabel\n\nexcept:\n    pass\n"
tile_color 0x2e292eff
label "Spill Supress\nEdges"
note_font_size 50
selected true
xpos 114
ypos 7220
bdwidth 482
bdheight 1091
addUserKnob {20 Settings}
addUserKnob {43 text l Text}
text "Spill Supress\nEdges"
addUserKnob {7 font_size l "Font Size" R 10 100}
font_size 50
addUserKnob {4 alignment l "" -STARTLINE M {left center right}}
addUserKnob {26 divider1 l "" +STARTLINE}
addUserKnob {26 S01 l " " T " "}
addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import random\nn=nuke.thisNode()\nr,g,b=\[(float(random.randint( 20, 40)))/100,(float(random.randint( 10, 50)))/100,(float(random.randint( 15, 60)))/100]\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (r*255,g*255,b*255,1),16) )\n"}
addUserKnob {22 red l " <img src=\"F_r.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.77, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 orange l " <img src=\"F_o.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 yellow l " <img src=\"F_y.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 green l " <img src=\"F_g.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 cyan l " <img src=\"F_c.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 blue l " <img src=\"F_b.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.7, 0.76]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 darkblue l " <img src=\"F_db.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.74, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 magenta l " <img src=\"F_m.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.74, 0.65]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 pink l " <img src=\"F_p.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.74, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {26 S08 l " " T " "}
addUserKnob {4 oz_appearance l appearance -STARTLINE M {Fill Border}}
addUserKnob {7 oz_border_width l width -STARTLINE R 0 10}
oz_border_width 2
addUserKnob {26 divider2 l "" +STARTLINE}
addUserKnob {26 S02 l " " T " "}
addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\ngrow(n,50)"}
addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\nshrink(n,50)"}
addUserKnob {26 S03 l " " -STARTLINE T "     "}
addUserKnob {22 encompassSelectedNodes l " <img src=\"oz_encompass.png\">" -STARTLINE T "this = nuke.thisNode()\npadding = this\['sides'].getValue()\nif this.isSelected:\n    this.setSelected(False)\nselNodes = nuke.selectedNodes()\n        \ndef nodeIsInside (node, backdropNode):\n    # Returns true if node geometry is inside backdropNode otherwise returns false\n    topLeftNode = \[node.xpos(), node.ypos()]\n    topLeftBackDrop = \[backdropNode.xpos(), backdropNode.ypos()]\n    bottomRightNode = \[node.xpos() + node.screenWidth(), node.ypos() + node.screenHeight()]\n    bottomRightBackdrop = \[backdropNode.xpos() + backdropNode.screenWidth(), backdropNode.ypos() + backdropNode.screenHeight()]\n                    \n    topLeft = ( topLeftNode\[0] >= topLeftBackDrop\[0] ) and ( topLeftNode\[1] >= topLeftBackDrop\[1] )\n    bottomRight = ( bottomRightNode\[0] <= bottomRightBackdrop\[0] ) and ( bottomRightNode\[1] <= bottomRightBackdrop\[1] )\n                    \n    return topLeft and bottomRight\n\nif not selNodes:\n    nuke.message('Some nodes should be selected')\nelse:\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in selNodes])\n    bdY = min(\[node.ypos() for node in selNodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in selNodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in selNodes]) - bdY\n                        \n    zOrder = 0\n    selectedBackdropNodes = nuke.selectedNodes( \"BackdropNode\" )\n\n    #if there are backdropNodes selected put the new one immediately behind the farthest one\n                \n    if len( selectedBackdropNodes ):\n        zOrder = min( \[node.knob( \"z_order\" ).value() for node in selectedBackdropNodes] ) - 1\n    else :\n        #otherwise (no backdrop in selection) find the nearest backdrop if exists and set the new one in front of it\n        nonSelectedBackdropNodes = nuke.allNodes(\"BackdropNode\")\n        for nonBackdrop in selNodes:\n            for backdrop in nonSelectedBackdropNodes:\n                if nodeIsInside( nonBackdrop, backdrop ):\n                    zOrder = max( zOrder, backdrop.knob( \"z_order\" ).value() + 1 )\n    \n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-padding, -(padding+70), padding, padding)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    this\['xpos'].setValue(bdX)\n    this\['bdwidth'].setValue(bdW)\n    this\['ypos'].setValue(bdY)\n    this\['bdheight'].setValue(bdH)\n    this\['z_order'].setValue(zOrder)\n"}
addUserKnob {26 S04 l " " -STARTLINE T " "}
addUserKnob {3 sides l "" -STARTLINE}
sides 50
addUserKnob {26 divider3 l "" +STARTLINE}
addUserKnob {26 S05 l " " -STARTLINE T " "}
addUserKnob {26 pos_text l Position -STARTLINE T " "}
addUserKnob {3 node_position_x l x -STARTLINE}
addUserKnob {3 node_position_y l y -STARTLINE}
addUserKnob {26 S06 l " " T " "}
addUserKnob {14 sizeNode l Size -STARTLINE R 0 100}
sizeNode {0 0}
addUserKnob {26 S07 l " " -STARTLINE T "     "}
addUserKnob {3 zorder l "Z Order" -STARTLINE}
}
BackdropNode {
inputs 0
name BackdropNode68
knobChanged "try:\n    node=nuke.thisNode()\n    knob=nuke.thisKnob()\n    name=knob.name()\n\n    def updateKnobs():\n        nodeWidth=node\['bdwidth'].getValue()\n        nodeHeight=node\['bdheight'].getValue()\n        node\['sizeNode'].setValue(\[int(nodeWidth),int(nodeHeight)])\n        node\['node_position_x'].setValue(int(node\['xpos'].value()))\n        node\['node_position_y'].setValue(int(node\['ypos'].value()))\n        node\['zorder'].setValue(int(node\['z_order'].getValue()))\n        node\['font_size'].setValue(int(node\['note_font_size'].getValue()))\n        node\['oz_appearance'].setValue( node\['appearance'].value() )\n        node\['oz_border_width'].setValue( node\['border_width'].value() )\n        #node\['fontColor'].setValue(int(node\['note_font_color'].getValue()))\n\n    def updateLabelKnob():\n        curLabel = node\['label'].getValue()\n        if '<p align=center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=center>', ''))\n            node\['alignment'].setValue(1)\n        elif '<p align=right>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=right>', ''))\n            node\['alignment'].setValue(2)\n        elif '<center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<center>', ''))\n            node\['alignment'].setValue(1)\n        else:\n            node\['text'].setValue(curLabel)\n            node\['alignment'].setValue(0)\n\n    ### OPENING SETUP\n    if name=='showPanel':\n        updateKnobs()\n        updateLabelKnob()\n\n    ### UPDATE STYLE\n    if name in \['oz_appearance', 'oz_border_width']:\n        node\['appearance'].setValue( node\['oz_appearance'].value() )\n        node\['border_width'].setValue( node\['oz_border_width'].value() )\n\n    ### CHANGE THE SIZE OF THE NODE\n    if name=='sizeNode':\n        node\['bdwidth'].setValue(int(node\['sizeNode'].getValue()\[0]))\n        node\['bdheight'].setValue(int(node\['sizeNode'].getValue()\[1]))\n\n    ### POSITION\n    if name=='node_position_x' or name=='node_position_y':\n        node.setXYpos(int(node\['node_position_x'].getValue()),int(node\['node_position_y'].getValue()))\n\n    ### ZORDER\n    if name=='zorder':\n        node\['z_order'].setValue(node\['zorder'].getValue())\n\n    ### UPDATE THE 'CURRENT SIZE' AND ORDER\n    #if name=='bdwidth' or name=='bdheight' or name=='z_order':\n    if name in \['bdwidth', 'bdheight', 'z_order']:\n        updateKnobs()\n\n    ### UPDATE LABEL\n    title = node\['name'].value()\n    text = node\['text'].value()\n\n    if name in \['text', 'alignment', 'title']:\n        if text=='':\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+title\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+title\n            else:\n                newLabel=title\n        else:\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+text\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+text\n            else:\n                newLabel=text\n\n        node\['label'].setValue(newLabel)\n\n    if name==\"font_size\":\n        new_font_size = node\[\"font_size\"].value()\n        node\['note_font_size'].setValue(new_font_size)\n\n    del newLabel\n\nexcept:\n    pass\n"
tile_color 0x2b2a37ff
label ScreenDifference
note_font_size 50
selected true
xpos -7745
ypos 8774
bdwidth 726
bdheight 1386
addUserKnob {20 Settings}
addUserKnob {43 text l Text}
text ScreenDifference
addUserKnob {7 font_size l "Font Size" R 10 100}
font_size 50
addUserKnob {4 alignment l "" -STARTLINE M {left center right}}
addUserKnob {26 divider1 l "" +STARTLINE}
addUserKnob {26 S01 l " " T " "}
addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import random\nn=nuke.thisNode()\nr,g,b=\[(float(random.randint( 20, 40)))/100,(float(random.randint( 10, 50)))/100,(float(random.randint( 15, 60)))/100]\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (r*255,g*255,b*255,1),16) )\n"}
addUserKnob {22 red l " <img src=\"F_r.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.77, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 orange l " <img src=\"F_o.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 yellow l " <img src=\"F_y.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 green l " <img src=\"F_g.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 cyan l " <img src=\"F_c.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 blue l " <img src=\"F_b.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.7, 0.76]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 darkblue l " <img src=\"F_db.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.74, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 magenta l " <img src=\"F_m.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.74, 0.65]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 pink l " <img src=\"F_p.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.74, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {26 S08 l " " T " "}
addUserKnob {4 oz_appearance l appearance -STARTLINE M {Fill Border}}
addUserKnob {7 oz_border_width l width -STARTLINE R 0 10}
oz_border_width 2
addUserKnob {26 divider2 l "" +STARTLINE}
addUserKnob {26 S02 l " " T " "}
addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\ngrow(n,50)"}
addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\nshrink(n,50)"}
addUserKnob {26 S03 l " " -STARTLINE T "     "}
addUserKnob {22 encompassSelectedNodes l " <img src=\"oz_encompass.png\">" -STARTLINE T "this = nuke.thisNode()\npadding = this\['sides'].getValue()\nif this.isSelected:\n    this.setSelected(False)\nselNodes = nuke.selectedNodes()\n        \ndef nodeIsInside (node, backdropNode):\n    # Returns true if node geometry is inside backdropNode otherwise returns false\n    topLeftNode = \[node.xpos(), node.ypos()]\n    topLeftBackDrop = \[backdropNode.xpos(), backdropNode.ypos()]\n    bottomRightNode = \[node.xpos() + node.screenWidth(), node.ypos() + node.screenHeight()]\n    bottomRightBackdrop = \[backdropNode.xpos() + backdropNode.screenWidth(), backdropNode.ypos() + backdropNode.screenHeight()]\n                    \n    topLeft = ( topLeftNode\[0] >= topLeftBackDrop\[0] ) and ( topLeftNode\[1] >= topLeftBackDrop\[1] )\n    bottomRight = ( bottomRightNode\[0] <= bottomRightBackdrop\[0] ) and ( bottomRightNode\[1] <= bottomRightBackdrop\[1] )\n                    \n    return topLeft and bottomRight\n\nif not selNodes:\n    nuke.message('Some nodes should be selected')\nelse:\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in selNodes])\n    bdY = min(\[node.ypos() for node in selNodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in selNodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in selNodes]) - bdY\n                        \n    zOrder = 0\n    selectedBackdropNodes = nuke.selectedNodes( \"BackdropNode\" )\n\n    #if there are backdropNodes selected put the new one immediately behind the farthest one\n                \n    if len( selectedBackdropNodes ):\n        zOrder = min( \[node.knob( \"z_order\" ).value() for node in selectedBackdropNodes] ) - 1\n    else :\n        #otherwise (no backdrop in selection) find the nearest backdrop if exists and set the new one in front of it\n        nonSelectedBackdropNodes = nuke.allNodes(\"BackdropNode\")\n        for nonBackdrop in selNodes:\n            for backdrop in nonSelectedBackdropNodes:\n                if nodeIsInside( nonBackdrop, backdrop ):\n                    zOrder = max( zOrder, backdrop.knob( \"z_order\" ).value() + 1 )\n    \n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-padding, -(padding+70), padding, padding)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    this\['xpos'].setValue(bdX)\n    this\['bdwidth'].setValue(bdW)\n    this\['ypos'].setValue(bdY)\n    this\['bdheight'].setValue(bdH)\n    this\['z_order'].setValue(zOrder)\n"}
addUserKnob {26 S04 l " " -STARTLINE T " "}
addUserKnob {3 sides l "" -STARTLINE}
sides 50
addUserKnob {26 divider3 l "" +STARTLINE}
addUserKnob {26 S05 l " " -STARTLINE T " "}
addUserKnob {26 pos_text l Position -STARTLINE T " "}
addUserKnob {3 node_position_x l x -STARTLINE}
addUserKnob {3 node_position_y l y -STARTLINE}
addUserKnob {26 S06 l " " T " "}
addUserKnob {14 sizeNode l Size -STARTLINE R 0 100}
sizeNode {0 0}
addUserKnob {26 S07 l " " -STARTLINE T "     "}
addUserKnob {3 zorder l "Z Order" -STARTLINE}
}
BackdropNode {
inputs 0
name BackdropNode69
knobChanged "try:\n    node=nuke.thisNode()\n    knob=nuke.thisKnob()\n    name=knob.name()\n\n    def updateKnobs():\n        nodeWidth=node\['bdwidth'].getValue()\n        nodeHeight=node\['bdheight'].getValue()\n        node\['sizeNode'].setValue(\[int(nodeWidth),int(nodeHeight)])\n        node\['node_position_x'].setValue(int(node\['xpos'].value()))\n        node\['node_position_y'].setValue(int(node\['ypos'].value()))\n        node\['zorder'].setValue(int(node\['z_order'].getValue()))\n        node\['font_size'].setValue(int(node\['note_font_size'].getValue()))\n        node\['oz_appearance'].setValue( node\['appearance'].value() )\n        node\['oz_border_width'].setValue( node\['border_width'].value() )\n        #node\['fontColor'].setValue(int(node\['note_font_color'].getValue()))\n\n    def updateLabelKnob():\n        curLabel = node\['label'].getValue()\n        if '<p align=center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=center>', ''))\n            node\['alignment'].setValue(1)\n        elif '<p align=right>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=right>', ''))\n            node\['alignment'].setValue(2)\n        elif '<center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<center>', ''))\n            node\['alignment'].setValue(1)\n        else:\n            node\['text'].setValue(curLabel)\n            node\['alignment'].setValue(0)\n\n    ### OPENING SETUP\n    if name=='showPanel':\n        updateKnobs()\n        updateLabelKnob()\n\n    ### UPDATE STYLE\n    if name in \['oz_appearance', 'oz_border_width']:\n        node\['appearance'].setValue( node\['oz_appearance'].value() )\n        node\['border_width'].setValue( node\['oz_border_width'].value() )\n\n    ### CHANGE THE SIZE OF THE NODE\n    if name=='sizeNode':\n        node\['bdwidth'].setValue(int(node\['sizeNode'].getValue()\[0]))\n        node\['bdheight'].setValue(int(node\['sizeNode'].getValue()\[1]))\n\n    ### POSITION\n    if name=='node_position_x' or name=='node_position_y':\n        node.setXYpos(int(node\['node_position_x'].getValue()),int(node\['node_position_y'].getValue()))\n\n    ### ZORDER\n    if name=='zorder':\n        node\['z_order'].setValue(node\['zorder'].getValue())\n\n    ### UPDATE THE 'CURRENT SIZE' AND ORDER\n    #if name=='bdwidth' or name=='bdheight' or name=='z_order':\n    if name in \['bdwidth', 'bdheight', 'z_order']:\n        updateKnobs()\n\n    ### UPDATE LABEL\n    title = node\['name'].value()\n    text = node\['text'].value()\n\n    if name in \['text', 'alignment', 'title']:\n        if text=='':\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+title\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+title\n            else:\n                newLabel=title\n        else:\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+text\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+text\n            else:\n                newLabel=text\n\n        node\['label'].setValue(newLabel)\n\n    if name==\"font_size\":\n        new_font_size = node\[\"font_size\"].value()\n        node\['note_font_size'].setValue(new_font_size)\n\n    del newLabel\n\nexcept:\n    pass\n"
tile_color 0x2b2a37ff
label "Screen Exchange"
note_font_size 50
selected true
xpos -3982
ypos 8703
bdwidth 1767
bdheight 2542
addUserKnob {20 Settings}
addUserKnob {43 text l Text}
text "Screen Exchange"
addUserKnob {7 font_size l "Font Size" R 10 100}
font_size 50
addUserKnob {4 alignment l "" -STARTLINE M {left center right}}
addUserKnob {26 divider1 l "" +STARTLINE}
addUserKnob {26 S01 l " " T " "}
addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import random\nn=nuke.thisNode()\nr,g,b=\[(float(random.randint( 20, 40)))/100,(float(random.randint( 10, 50)))/100,(float(random.randint( 15, 60)))/100]\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (r*255,g*255,b*255,1),16) )\n"}
addUserKnob {22 red l " <img src=\"F_r.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.77, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 orange l " <img src=\"F_o.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 yellow l " <img src=\"F_y.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 green l " <img src=\"F_g.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 cyan l " <img src=\"F_c.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 blue l " <img src=\"F_b.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.7, 0.76]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 darkblue l " <img src=\"F_db.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.74, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 magenta l " <img src=\"F_m.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.74, 0.65]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 pink l " <img src=\"F_p.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.74, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {26 S08 l " " T " "}
addUserKnob {4 oz_appearance l appearance -STARTLINE M {Fill Border}}
addUserKnob {7 oz_border_width l width -STARTLINE R 0 10}
oz_border_width 2
addUserKnob {26 divider2 l "" +STARTLINE}
addUserKnob {26 S02 l " " T " "}
addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\ngrow(n,50)"}
addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\nshrink(n,50)"}
addUserKnob {26 S03 l " " -STARTLINE T "     "}
addUserKnob {22 encompassSelectedNodes l " <img src=\"oz_encompass.png\">" -STARTLINE T "this = nuke.thisNode()\npadding = this\['sides'].getValue()\nif this.isSelected:\n    this.setSelected(False)\nselNodes = nuke.selectedNodes()\n        \ndef nodeIsInside (node, backdropNode):\n    # Returns true if node geometry is inside backdropNode otherwise returns false\n    topLeftNode = \[node.xpos(), node.ypos()]\n    topLeftBackDrop = \[backdropNode.xpos(), backdropNode.ypos()]\n    bottomRightNode = \[node.xpos() + node.screenWidth(), node.ypos() + node.screenHeight()]\n    bottomRightBackdrop = \[backdropNode.xpos() + backdropNode.screenWidth(), backdropNode.ypos() + backdropNode.screenHeight()]\n                    \n    topLeft = ( topLeftNode\[0] >= topLeftBackDrop\[0] ) and ( topLeftNode\[1] >= topLeftBackDrop\[1] )\n    bottomRight = ( bottomRightNode\[0] <= bottomRightBackdrop\[0] ) and ( bottomRightNode\[1] <= bottomRightBackdrop\[1] )\n                    \n    return topLeft and bottomRight\n\nif not selNodes:\n    nuke.message('Some nodes should be selected')\nelse:\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in selNodes])\n    bdY = min(\[node.ypos() for node in selNodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in selNodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in selNodes]) - bdY\n                        \n    zOrder = 0\n    selectedBackdropNodes = nuke.selectedNodes( \"BackdropNode\" )\n\n    #if there are backdropNodes selected put the new one immediately behind the farthest one\n                \n    if len( selectedBackdropNodes ):\n        zOrder = min( \[node.knob( \"z_order\" ).value() for node in selectedBackdropNodes] ) - 1\n    else :\n        #otherwise (no backdrop in selection) find the nearest backdrop if exists and set the new one in front of it\n        nonSelectedBackdropNodes = nuke.allNodes(\"BackdropNode\")\n        for nonBackdrop in selNodes:\n            for backdrop in nonSelectedBackdropNodes:\n                if nodeIsInside( nonBackdrop, backdrop ):\n                    zOrder = max( zOrder, backdrop.knob( \"z_order\" ).value() + 1 )\n    \n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-padding, -(padding+70), padding, padding)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    this\['xpos'].setValue(bdX)\n    this\['bdwidth'].setValue(bdW)\n    this\['ypos'].setValue(bdY)\n    this\['bdheight'].setValue(bdH)\n    this\['z_order'].setValue(zOrder)\n"}
addUserKnob {26 S04 l " " -STARTLINE T " "}
addUserKnob {3 sides l "" -STARTLINE}
sides 50
addUserKnob {26 divider3 l "" +STARTLINE}
addUserKnob {26 S05 l " " -STARTLINE T " "}
addUserKnob {26 pos_text l Position -STARTLINE T " "}
addUserKnob {3 node_position_x l x -STARTLINE}
node_position_x 61
addUserKnob {3 node_position_y l y -STARTLINE}
node_position_y -439
addUserKnob {26 S06 l " " T " "}
addUserKnob {14 sizeNode l Size -STARTLINE R 0 100}
sizeNode {1767 2542}
addUserKnob {26 S07 l " " -STARTLINE T "     "}
addUserKnob {3 zorder l "Z Order" -STARTLINE}
}
BackdropNode {
inputs 0
name BackdropNode70
knobChanged "try:\n    node=nuke.thisNode()\n    knob=nuke.thisKnob()\n    name=knob.name()\n\n    def updateKnobs():\n        nodeWidth=node\['bdwidth'].getValue()\n        nodeHeight=node\['bdheight'].getValue()\n        node\['sizeNode'].setValue(\[int(nodeWidth),int(nodeHeight)])\n        node\['node_position_x'].setValue(int(node\['xpos'].value()))\n        node\['node_position_y'].setValue(int(node\['ypos'].value()))\n        node\['zorder'].setValue(int(node\['z_order'].getValue()))\n        node\['font_size'].setValue(int(node\['note_font_size'].getValue()))\n        node\['oz_appearance'].setValue( node\['appearance'].value() )\n        node\['oz_border_width'].setValue( node\['border_width'].value() )\n        #node\['fontColor'].setValue(int(node\['note_font_color'].getValue()))\n\n    def updateLabelKnob():\n        curLabel = node\['label'].getValue()\n        if '<p align=center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=center>', ''))\n            node\['alignment'].setValue(1)\n        elif '<p align=right>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=right>', ''))\n            node\['alignment'].setValue(2)\n        elif '<center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<center>', ''))\n            node\['alignment'].setValue(1)\n        else:\n            node\['text'].setValue(curLabel)\n            node\['alignment'].setValue(0)\n\n    ### OPENING SETUP\n    if name=='showPanel':\n        updateKnobs()\n        updateLabelKnob()\n\n    ### UPDATE STYLE\n    if name in \['oz_appearance', 'oz_border_width']:\n        node\['appearance'].setValue( node\['oz_appearance'].value() )\n        node\['border_width'].setValue( node\['oz_border_width'].value() )\n\n    ### CHANGE THE SIZE OF THE NODE\n    if name=='sizeNode':\n        node\['bdwidth'].setValue(int(node\['sizeNode'].getValue()\[0]))\n        node\['bdheight'].setValue(int(node\['sizeNode'].getValue()\[1]))\n\n    ### POSITION\n    if name=='node_position_x' or name=='node_position_y':\n        node.setXYpos(int(node\['node_position_x'].getValue()),int(node\['node_position_y'].getValue()))\n\n    ### ZORDER\n    if name=='zorder':\n        node\['z_order'].setValue(node\['zorder'].getValue())\n\n    ### UPDATE THE 'CURRENT SIZE' AND ORDER\n    #if name=='bdwidth' or name=='bdheight' or name=='z_order':\n    if name in \['bdwidth', 'bdheight', 'z_order']:\n        updateKnobs()\n\n    ### UPDATE LABEL\n    title = node\['name'].value()\n    text = node\['text'].value()\n\n    if name in \['text', 'alignment', 'title']:\n        if text=='':\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+title\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+title\n            else:\n                newLabel=title\n        else:\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+text\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+text\n            else:\n                newLabel=text\n\n        node\['label'].setValue(newLabel)\n\n    if name==\"font_size\":\n        new_font_size = node\[\"font_size\"].value()\n        node\['note_font_size'].setValue(new_font_size)\n\n    del newLabel\n\nexcept:\n    pass\n"
tile_color 0x343e3dff
label "Restore\nLuma in Core Despill"
note_font_size 50
selected true
xpos 689
ypos 7225
bdwidth 426
bdheight 580
addUserKnob {20 Settings}
addUserKnob {43 text l Text}
text "Restore\nLuma in Core Despill"
addUserKnob {7 font_size l "Font Size" R 10 100}
font_size 50
addUserKnob {4 alignment l "" -STARTLINE M {left center right}}
addUserKnob {26 divider1 l "" +STARTLINE}
addUserKnob {26 S01 l " " T " "}
addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import random\nn=nuke.thisNode()\nr,g,b=\[(float(random.randint( 20, 40)))/100,(float(random.randint( 10, 50)))/100,(float(random.randint( 15, 60)))/100]\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (r*255,g*255,b*255,1),16) )\n"}
addUserKnob {22 red l " <img src=\"F_r.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.77, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 orange l " <img src=\"F_o.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 yellow l " <img src=\"F_y.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 green l " <img src=\"F_g.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 cyan l " <img src=\"F_c.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 blue l " <img src=\"F_b.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.7, 0.76]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 darkblue l " <img src=\"F_db.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.74, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 magenta l " <img src=\"F_m.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.74, 0.65]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 pink l " <img src=\"F_p.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.74, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {26 S08 l " " T " "}
addUserKnob {4 oz_appearance l appearance -STARTLINE M {Fill Border}}
addUserKnob {7 oz_border_width l width -STARTLINE R 0 10}
oz_border_width 2
addUserKnob {26 divider2 l "" +STARTLINE}
addUserKnob {26 S02 l " " T " "}
addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\ngrow(n,50)"}
addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\nshrink(n,50)"}
addUserKnob {26 S03 l " " -STARTLINE T "     "}
addUserKnob {22 encompassSelectedNodes l " <img src=\"oz_encompass.png\">" -STARTLINE T "this = nuke.thisNode()\npadding = this\['sides'].getValue()\nif this.isSelected:\n    this.setSelected(False)\nselNodes = nuke.selectedNodes()\n        \ndef nodeIsInside (node, backdropNode):\n    # Returns true if node geometry is inside backdropNode otherwise returns false\n    topLeftNode = \[node.xpos(), node.ypos()]\n    topLeftBackDrop = \[backdropNode.xpos(), backdropNode.ypos()]\n    bottomRightNode = \[node.xpos() + node.screenWidth(), node.ypos() + node.screenHeight()]\n    bottomRightBackdrop = \[backdropNode.xpos() + backdropNode.screenWidth(), backdropNode.ypos() + backdropNode.screenHeight()]\n                    \n    topLeft = ( topLeftNode\[0] >= topLeftBackDrop\[0] ) and ( topLeftNode\[1] >= topLeftBackDrop\[1] )\n    bottomRight = ( bottomRightNode\[0] <= bottomRightBackdrop\[0] ) and ( bottomRightNode\[1] <= bottomRightBackdrop\[1] )\n                    \n    return topLeft and bottomRight\n\nif not selNodes:\n    nuke.message('Some nodes should be selected')\nelse:\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in selNodes])\n    bdY = min(\[node.ypos() for node in selNodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in selNodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in selNodes]) - bdY\n                        \n    zOrder = 0\n    selectedBackdropNodes = nuke.selectedNodes( \"BackdropNode\" )\n\n    #if there are backdropNodes selected put the new one immediately behind the farthest one\n                \n    if len( selectedBackdropNodes ):\n        zOrder = min( \[node.knob( \"z_order\" ).value() for node in selectedBackdropNodes] ) - 1\n    else :\n        #otherwise (no backdrop in selection) find the nearest backdrop if exists and set the new one in front of it\n        nonSelectedBackdropNodes = nuke.allNodes(\"BackdropNode\")\n        for nonBackdrop in selNodes:\n            for backdrop in nonSelectedBackdropNodes:\n                if nodeIsInside( nonBackdrop, backdrop ):\n                    zOrder = max( zOrder, backdrop.knob( \"z_order\" ).value() + 1 )\n    \n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-padding, -(padding+70), padding, padding)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    this\['xpos'].setValue(bdX)\n    this\['bdwidth'].setValue(bdW)\n    this\['ypos'].setValue(bdY)\n    this\['bdheight'].setValue(bdH)\n    this\['z_order'].setValue(zOrder)\n"}
addUserKnob {26 S04 l " " -STARTLINE T " "}
addUserKnob {3 sides l "" -STARTLINE}
sides 50
addUserKnob {26 divider3 l "" +STARTLINE}
addUserKnob {26 S05 l " " -STARTLINE T " "}
addUserKnob {26 pos_text l Position -STARTLINE T " "}
addUserKnob {3 node_position_x l x -STARTLINE}
addUserKnob {3 node_position_y l y -STARTLINE}
addUserKnob {26 S06 l " " T " "}
addUserKnob {14 sizeNode l Size -STARTLINE R 0 100}
sizeNode {0 0}
addUserKnob {26 S07 l " " -STARTLINE T "     "}
addUserKnob {3 zorder l "Z Order" -STARTLINE}
}
BackdropNode {
inputs 0
name BackdropNode71
knobChanged "try:\n    node=nuke.thisNode()\n    knob=nuke.thisKnob()\n    name=knob.name()\n\n    def updateKnobs():\n        nodeWidth=node\['bdwidth'].getValue()\n        nodeHeight=node\['bdheight'].getValue()\n        node\['sizeNode'].setValue(\[int(nodeWidth),int(nodeHeight)])\n        node\['node_position_x'].setValue(int(node\['xpos'].value()))\n        node\['node_position_y'].setValue(int(node\['ypos'].value()))\n        node\['zorder'].setValue(int(node\['z_order'].getValue()))\n        node\['font_size'].setValue(int(node\['note_font_size'].getValue()))\n        node\['oz_appearance'].setValue( node\['appearance'].value() )\n        node\['oz_border_width'].setValue( node\['border_width'].value() )\n        #node\['fontColor'].setValue(int(node\['note_font_color'].getValue()))\n\n    def updateLabelKnob():\n        curLabel = node\['label'].getValue()\n        if '<p align=center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=center>', ''))\n            node\['alignment'].setValue(1)\n        elif '<p align=right>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=right>', ''))\n            node\['alignment'].setValue(2)\n        elif '<center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<center>', ''))\n            node\['alignment'].setValue(1)\n        else:\n            node\['text'].setValue(curLabel)\n            node\['alignment'].setValue(0)\n\n    ### OPENING SETUP\n    if name=='showPanel':\n        updateKnobs()\n        updateLabelKnob()\n\n    ### UPDATE STYLE\n    if name in \['oz_appearance', 'oz_border_width']:\n        node\['appearance'].setValue( node\['oz_appearance'].value() )\n        node\['border_width'].setValue( node\['oz_border_width'].value() )\n\n    ### CHANGE THE SIZE OF THE NODE\n    if name=='sizeNode':\n        node\['bdwidth'].setValue(int(node\['sizeNode'].getValue()\[0]))\n        node\['bdheight'].setValue(int(node\['sizeNode'].getValue()\[1]))\n\n    ### POSITION\n    if name=='node_position_x' or name=='node_position_y':\n        node.setXYpos(int(node\['node_position_x'].getValue()),int(node\['node_position_y'].getValue()))\n\n    ### ZORDER\n    if name=='zorder':\n        node\['z_order'].setValue(node\['zorder'].getValue())\n\n    ### UPDATE THE 'CURRENT SIZE' AND ORDER\n    #if name=='bdwidth' or name=='bdheight' or name=='z_order':\n    if name in \['bdwidth', 'bdheight', 'z_order']:\n        updateKnobs()\n\n    ### UPDATE LABEL\n    title = node\['name'].value()\n    text = node\['text'].value()\n\n    if name in \['text', 'alignment', 'title']:\n        if text=='':\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+title\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+title\n            else:\n                newLabel=title\n        else:\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+text\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+text\n            else:\n                newLabel=text\n\n        node\['label'].setValue(newLabel)\n\n    if name==\"font_size\":\n        new_font_size = node\[\"font_size\"].value()\n        node\['note_font_size'].setValue(new_font_size)\n\n    del newLabel\n\nexcept:\n    pass\n"
tile_color 0x2c2d36ff
label "Outside Edge"
note_font_size 50
selected true
xpos 1215
ypos 7230
bdwidth 454
bdheight 482
addUserKnob {20 Settings}
addUserKnob {43 text l Text}
text "Outside Edge"
addUserKnob {7 font_size l "Font Size" R 10 100}
font_size 50
addUserKnob {4 alignment l "" -STARTLINE M {left center right}}
addUserKnob {26 divider1 l "" +STARTLINE}
addUserKnob {26 S01 l " " T " "}
addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import random\nn=nuke.thisNode()\nr,g,b=\[(float(random.randint( 20, 40)))/100,(float(random.randint( 10, 50)))/100,(float(random.randint( 15, 60)))/100]\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (r*255,g*255,b*255,1),16) )\n"}
addUserKnob {22 red l " <img src=\"F_r.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.77, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 orange l " <img src=\"F_o.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 yellow l " <img src=\"F_y.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 green l " <img src=\"F_g.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 cyan l " <img src=\"F_c.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 blue l " <img src=\"F_b.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.7, 0.76]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 darkblue l " <img src=\"F_db.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.74, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 magenta l " <img src=\"F_m.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.74, 0.65]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 pink l " <img src=\"F_p.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.74, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {26 S08 l " " T " "}
addUserKnob {4 oz_appearance l appearance -STARTLINE M {Fill Border}}
addUserKnob {7 oz_border_width l width -STARTLINE R 0 10}
oz_border_width 2
addUserKnob {26 divider2 l "" +STARTLINE}
addUserKnob {26 S02 l " " T " "}
addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\ngrow(n,50)"}
addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\nshrink(n,50)"}
addUserKnob {26 S03 l " " -STARTLINE T "     "}
addUserKnob {22 encompassSelectedNodes l " <img src=\"oz_encompass.png\">" -STARTLINE T "this = nuke.thisNode()\npadding = this\['sides'].getValue()\nif this.isSelected:\n    this.setSelected(False)\nselNodes = nuke.selectedNodes()\n        \ndef nodeIsInside (node, backdropNode):\n    # Returns true if node geometry is inside backdropNode otherwise returns false\n    topLeftNode = \[node.xpos(), node.ypos()]\n    topLeftBackDrop = \[backdropNode.xpos(), backdropNode.ypos()]\n    bottomRightNode = \[node.xpos() + node.screenWidth(), node.ypos() + node.screenHeight()]\n    bottomRightBackdrop = \[backdropNode.xpos() + backdropNode.screenWidth(), backdropNode.ypos() + backdropNode.screenHeight()]\n                    \n    topLeft = ( topLeftNode\[0] >= topLeftBackDrop\[0] ) and ( topLeftNode\[1] >= topLeftBackDrop\[1] )\n    bottomRight = ( bottomRightNode\[0] <= bottomRightBackdrop\[0] ) and ( bottomRightNode\[1] <= bottomRightBackdrop\[1] )\n                    \n    return topLeft and bottomRight\n\nif not selNodes:\n    nuke.message('Some nodes should be selected')\nelse:\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in selNodes])\n    bdY = min(\[node.ypos() for node in selNodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in selNodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in selNodes]) - bdY\n                        \n    zOrder = 0\n    selectedBackdropNodes = nuke.selectedNodes( \"BackdropNode\" )\n\n    #if there are backdropNodes selected put the new one immediately behind the farthest one\n                \n    if len( selectedBackdropNodes ):\n        zOrder = min( \[node.knob( \"z_order\" ).value() for node in selectedBackdropNodes] ) - 1\n    else :\n        #otherwise (no backdrop in selection) find the nearest backdrop if exists and set the new one in front of it\n        nonSelectedBackdropNodes = nuke.allNodes(\"BackdropNode\")\n        for nonBackdrop in selNodes:\n            for backdrop in nonSelectedBackdropNodes:\n                if nodeIsInside( nonBackdrop, backdrop ):\n                    zOrder = max( zOrder, backdrop.knob( \"z_order\" ).value() + 1 )\n    \n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-padding, -(padding+70), padding, padding)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    this\['xpos'].setValue(bdX)\n    this\['bdwidth'].setValue(bdW)\n    this\['ypos'].setValue(bdY)\n    this\['bdheight'].setValue(bdH)\n    this\['z_order'].setValue(zOrder)\n"}
addUserKnob {26 S04 l " " -STARTLINE T " "}
addUserKnob {3 sides l "" -STARTLINE}
sides 50
addUserKnob {26 divider3 l "" +STARTLINE}
addUserKnob {26 S05 l " " -STARTLINE T " "}
addUserKnob {26 pos_text l Position -STARTLINE T " "}
addUserKnob {3 node_position_x l x -STARTLINE}
addUserKnob {3 node_position_y l y -STARTLINE}
addUserKnob {26 S06 l " " T " "}
addUserKnob {14 sizeNode l Size -STARTLINE R 0 100}
sizeNode {0 0}
addUserKnob {26 S07 l " " -STARTLINE T "     "}
addUserKnob {3 zorder l "Z Order" -STARTLINE}
}
BackdropNode {
inputs 0
name BackdropNode73
knobChanged "try:\n    node=nuke.thisNode()\n    knob=nuke.thisKnob()\n    name=knob.name()\n\n    def updateKnobs():\n        nodeWidth=node\['bdwidth'].getValue()\n        nodeHeight=node\['bdheight'].getValue()\n        node\['sizeNode'].setValue(\[int(nodeWidth),int(nodeHeight)])\n        node\['node_position_x'].setValue(int(node\['xpos'].value()))\n        node\['node_position_y'].setValue(int(node\['ypos'].value()))\n        node\['zorder'].setValue(int(node\['z_order'].getValue()))\n        node\['font_size'].setValue(int(node\['note_font_size'].getValue()))\n        node\['oz_appearance'].setValue( node\['appearance'].value() )\n        node\['oz_border_width'].setValue( node\['border_width'].value() )\n        #node\['fontColor'].setValue(int(node\['note_font_color'].getValue()))\n\n    def updateLabelKnob():\n        curLabel = node\['label'].getValue()\n        if '<p align=center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=center>', ''))\n            node\['alignment'].setValue(1)\n        elif '<p align=right>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=right>', ''))\n            node\['alignment'].setValue(2)\n        elif '<center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<center>', ''))\n            node\['alignment'].setValue(1)\n        else:\n            node\['text'].setValue(curLabel)\n            node\['alignment'].setValue(0)\n\n    ### OPENING SETUP\n    if name=='showPanel':\n        updateKnobs()\n        updateLabelKnob()\n\n    ### UPDATE STYLE\n    if name in \['oz_appearance', 'oz_border_width']:\n        node\['appearance'].setValue( node\['oz_appearance'].value() )\n        node\['border_width'].setValue( node\['oz_border_width'].value() )\n\n    ### CHANGE THE SIZE OF THE NODE\n    if name=='sizeNode':\n        node\['bdwidth'].setValue(int(node\['sizeNode'].getValue()\[0]))\n        node\['bdheight'].setValue(int(node\['sizeNode'].getValue()\[1]))\n\n    ### POSITION\n    if name=='node_position_x' or name=='node_position_y':\n        node.setXYpos(int(node\['node_position_x'].getValue()),int(node\['node_position_y'].getValue()))\n\n    ### ZORDER\n    if name=='zorder':\n        node\['z_order'].setValue(node\['zorder'].getValue())\n\n    ### UPDATE THE 'CURRENT SIZE' AND ORDER\n    #if name=='bdwidth' or name=='bdheight' or name=='z_order':\n    if name in \['bdwidth', 'bdheight', 'z_order']:\n        updateKnobs()\n\n    ### UPDATE LABEL\n    title = node\['name'].value()\n    text = node\['text'].value()\n\n    if name in \['text', 'alignment', 'title']:\n        if text=='':\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+title\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+title\n            else:\n                newLabel=title\n        else:\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+text\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+text\n            else:\n                newLabel=text\n\n        node\['label'].setValue(newLabel)\n\n    if name==\"font_size\":\n        new_font_size = node\[\"font_size\"].value()\n        node\['note_font_size'].setValue(new_font_size)\n\n    del newLabel\n\nexcept:\n    pass\n"
tile_color 0x3d3934ff
label "Remove Gray\nEdges"
note_font_size 50
selected true
xpos 1761
ypos 7228
bdwidth 269
bdheight 770
addUserKnob {20 Settings}
addUserKnob {43 text l Text}
text "Remove Gray\nEdges"
addUserKnob {7 font_size l "Font Size" R 10 100}
font_size 50
addUserKnob {4 alignment l "" -STARTLINE M {left center right}}
addUserKnob {26 divider1 l "" +STARTLINE}
addUserKnob {26 S01 l " " T " "}
addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import random\nn=nuke.thisNode()\nr,g,b=\[(float(random.randint( 20, 40)))/100,(float(random.randint( 10, 50)))/100,(float(random.randint( 15, 60)))/100]\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (r*255,g*255,b*255,1),16) )\n"}
addUserKnob {22 red l " <img src=\"F_r.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.77, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 orange l " <img src=\"F_o.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 yellow l " <img src=\"F_y.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 green l " <img src=\"F_g.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 cyan l " <img src=\"F_c.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 blue l " <img src=\"F_b.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.7, 0.76]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 darkblue l " <img src=\"F_db.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.74, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 magenta l " <img src=\"F_m.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.74, 0.65]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 pink l " <img src=\"F_p.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.74, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {26 S08 l " " T " "}
addUserKnob {4 oz_appearance l appearance -STARTLINE M {Fill Border}}
addUserKnob {7 oz_border_width l width -STARTLINE R 0 10}
oz_border_width 2
addUserKnob {26 divider2 l "" +STARTLINE}
addUserKnob {26 S02 l " " T " "}
addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\ngrow(n,50)"}
addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\nshrink(n,50)"}
addUserKnob {26 S03 l " " -STARTLINE T "     "}
addUserKnob {22 encompassSelectedNodes l " <img src=\"oz_encompass.png\">" -STARTLINE T "this = nuke.thisNode()\npadding = this\['sides'].getValue()\nif this.isSelected:\n    this.setSelected(False)\nselNodes = nuke.selectedNodes()\n        \ndef nodeIsInside (node, backdropNode):\n    # Returns true if node geometry is inside backdropNode otherwise returns false\n    topLeftNode = \[node.xpos(), node.ypos()]\n    topLeftBackDrop = \[backdropNode.xpos(), backdropNode.ypos()]\n    bottomRightNode = \[node.xpos() + node.screenWidth(), node.ypos() + node.screenHeight()]\n    bottomRightBackdrop = \[backdropNode.xpos() + backdropNode.screenWidth(), backdropNode.ypos() + backdropNode.screenHeight()]\n                    \n    topLeft = ( topLeftNode\[0] >= topLeftBackDrop\[0] ) and ( topLeftNode\[1] >= topLeftBackDrop\[1] )\n    bottomRight = ( bottomRightNode\[0] <= bottomRightBackdrop\[0] ) and ( bottomRightNode\[1] <= bottomRightBackdrop\[1] )\n                    \n    return topLeft and bottomRight\n\nif not selNodes:\n    nuke.message('Some nodes should be selected')\nelse:\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in selNodes])\n    bdY = min(\[node.ypos() for node in selNodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in selNodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in selNodes]) - bdY\n                        \n    zOrder = 0\n    selectedBackdropNodes = nuke.selectedNodes( \"BackdropNode\" )\n\n    #if there are backdropNodes selected put the new one immediately behind the farthest one\n                \n    if len( selectedBackdropNodes ):\n        zOrder = min( \[node.knob( \"z_order\" ).value() for node in selectedBackdropNodes] ) - 1\n    else :\n        #otherwise (no backdrop in selection) find the nearest backdrop if exists and set the new one in front of it\n        nonSelectedBackdropNodes = nuke.allNodes(\"BackdropNode\")\n        for nonBackdrop in selNodes:\n            for backdrop in nonSelectedBackdropNodes:\n                if nodeIsInside( nonBackdrop, backdrop ):\n                    zOrder = max( zOrder, backdrop.knob( \"z_order\" ).value() + 1 )\n    \n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-padding, -(padding+70), padding, padding)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    this\['xpos'].setValue(bdX)\n    this\['bdwidth'].setValue(bdW)\n    this\['ypos'].setValue(bdY)\n    this\['bdheight'].setValue(bdH)\n    this\['z_order'].setValue(zOrder)\n"}
addUserKnob {26 S04 l " " -STARTLINE T " "}
addUserKnob {3 sides l "" -STARTLINE}
sides 50
addUserKnob {26 divider3 l "" +STARTLINE}
addUserKnob {26 S05 l " " -STARTLINE T " "}
addUserKnob {26 pos_text l Position -STARTLINE T " "}
addUserKnob {3 node_position_x l x -STARTLINE}
addUserKnob {3 node_position_y l y -STARTLINE}
addUserKnob {26 S06 l " " T " "}
addUserKnob {14 sizeNode l Size -STARTLINE R 0 100}
sizeNode {0 0}
addUserKnob {26 S07 l " " -STARTLINE T "     "}
addUserKnob {3 zorder l "Z Order" -STARTLINE}
}
BackdropNode {
inputs 0
name BackdropNode45
knobChanged "try:\n    node=nuke.thisNode()\n    knob=nuke.thisKnob()\n    name=knob.name()\n\n    def updateKnobs():\n        nodeWidth=node\['bdwidth'].getValue()\n        nodeHeight=node\['bdheight'].getValue()\n        node\['sizeNode'].setValue(\[int(nodeWidth),int(nodeHeight)])\n        node\['node_position_x'].setValue(int(node\['xpos'].value()))\n        node\['node_position_y'].setValue(int(node\['ypos'].value()))\n        node\['zorder'].setValue(int(node\['z_order'].getValue()))\n        node\['font_size'].setValue(int(node\['note_font_size'].getValue()))\n        node\['oz_appearance'].setValue( node\['appearance'].value() )\n        node\['oz_border_width'].setValue( node\['border_width'].value() )\n        #node\['fontColor'].setValue(int(node\['note_font_color'].getValue()))\n\n    def updateLabelKnob():\n        curLabel = node\['label'].getValue()\n        if '<p align=center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=center>', ''))\n            node\['alignment'].setValue(1)\n        elif '<p align=right>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=right>', ''))\n            node\['alignment'].setValue(2)\n        elif '<center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<center>', ''))\n            node\['alignment'].setValue(1)\n        else:\n            node\['text'].setValue(curLabel)\n            node\['alignment'].setValue(0)\n\n    ### OPENING SETUP\n    if name=='showPanel':\n        updateKnobs()\n        updateLabelKnob()\n\n    ### UPDATE STYLE\n    if name in \['oz_appearance', 'oz_border_width']:\n        node\['appearance'].setValue( node\['oz_appearance'].value() )\n        node\['border_width'].setValue( node\['oz_border_width'].value() )\n\n    ### CHANGE THE SIZE OF THE NODE\n    if name=='sizeNode':\n        node\['bdwidth'].setValue(int(node\['sizeNode'].getValue()\[0]))\n        node\['bdheight'].setValue(int(node\['sizeNode'].getValue()\[1]))\n\n    ### POSITION\n    if name=='node_position_x' or name=='node_position_y':\n        node.setXYpos(int(node\['node_position_x'].getValue()),int(node\['node_position_y'].getValue()))\n\n    ### ZORDER\n    if name=='zorder':\n        node\['z_order'].setValue(node\['zorder'].getValue())\n\n    ### UPDATE THE 'CURRENT SIZE' AND ORDER\n    #if name=='bdwidth' or name=='bdheight' or name=='z_order':\n    if name in \['bdwidth', 'bdheight', 'z_order']:\n        updateKnobs()\n\n    ### UPDATE LABEL\n    title = node\['name'].value()\n    text = node\['text'].value()\n\n    if name in \['text', 'alignment', 'title']:\n        if text=='':\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+title\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+title\n            else:\n                newLabel=title\n        else:\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+text\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+text\n            else:\n                newLabel=text\n\n        node\['label'].setValue(newLabel)\n\n    if name==\"font_size\":\n        new_font_size = node\[\"font_size\"].value()\n        node\['note_font_size'].setValue(new_font_size)\n\n    del newLabel\n\nexcept:\n    pass\n"
tile_color 0x334c75ff
label "Multiplicative Matte Less\nMultuplicative - Pixel Math"
note_font_size 36
note_font_color 0x40404ff
selected true
xpos -6869
ypos 7317
bdwidth 518
bdheight 897
z_order 2
addUserKnob {20 Settings}
addUserKnob {43 text l Text}
text "Multiplicative Matte Less\nMultuplicative - Pixel Math"
addUserKnob {7 font_size l "Font Size" R 10 100}
font_size 36
addUserKnob {4 alignment l "" -STARTLINE M {left center right}}
addUserKnob {26 divider1 l "" +STARTLINE}
addUserKnob {26 S01 l " " T " "}
addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import random\nn=nuke.thisNode()\nr,g,b=\[(float(random.randint( 20, 40)))/100,(float(random.randint( 10, 50)))/100,(float(random.randint( 15, 60)))/100]\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (r*255,g*255,b*255,1),16) )\n"}
addUserKnob {22 red l " <img src=\"F_r.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.77, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 orange l " <img src=\"F_o.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 yellow l " <img src=\"F_y.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 green l " <img src=\"F_g.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 cyan l " <img src=\"F_c.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 blue l " <img src=\"F_b.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.7, 0.76]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 darkblue l " <img src=\"F_db.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.74, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 magenta l " <img src=\"F_m.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.74, 0.65]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 pink l " <img src=\"F_p.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.74, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {26 S08 l " " T " "}
addUserKnob {4 oz_appearance l appearance -STARTLINE M {Fill Border}}
addUserKnob {7 oz_border_width l width -STARTLINE R 0 10}
oz_border_width 2
addUserKnob {26 divider2 l "" +STARTLINE}
addUserKnob {26 S02 l " " T " "}
addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\ngrow(n,50)"}
addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\nshrink(n,50)"}
addUserKnob {26 S03 l " " -STARTLINE T "     "}
addUserKnob {22 encompassSelectedNodes l " <img src=\"oz_encompass.png\">" -STARTLINE T "this = nuke.thisNode()\npadding = this\['sides'].getValue()\nif this.isSelected:\n    this.setSelected(False)\nselNodes = nuke.selectedNodes()\n        \ndef nodeIsInside (node, backdropNode):\n    # Returns true if node geometry is inside backdropNode otherwise returns false\n    topLeftNode = \[node.xpos(), node.ypos()]\n    topLeftBackDrop = \[backdropNode.xpos(), backdropNode.ypos()]\n    bottomRightNode = \[node.xpos() + node.screenWidth(), node.ypos() + node.screenHeight()]\n    bottomRightBackdrop = \[backdropNode.xpos() + backdropNode.screenWidth(), backdropNode.ypos() + backdropNode.screenHeight()]\n                    \n    topLeft = ( topLeftNode\[0] >= topLeftBackDrop\[0] ) and ( topLeftNode\[1] >= topLeftBackDrop\[1] )\n    bottomRight = ( bottomRightNode\[0] <= bottomRightBackdrop\[0] ) and ( bottomRightNode\[1] <= bottomRightBackdrop\[1] )\n                    \n    return topLeft and bottomRight\n\nif not selNodes:\n    nuke.message('Some nodes should be selected')\nelse:\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in selNodes])\n    bdY = min(\[node.ypos() for node in selNodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in selNodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in selNodes]) - bdY\n                        \n    zOrder = 0\n    selectedBackdropNodes = nuke.selectedNodes( \"BackdropNode\" )\n\n    #if there are backdropNodes selected put the new one immediately behind the farthest one\n                \n    if len( selectedBackdropNodes ):\n        zOrder = min( \[node.knob( \"z_order\" ).value() for node in selectedBackdropNodes] ) - 1\n    else :\n        #otherwise (no backdrop in selection) find the nearest backdrop if exists and set the new one in front of it\n        nonSelectedBackdropNodes = nuke.allNodes(\"BackdropNode\")\n        for nonBackdrop in selNodes:\n            for backdrop in nonSelectedBackdropNodes:\n                if nodeIsInside( nonBackdrop, backdrop ):\n                    zOrder = max( zOrder, backdrop.knob( \"z_order\" ).value() + 1 )\n    \n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-padding, -(padding+70), padding, padding)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    this\['xpos'].setValue(bdX)\n    this\['bdwidth'].setValue(bdW)\n    this\['ypos'].setValue(bdY)\n    this\['bdheight'].setValue(bdH)\n    this\['z_order'].setValue(zOrder)\n"}
addUserKnob {26 S04 l " " -STARTLINE T " "}
addUserKnob {3 sides l "" -STARTLINE}
sides 50
addUserKnob {26 divider3 l "" +STARTLINE}
addUserKnob {26 S05 l " " -STARTLINE T " "}
addUserKnob {26 pos_text l Position -STARTLINE T " "}
addUserKnob {3 node_position_x l x -STARTLINE}
node_position_x 26876
addUserKnob {3 node_position_y l y -STARTLINE}
node_position_y 511
addUserKnob {26 S06 l " " T " "}
addUserKnob {14 sizeNode l Size -STARTLINE R 0 100}
sizeNode {518 897}
addUserKnob {26 S07 l " " -STARTLINE T "     "}
addUserKnob {3 zorder l "Z Order" -STARTLINE}
zorder 2
}
BackdropNode {
inputs 0
name BackdropNode50
knobChanged "try:\n    node=nuke.thisNode()\n    knob=nuke.thisKnob()\n    name=knob.name()\n\n    def updateKnobs():\n        nodeWidth=node\['bdwidth'].getValue()\n        nodeHeight=node\['bdheight'].getValue()\n        node\['sizeNode'].setValue(\[int(nodeWidth),int(nodeHeight)])\n        node\['node_position_x'].setValue(int(node\['xpos'].value()))\n        node\['node_position_y'].setValue(int(node\['ypos'].value()))\n        node\['zorder'].setValue(int(node\['z_order'].getValue()))\n        node\['font_size'].setValue(int(node\['note_font_size'].getValue()))\n        node\['oz_appearance'].setValue( node\['appearance'].value() )\n        node\['oz_border_width'].setValue( node\['border_width'].value() )\n        #node\['fontColor'].setValue(int(node\['note_font_color'].getValue()))\n\n    def updateLabelKnob():\n        curLabel = node\['label'].getValue()\n        if '<p align=center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=center>', ''))\n            node\['alignment'].setValue(1)\n        elif '<p align=right>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=right>', ''))\n            node\['alignment'].setValue(2)\n        elif '<center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<center>', ''))\n            node\['alignment'].setValue(1)\n        else:\n            node\['text'].setValue(curLabel)\n            node\['alignment'].setValue(0)\n\n    ### OPENING SETUP\n    if name=='showPanel':\n        updateKnobs()\n        updateLabelKnob()\n\n    ### UPDATE STYLE\n    if name in \['oz_appearance', 'oz_border_width']:\n        node\['appearance'].setValue( node\['oz_appearance'].value() )\n        node\['border_width'].setValue( node\['oz_border_width'].value() )\n\n    ### CHANGE THE SIZE OF THE NODE\n    if name=='sizeNode':\n        node\['bdwidth'].setValue(int(node\['sizeNode'].getValue()\[0]))\n        node\['bdheight'].setValue(int(node\['sizeNode'].getValue()\[1]))\n\n    ### POSITION\n    if name=='node_position_x' or name=='node_position_y':\n        node.setXYpos(int(node\['node_position_x'].getValue()),int(node\['node_position_y'].getValue()))\n\n    ### ZORDER\n    if name=='zorder':\n        node\['z_order'].setValue(node\['zorder'].getValue())\n\n    ### UPDATE THE 'CURRENT SIZE' AND ORDER\n    #if name=='bdwidth' or name=='bdheight' or name=='z_order':\n    if name in \['bdwidth', 'bdheight', 'z_order']:\n        updateKnobs()\n\n    ### UPDATE LABEL\n    title = node\['name'].value()\n    text = node\['text'].value()\n\n    if name in \['text', 'alignment', 'title']:\n        if text=='':\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+title\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+title\n            else:\n                newLabel=title\n        else:\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+text\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+text\n            else:\n                newLabel=text\n\n        node\['label'].setValue(newLabel)\n\n    if name==\"font_size\":\n        new_font_size = node\[\"font_size\"].value()\n        node\['note_font_size'].setValue(new_font_size)\n\n    del newLabel\n\nexcept:\n    pass\n"
tile_color 0x334c75ff
label "Multiplicative Matte Less\nMultuplicative - Despill/Colour"
note_font_size 36
note_font_color 0x40404ff
selected true
xpos -5184
ypos 7330
bdwidth 518
bdheight 897
z_order 2
addUserKnob {20 Settings}
addUserKnob {43 text l Text}
text "Multiplicative Matte Less\nMultuplicative - Despill/Colour"
addUserKnob {7 font_size l "Font Size" R 10 100}
font_size 36
addUserKnob {4 alignment l "" -STARTLINE M {left center right}}
addUserKnob {26 divider1 l "" +STARTLINE}
addUserKnob {26 S01 l " " T " "}
addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import random\nn=nuke.thisNode()\nr,g,b=\[(float(random.randint( 20, 40)))/100,(float(random.randint( 10, 50)))/100,(float(random.randint( 15, 60)))/100]\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (r*255,g*255,b*255,1),16) )\n"}
addUserKnob {22 red l " <img src=\"F_r.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.77, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 orange l " <img src=\"F_o.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 yellow l " <img src=\"F_y.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 green l " <img src=\"F_g.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 cyan l " <img src=\"F_c.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 blue l " <img src=\"F_b.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.7, 0.76]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 darkblue l " <img src=\"F_db.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.74, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 magenta l " <img src=\"F_m.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.74, 0.65]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 pink l " <img src=\"F_p.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.74, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {26 S08 l " " T " "}
addUserKnob {4 oz_appearance l appearance -STARTLINE M {Fill Border}}
addUserKnob {7 oz_border_width l width -STARTLINE R 0 10}
oz_border_width 2
addUserKnob {26 divider2 l "" +STARTLINE}
addUserKnob {26 S02 l " " T " "}
addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\ngrow(n,50)"}
addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\nshrink(n,50)"}
addUserKnob {26 S03 l " " -STARTLINE T "     "}
addUserKnob {22 encompassSelectedNodes l " <img src=\"oz_encompass.png\">" -STARTLINE T "this = nuke.thisNode()\npadding = this\['sides'].getValue()\nif this.isSelected:\n    this.setSelected(False)\nselNodes = nuke.selectedNodes()\n        \ndef nodeIsInside (node, backdropNode):\n    # Returns true if node geometry is inside backdropNode otherwise returns false\n    topLeftNode = \[node.xpos(), node.ypos()]\n    topLeftBackDrop = \[backdropNode.xpos(), backdropNode.ypos()]\n    bottomRightNode = \[node.xpos() + node.screenWidth(), node.ypos() + node.screenHeight()]\n    bottomRightBackdrop = \[backdropNode.xpos() + backdropNode.screenWidth(), backdropNode.ypos() + backdropNode.screenHeight()]\n                    \n    topLeft = ( topLeftNode\[0] >= topLeftBackDrop\[0] ) and ( topLeftNode\[1] >= topLeftBackDrop\[1] )\n    bottomRight = ( bottomRightNode\[0] <= bottomRightBackdrop\[0] ) and ( bottomRightNode\[1] <= bottomRightBackdrop\[1] )\n                    \n    return topLeft and bottomRight\n\nif not selNodes:\n    nuke.message('Some nodes should be selected')\nelse:\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in selNodes])\n    bdY = min(\[node.ypos() for node in selNodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in selNodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in selNodes]) - bdY\n                        \n    zOrder = 0\n    selectedBackdropNodes = nuke.selectedNodes( \"BackdropNode\" )\n\n    #if there are backdropNodes selected put the new one immediately behind the farthest one\n                \n    if len( selectedBackdropNodes ):\n        zOrder = min( \[node.knob( \"z_order\" ).value() for node in selectedBackdropNodes] ) - 1\n    else :\n        #otherwise (no backdrop in selection) find the nearest backdrop if exists and set the new one in front of it\n        nonSelectedBackdropNodes = nuke.allNodes(\"BackdropNode\")\n        for nonBackdrop in selNodes:\n            for backdrop in nonSelectedBackdropNodes:\n                if nodeIsInside( nonBackdrop, backdrop ):\n                    zOrder = max( zOrder, backdrop.knob( \"z_order\" ).value() + 1 )\n    \n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-padding, -(padding+70), padding, padding)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    this\['xpos'].setValue(bdX)\n    this\['bdwidth'].setValue(bdW)\n    this\['ypos'].setValue(bdY)\n    this\['bdheight'].setValue(bdH)\n    this\['z_order'].setValue(zOrder)\n"}
addUserKnob {26 S04 l " " -STARTLINE T " "}
addUserKnob {3 sides l "" -STARTLINE}
sides 50
addUserKnob {26 divider3 l "" +STARTLINE}
addUserKnob {26 S05 l " " -STARTLINE T " "}
addUserKnob {26 pos_text l Position -STARTLINE T " "}
addUserKnob {3 node_position_x l x -STARTLINE}
node_position_x 28561
addUserKnob {3 node_position_y l y -STARTLINE}
node_position_y 524
addUserKnob {26 S06 l " " T " "}
addUserKnob {14 sizeNode l Size -STARTLINE R 0 100}
sizeNode {518 897}
addUserKnob {26 S07 l " " -STARTLINE T "     "}
addUserKnob {3 zorder l "Z Order" -STARTLINE}
zorder 2
}
BackdropNode {
inputs 0
name BackdropNode60
knobChanged "try:\n    node=nuke.thisNode()\n    knob=nuke.thisKnob()\n    name=knob.name()\n\n    def updateKnobs():\n        nodeWidth=node\['bdwidth'].getValue()\n        nodeHeight=node\['bdheight'].getValue()\n        node\['sizeNode'].setValue(\[int(nodeWidth),int(nodeHeight)])\n        node\['node_position_x'].setValue(int(node\['xpos'].value()))\n        node\['node_position_y'].setValue(int(node\['ypos'].value()))\n        node\['zorder'].setValue(int(node\['z_order'].getValue()))\n        node\['font_size'].setValue(int(node\['note_font_size'].getValue()))\n        node\['oz_appearance'].setValue( node\['appearance'].value() )\n        node\['oz_border_width'].setValue( node\['border_width'].value() )\n        #node\['fontColor'].setValue(int(node\['note_font_color'].getValue()))\n\n    def updateLabelKnob():\n        curLabel = node\['label'].getValue()\n        if '<p align=center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=center>', ''))\n            node\['alignment'].setValue(1)\n        elif '<p align=right>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=right>', ''))\n            node\['alignment'].setValue(2)\n        elif '<center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<center>', ''))\n            node\['alignment'].setValue(1)\n        else:\n            node\['text'].setValue(curLabel)\n            node\['alignment'].setValue(0)\n\n    ### OPENING SETUP\n    if name=='showPanel':\n        updateKnobs()\n        updateLabelKnob()\n\n    ### UPDATE STYLE\n    if name in \['oz_appearance', 'oz_border_width']:\n        node\['appearance'].setValue( node\['oz_appearance'].value() )\n        node\['border_width'].setValue( node\['oz_border_width'].value() )\n\n    ### CHANGE THE SIZE OF THE NODE\n    if name=='sizeNode':\n        node\['bdwidth'].setValue(int(node\['sizeNode'].getValue()\[0]))\n        node\['bdheight'].setValue(int(node\['sizeNode'].getValue()\[1]))\n\n    ### POSITION\n    if name=='node_position_x' or name=='node_position_y':\n        node.setXYpos(int(node\['node_position_x'].getValue()),int(node\['node_position_y'].getValue()))\n\n    ### ZORDER\n    if name=='zorder':\n        node\['z_order'].setValue(node\['zorder'].getValue())\n\n    ### UPDATE THE 'CURRENT SIZE' AND ORDER\n    #if name=='bdwidth' or name=='bdheight' or name=='z_order':\n    if name in \['bdwidth', 'bdheight', 'z_order']:\n        updateKnobs()\n\n    ### UPDATE LABEL\n    title = node\['name'].value()\n    text = node\['text'].value()\n\n    if name in \['text', 'alignment', 'title']:\n        if text=='':\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+title\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+title\n            else:\n                newLabel=title\n        else:\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+text\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+text\n            else:\n                newLabel=text\n\n        node\['label'].setValue(newLabel)\n\n    if name==\"font_size\":\n        new_font_size = node\[\"font_size\"].value()\n        node\['note_font_size'].setValue(new_font_size)\n\n    del newLabel\n\nexcept:\n    pass\n"
tile_color 0x334c75ff
label "Additive Matte Less\nAdditive - Pixel Math"
note_font_size 36
note_font_color 0x40404ff
selected true
xpos -3864
ypos 7317
bdwidth 518
bdheight 897
z_order 2
addUserKnob {20 Settings}
addUserKnob {43 text l Text}
text "Additive Matte Less\nAdditive - Pixel Math"
addUserKnob {7 font_size l "Font Size" R 10 100}
font_size 36
addUserKnob {4 alignment l "" -STARTLINE M {left center right}}
addUserKnob {26 divider1 l "" +STARTLINE}
addUserKnob {26 S01 l " " T " "}
addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import random\nn=nuke.thisNode()\nr,g,b=\[(float(random.randint( 20, 40)))/100,(float(random.randint( 10, 50)))/100,(float(random.randint( 15, 60)))/100]\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (r*255,g*255,b*255,1),16) )\n"}
addUserKnob {22 red l " <img src=\"F_r.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.77, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 orange l " <img src=\"F_o.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 yellow l " <img src=\"F_y.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 green l " <img src=\"F_g.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 cyan l " <img src=\"F_c.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 blue l " <img src=\"F_b.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.7, 0.76]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 darkblue l " <img src=\"F_db.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.74, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 magenta l " <img src=\"F_m.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.74, 0.65]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 pink l " <img src=\"F_p.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.74, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {26 S08 l " " T " "}
addUserKnob {4 oz_appearance l appearance -STARTLINE M {Fill Border}}
addUserKnob {7 oz_border_width l width -STARTLINE R 0 10}
oz_border_width 2
addUserKnob {26 divider2 l "" +STARTLINE}
addUserKnob {26 S02 l " " T " "}
addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\ngrow(n,50)"}
addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\nshrink(n,50)"}
addUserKnob {26 S03 l " " -STARTLINE T "     "}
addUserKnob {22 encompassSelectedNodes l " <img src=\"oz_encompass.png\">" -STARTLINE T "this = nuke.thisNode()\npadding = this\['sides'].getValue()\nif this.isSelected:\n    this.setSelected(False)\nselNodes = nuke.selectedNodes()\n        \ndef nodeIsInside (node, backdropNode):\n    # Returns true if node geometry is inside backdropNode otherwise returns false\n    topLeftNode = \[node.xpos(), node.ypos()]\n    topLeftBackDrop = \[backdropNode.xpos(), backdropNode.ypos()]\n    bottomRightNode = \[node.xpos() + node.screenWidth(), node.ypos() + node.screenHeight()]\n    bottomRightBackdrop = \[backdropNode.xpos() + backdropNode.screenWidth(), backdropNode.ypos() + backdropNode.screenHeight()]\n                    \n    topLeft = ( topLeftNode\[0] >= topLeftBackDrop\[0] ) and ( topLeftNode\[1] >= topLeftBackDrop\[1] )\n    bottomRight = ( bottomRightNode\[0] <= bottomRightBackdrop\[0] ) and ( bottomRightNode\[1] <= bottomRightBackdrop\[1] )\n                    \n    return topLeft and bottomRight\n\nif not selNodes:\n    nuke.message('Some nodes should be selected')\nelse:\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in selNodes])\n    bdY = min(\[node.ypos() for node in selNodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in selNodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in selNodes]) - bdY\n                        \n    zOrder = 0\n    selectedBackdropNodes = nuke.selectedNodes( \"BackdropNode\" )\n\n    #if there are backdropNodes selected put the new one immediately behind the farthest one\n                \n    if len( selectedBackdropNodes ):\n        zOrder = min( \[node.knob( \"z_order\" ).value() for node in selectedBackdropNodes] ) - 1\n    else :\n        #otherwise (no backdrop in selection) find the nearest backdrop if exists and set the new one in front of it\n        nonSelectedBackdropNodes = nuke.allNodes(\"BackdropNode\")\n        for nonBackdrop in selNodes:\n            for backdrop in nonSelectedBackdropNodes:\n                if nodeIsInside( nonBackdrop, backdrop ):\n                    zOrder = max( zOrder, backdrop.knob( \"z_order\" ).value() + 1 )\n    \n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-padding, -(padding+70), padding, padding)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    this\['xpos'].setValue(bdX)\n    this\['bdwidth'].setValue(bdW)\n    this\['ypos'].setValue(bdY)\n    this\['bdheight'].setValue(bdH)\n    this\['z_order'].setValue(zOrder)\n"}
addUserKnob {26 S04 l " " -STARTLINE T " "}
addUserKnob {3 sides l "" -STARTLINE}
sides 50
addUserKnob {26 divider3 l "" +STARTLINE}
addUserKnob {26 S05 l " " -STARTLINE T " "}
addUserKnob {26 pos_text l Position -STARTLINE T " "}
addUserKnob {3 node_position_x l x -STARTLINE}
node_position_x 29881
addUserKnob {3 node_position_y l y -STARTLINE}
node_position_y 511
addUserKnob {26 S06 l " " T " "}
addUserKnob {14 sizeNode l Size -STARTLINE R 0 100}
sizeNode {518 897}
addUserKnob {26 S07 l " " -STARTLINE T "     "}
addUserKnob {3 zorder l "Z Order" -STARTLINE}
zorder 2
}
BackdropNode {
inputs 0
name BackdropNode61
knobChanged "try:\n    node=nuke.thisNode()\n    knob=nuke.thisKnob()\n    name=knob.name()\n\n    def updateKnobs():\n        nodeWidth=node\['bdwidth'].getValue()\n        nodeHeight=node\['bdheight'].getValue()\n        node\['sizeNode'].setValue(\[int(nodeWidth),int(nodeHeight)])\n        node\['node_position_x'].setValue(int(node\['xpos'].value()))\n        node\['node_position_y'].setValue(int(node\['ypos'].value()))\n        node\['zorder'].setValue(int(node\['z_order'].getValue()))\n        node\['font_size'].setValue(int(node\['note_font_size'].getValue()))\n        node\['oz_appearance'].setValue( node\['appearance'].value() )\n        node\['oz_border_width'].setValue( node\['border_width'].value() )\n        #node\['fontColor'].setValue(int(node\['note_font_color'].getValue()))\n\n    def updateLabelKnob():\n        curLabel = node\['label'].getValue()\n        if '<p align=center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=center>', ''))\n            node\['alignment'].setValue(1)\n        elif '<p align=right>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=right>', ''))\n            node\['alignment'].setValue(2)\n        elif '<center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<center>', ''))\n            node\['alignment'].setValue(1)\n        else:\n            node\['text'].setValue(curLabel)\n            node\['alignment'].setValue(0)\n\n    ### OPENING SETUP\n    if name=='showPanel':\n        updateKnobs()\n        updateLabelKnob()\n\n    ### UPDATE STYLE\n    if name in \['oz_appearance', 'oz_border_width']:\n        node\['appearance'].setValue( node\['oz_appearance'].value() )\n        node\['border_width'].setValue( node\['oz_border_width'].value() )\n\n    ### CHANGE THE SIZE OF THE NODE\n    if name=='sizeNode':\n        node\['bdwidth'].setValue(int(node\['sizeNode'].getValue()\[0]))\n        node\['bdheight'].setValue(int(node\['sizeNode'].getValue()\[1]))\n\n    ### POSITION\n    if name=='node_position_x' or name=='node_position_y':\n        node.setXYpos(int(node\['node_position_x'].getValue()),int(node\['node_position_y'].getValue()))\n\n    ### ZORDER\n    if name=='zorder':\n        node\['z_order'].setValue(node\['zorder'].getValue())\n\n    ### UPDATE THE 'CURRENT SIZE' AND ORDER\n    #if name=='bdwidth' or name=='bdheight' or name=='z_order':\n    if name in \['bdwidth', 'bdheight', 'z_order']:\n        updateKnobs()\n\n    ### UPDATE LABEL\n    title = node\['name'].value()\n    text = node\['text'].value()\n\n    if name in \['text', 'alignment', 'title']:\n        if text=='':\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+title\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+title\n            else:\n                newLabel=title\n        else:\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+text\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+text\n            else:\n                newLabel=text\n\n        node\['label'].setValue(newLabel)\n\n    if name==\"font_size\":\n        new_font_size = node\[\"font_size\"].value()\n        node\['note_font_size'].setValue(new_font_size)\n\n    del newLabel\n\nexcept:\n    pass\n"
tile_color 0x334c75ff
label "Additive Matte Less\nAdditive - Despill/Colour"
note_font_size 36
note_font_color 0x40404ff
selected true
xpos -2179
ypos 7338
bdwidth 518
bdheight 897
z_order 2
addUserKnob {20 Settings}
addUserKnob {43 text l Text}
text "Additive Matte Less\nAdditive - Despill/Colour"
addUserKnob {7 font_size l "Font Size" R 10 100}
font_size 36
addUserKnob {4 alignment l "" -STARTLINE M {left center right}}
addUserKnob {26 divider1 l "" +STARTLINE}
addUserKnob {26 S01 l " " T " "}
addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import random\nn=nuke.thisNode()\nr,g,b=\[(float(random.randint( 20, 40)))/100,(float(random.randint( 10, 50)))/100,(float(random.randint( 15, 60)))/100]\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (r*255,g*255,b*255,1),16) )\n"}
addUserKnob {22 red l " <img src=\"F_r.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.77, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 orange l " <img src=\"F_o.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 yellow l " <img src=\"F_y.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 green l " <img src=\"F_g.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 cyan l " <img src=\"F_c.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 blue l " <img src=\"F_b.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.7, 0.76]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 darkblue l " <img src=\"F_db.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.74, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 magenta l " <img src=\"F_m.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.74, 0.65]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 pink l " <img src=\"F_p.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.74, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {26 S08 l " " T " "}
addUserKnob {4 oz_appearance l appearance -STARTLINE M {Fill Border}}
addUserKnob {7 oz_border_width l width -STARTLINE R 0 10}
oz_border_width 2
addUserKnob {26 divider2 l "" +STARTLINE}
addUserKnob {26 S02 l " " T " "}
addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\ngrow(n,50)"}
addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\nshrink(n,50)"}
addUserKnob {26 S03 l " " -STARTLINE T "     "}
addUserKnob {22 encompassSelectedNodes l " <img src=\"oz_encompass.png\">" -STARTLINE T "this = nuke.thisNode()\npadding = this\['sides'].getValue()\nif this.isSelected:\n    this.setSelected(False)\nselNodes = nuke.selectedNodes()\n        \ndef nodeIsInside (node, backdropNode):\n    # Returns true if node geometry is inside backdropNode otherwise returns false\n    topLeftNode = \[node.xpos(), node.ypos()]\n    topLeftBackDrop = \[backdropNode.xpos(), backdropNode.ypos()]\n    bottomRightNode = \[node.xpos() + node.screenWidth(), node.ypos() + node.screenHeight()]\n    bottomRightBackdrop = \[backdropNode.xpos() + backdropNode.screenWidth(), backdropNode.ypos() + backdropNode.screenHeight()]\n                    \n    topLeft = ( topLeftNode\[0] >= topLeftBackDrop\[0] ) and ( topLeftNode\[1] >= topLeftBackDrop\[1] )\n    bottomRight = ( bottomRightNode\[0] <= bottomRightBackdrop\[0] ) and ( bottomRightNode\[1] <= bottomRightBackdrop\[1] )\n                    \n    return topLeft and bottomRight\n\nif not selNodes:\n    nuke.message('Some nodes should be selected')\nelse:\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in selNodes])\n    bdY = min(\[node.ypos() for node in selNodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in selNodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in selNodes]) - bdY\n                        \n    zOrder = 0\n    selectedBackdropNodes = nuke.selectedNodes( \"BackdropNode\" )\n\n    #if there are backdropNodes selected put the new one immediately behind the farthest one\n                \n    if len( selectedBackdropNodes ):\n        zOrder = min( \[node.knob( \"z_order\" ).value() for node in selectedBackdropNodes] ) - 1\n    else :\n        #otherwise (no backdrop in selection) find the nearest backdrop if exists and set the new one in front of it\n        nonSelectedBackdropNodes = nuke.allNodes(\"BackdropNode\")\n        for nonBackdrop in selNodes:\n            for backdrop in nonSelectedBackdropNodes:\n                if nodeIsInside( nonBackdrop, backdrop ):\n                    zOrder = max( zOrder, backdrop.knob( \"z_order\" ).value() + 1 )\n    \n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-padding, -(padding+70), padding, padding)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    this\['xpos'].setValue(bdX)\n    this\['bdwidth'].setValue(bdW)\n    this\['ypos'].setValue(bdY)\n    this\['bdheight'].setValue(bdH)\n    this\['z_order'].setValue(zOrder)\n"}
addUserKnob {26 S04 l " " -STARTLINE T " "}
addUserKnob {3 sides l "" -STARTLINE}
sides 50
addUserKnob {26 divider3 l "" +STARTLINE}
addUserKnob {26 S05 l " " -STARTLINE T " "}
addUserKnob {26 pos_text l Position -STARTLINE T " "}
addUserKnob {3 node_position_x l x -STARTLINE}
node_position_x 31566
addUserKnob {3 node_position_y l y -STARTLINE}
node_position_y 532
addUserKnob {26 S06 l " " T " "}
addUserKnob {14 sizeNode l Size -STARTLINE R 0 100}
sizeNode {518 897}
addUserKnob {26 S07 l " " -STARTLINE T "     "}
addUserKnob {3 zorder l "Z Order" -STARTLINE}
zorder 2
}
BackdropNode {
inputs 0
name BackdropNode64
knobChanged "try:\n    node=nuke.thisNode()\n    knob=nuke.thisKnob()\n    name=knob.name()\n\n    def updateKnobs():\n        nodeWidth=node\['bdwidth'].getValue()\n        nodeHeight=node\['bdheight'].getValue()\n        node\['sizeNode'].setValue(\[int(nodeWidth),int(nodeHeight)])\n        node\['node_position_x'].setValue(int(node\['xpos'].value()))\n        node\['node_position_y'].setValue(int(node\['ypos'].value()))\n        node\['zorder'].setValue(int(node\['z_order'].getValue()))\n        node\['font_size'].setValue(int(node\['note_font_size'].getValue()))\n        node\['oz_appearance'].setValue( node\['appearance'].value() )\n        node\['oz_border_width'].setValue( node\['border_width'].value() )\n        #node\['fontColor'].setValue(int(node\['note_font_color'].getValue()))\n\n    def updateLabelKnob():\n        curLabel = node\['label'].getValue()\n        if '<p align=center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=center>', ''))\n            node\['alignment'].setValue(1)\n        elif '<p align=right>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=right>', ''))\n            node\['alignment'].setValue(2)\n        elif '<center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<center>', ''))\n            node\['alignment'].setValue(1)\n        else:\n            node\['text'].setValue(curLabel)\n            node\['alignment'].setValue(0)\n\n    ### OPENING SETUP\n    if name=='showPanel':\n        updateKnobs()\n        updateLabelKnob()\n\n    ### UPDATE STYLE\n    if name in \['oz_appearance', 'oz_border_width']:\n        node\['appearance'].setValue( node\['oz_appearance'].value() )\n        node\['border_width'].setValue( node\['oz_border_width'].value() )\n\n    ### CHANGE THE SIZE OF THE NODE\n    if name=='sizeNode':\n        node\['bdwidth'].setValue(int(node\['sizeNode'].getValue()\[0]))\n        node\['bdheight'].setValue(int(node\['sizeNode'].getValue()\[1]))\n\n    ### POSITION\n    if name=='node_position_x' or name=='node_position_y':\n        node.setXYpos(int(node\['node_position_x'].getValue()),int(node\['node_position_y'].getValue()))\n\n    ### ZORDER\n    if name=='zorder':\n        node\['z_order'].setValue(node\['zorder'].getValue())\n\n    ### UPDATE THE 'CURRENT SIZE' AND ORDER\n    #if name=='bdwidth' or name=='bdheight' or name=='z_order':\n    if name in \['bdwidth', 'bdheight', 'z_order']:\n        updateKnobs()\n\n    ### UPDATE LABEL\n    title = node\['name'].value()\n    text = node\['text'].value()\n\n    if name in \['text', 'alignment', 'title']:\n        if text=='':\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+title\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+title\n            else:\n                newLabel=title\n        else:\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+text\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+text\n            else:\n                newLabel=text\n\n        node\['label'].setValue(newLabel)\n\n    if name==\"font_size\":\n        new_font_size = node\[\"font_size\"].value()\n        node\['note_font_size'].setValue(new_font_size)\n\n    del newLabel\n\nexcept:\n    pass\n"
tile_color 0x334c75ff
label "Multiplicative Matte Less\nMultuplicative - Pixel Math"
note_font_size 36
note_font_color 0x40404ff
selected true
xpos -6860
ypos 8840
bdwidth 518
bdheight 897
z_order 2
addUserKnob {20 Settings}
addUserKnob {43 text l Text}
text "Multiplicative Matte Less\nMultuplicative - Pixel Math"
addUserKnob {7 font_size l "Font Size" R 10 100}
font_size 36
addUserKnob {4 alignment l "" -STARTLINE M {left center right}}
addUserKnob {26 divider1 l "" +STARTLINE}
addUserKnob {26 S01 l " " T " "}
addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import random\nn=nuke.thisNode()\nr,g,b=\[(float(random.randint( 20, 40)))/100,(float(random.randint( 10, 50)))/100,(float(random.randint( 15, 60)))/100]\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (r*255,g*255,b*255,1),16) )\n"}
addUserKnob {22 red l " <img src=\"F_r.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.77, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 orange l " <img src=\"F_o.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 yellow l " <img src=\"F_y.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 green l " <img src=\"F_g.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 cyan l " <img src=\"F_c.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 blue l " <img src=\"F_b.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.7, 0.76]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 darkblue l " <img src=\"F_db.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.74, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 magenta l " <img src=\"F_m.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.74, 0.65]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 pink l " <img src=\"F_p.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.74, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {26 S08 l " " T " "}
addUserKnob {4 oz_appearance l appearance -STARTLINE M {Fill Border}}
addUserKnob {7 oz_border_width l width -STARTLINE R 0 10}
oz_border_width 2
addUserKnob {26 divider2 l "" +STARTLINE}
addUserKnob {26 S02 l " " T " "}
addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\ngrow(n,50)"}
addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\nshrink(n,50)"}
addUserKnob {26 S03 l " " -STARTLINE T "     "}
addUserKnob {22 encompassSelectedNodes l " <img src=\"oz_encompass.png\">" -STARTLINE T "this = nuke.thisNode()\npadding = this\['sides'].getValue()\nif this.isSelected:\n    this.setSelected(False)\nselNodes = nuke.selectedNodes()\n        \ndef nodeIsInside (node, backdropNode):\n    # Returns true if node geometry is inside backdropNode otherwise returns false\n    topLeftNode = \[node.xpos(), node.ypos()]\n    topLeftBackDrop = \[backdropNode.xpos(), backdropNode.ypos()]\n    bottomRightNode = \[node.xpos() + node.screenWidth(), node.ypos() + node.screenHeight()]\n    bottomRightBackdrop = \[backdropNode.xpos() + backdropNode.screenWidth(), backdropNode.ypos() + backdropNode.screenHeight()]\n                    \n    topLeft = ( topLeftNode\[0] >= topLeftBackDrop\[0] ) and ( topLeftNode\[1] >= topLeftBackDrop\[1] )\n    bottomRight = ( bottomRightNode\[0] <= bottomRightBackdrop\[0] ) and ( bottomRightNode\[1] <= bottomRightBackdrop\[1] )\n                    \n    return topLeft and bottomRight\n\nif not selNodes:\n    nuke.message('Some nodes should be selected')\nelse:\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in selNodes])\n    bdY = min(\[node.ypos() for node in selNodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in selNodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in selNodes]) - bdY\n                        \n    zOrder = 0\n    selectedBackdropNodes = nuke.selectedNodes( \"BackdropNode\" )\n\n    #if there are backdropNodes selected put the new one immediately behind the farthest one\n                \n    if len( selectedBackdropNodes ):\n        zOrder = min( \[node.knob( \"z_order\" ).value() for node in selectedBackdropNodes] ) - 1\n    else :\n        #otherwise (no backdrop in selection) find the nearest backdrop if exists and set the new one in front of it\n        nonSelectedBackdropNodes = nuke.allNodes(\"BackdropNode\")\n        for nonBackdrop in selNodes:\n            for backdrop in nonSelectedBackdropNodes:\n                if nodeIsInside( nonBackdrop, backdrop ):\n                    zOrder = max( zOrder, backdrop.knob( \"z_order\" ).value() + 1 )\n    \n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-padding, -(padding+70), padding, padding)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    this\['xpos'].setValue(bdX)\n    this\['bdwidth'].setValue(bdW)\n    this\['ypos'].setValue(bdY)\n    this\['bdheight'].setValue(bdH)\n    this\['z_order'].setValue(zOrder)\n"}
addUserKnob {26 S04 l " " -STARTLINE T " "}
addUserKnob {3 sides l "" -STARTLINE}
sides 50
addUserKnob {26 divider3 l "" +STARTLINE}
addUserKnob {26 S05 l " " -STARTLINE T " "}
addUserKnob {26 pos_text l Position -STARTLINE T " "}
addUserKnob {3 node_position_x l x -STARTLINE}
node_position_x 26876
addUserKnob {3 node_position_y l y -STARTLINE}
node_position_y 511
addUserKnob {26 S06 l " " T " "}
addUserKnob {14 sizeNode l Size -STARTLINE R 0 100}
sizeNode {518 897}
addUserKnob {26 S07 l " " -STARTLINE T "     "}
addUserKnob {3 zorder l "Z Order" -STARTLINE}
zorder 2
}
BackdropNode {
inputs 0
name BackdropNode65
knobChanged "try:\n    node=nuke.thisNode()\n    knob=nuke.thisKnob()\n    name=knob.name()\n\n    def updateKnobs():\n        nodeWidth=node\['bdwidth'].getValue()\n        nodeHeight=node\['bdheight'].getValue()\n        node\['sizeNode'].setValue(\[int(nodeWidth),int(nodeHeight)])\n        node\['node_position_x'].setValue(int(node\['xpos'].value()))\n        node\['node_position_y'].setValue(int(node\['ypos'].value()))\n        node\['zorder'].setValue(int(node\['z_order'].getValue()))\n        node\['font_size'].setValue(int(node\['note_font_size'].getValue()))\n        node\['oz_appearance'].setValue( node\['appearance'].value() )\n        node\['oz_border_width'].setValue( node\['border_width'].value() )\n        #node\['fontColor'].setValue(int(node\['note_font_color'].getValue()))\n\n    def updateLabelKnob():\n        curLabel = node\['label'].getValue()\n        if '<p align=center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=center>', ''))\n            node\['alignment'].setValue(1)\n        elif '<p align=right>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=right>', ''))\n            node\['alignment'].setValue(2)\n        elif '<center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<center>', ''))\n            node\['alignment'].setValue(1)\n        else:\n            node\['text'].setValue(curLabel)\n            node\['alignment'].setValue(0)\n\n    ### OPENING SETUP\n    if name=='showPanel':\n        updateKnobs()\n        updateLabelKnob()\n\n    ### UPDATE STYLE\n    if name in \['oz_appearance', 'oz_border_width']:\n        node\['appearance'].setValue( node\['oz_appearance'].value() )\n        node\['border_width'].setValue( node\['oz_border_width'].value() )\n\n    ### CHANGE THE SIZE OF THE NODE\n    if name=='sizeNode':\n        node\['bdwidth'].setValue(int(node\['sizeNode'].getValue()\[0]))\n        node\['bdheight'].setValue(int(node\['sizeNode'].getValue()\[1]))\n\n    ### POSITION\n    if name=='node_position_x' or name=='node_position_y':\n        node.setXYpos(int(node\['node_position_x'].getValue()),int(node\['node_position_y'].getValue()))\n\n    ### ZORDER\n    if name=='zorder':\n        node\['z_order'].setValue(node\['zorder'].getValue())\n\n    ### UPDATE THE 'CURRENT SIZE' AND ORDER\n    #if name=='bdwidth' or name=='bdheight' or name=='z_order':\n    if name in \['bdwidth', 'bdheight', 'z_order']:\n        updateKnobs()\n\n    ### UPDATE LABEL\n    title = node\['name'].value()\n    text = node\['text'].value()\n\n    if name in \['text', 'alignment', 'title']:\n        if text=='':\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+title\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+title\n            else:\n                newLabel=title\n        else:\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+text\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+text\n            else:\n                newLabel=text\n\n        node\['label'].setValue(newLabel)\n\n    if name==\"font_size\":\n        new_font_size = node\[\"font_size\"].value()\n        node\['note_font_size'].setValue(new_font_size)\n\n    del newLabel\n\nexcept:\n    pass\n"
tile_color 0x334c75ff
label "Multiplicative Matte Less\nMultuplicative - Despill/Colour"
note_font_size 36
note_font_color 0x40404ff
selected true
xpos -5175
ypos 8853
bdwidth 518
bdheight 897
z_order 2
addUserKnob {20 Settings}
addUserKnob {43 text l Text}
text "Multiplicative Matte Less\nMultuplicative - Despill/Colour"
addUserKnob {7 font_size l "Font Size" R 10 100}
font_size 36
addUserKnob {4 alignment l "" -STARTLINE M {left center right}}
addUserKnob {26 divider1 l "" +STARTLINE}
addUserKnob {26 S01 l " " T " "}
addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import random\nn=nuke.thisNode()\nr,g,b=\[(float(random.randint( 20, 40)))/100,(float(random.randint( 10, 50)))/100,(float(random.randint( 15, 60)))/100]\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (r*255,g*255,b*255,1),16) )\n"}
addUserKnob {22 red l " <img src=\"F_r.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.77, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 orange l " <img src=\"F_o.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 yellow l " <img src=\"F_y.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 green l " <img src=\"F_g.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 cyan l " <img src=\"F_c.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 blue l " <img src=\"F_b.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.7, 0.76]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 darkblue l " <img src=\"F_db.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.74, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 magenta l " <img src=\"F_m.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.74, 0.65]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 pink l " <img src=\"F_p.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.74, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {26 S08 l " " T " "}
addUserKnob {4 oz_appearance l appearance -STARTLINE M {Fill Border}}
addUserKnob {7 oz_border_width l width -STARTLINE R 0 10}
oz_border_width 2
addUserKnob {26 divider2 l "" +STARTLINE}
addUserKnob {26 S02 l " " T " "}
addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\ngrow(n,50)"}
addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\nshrink(n,50)"}
addUserKnob {26 S03 l " " -STARTLINE T "     "}
addUserKnob {22 encompassSelectedNodes l " <img src=\"oz_encompass.png\">" -STARTLINE T "this = nuke.thisNode()\npadding = this\['sides'].getValue()\nif this.isSelected:\n    this.setSelected(False)\nselNodes = nuke.selectedNodes()\n        \ndef nodeIsInside (node, backdropNode):\n    # Returns true if node geometry is inside backdropNode otherwise returns false\n    topLeftNode = \[node.xpos(), node.ypos()]\n    topLeftBackDrop = \[backdropNode.xpos(), backdropNode.ypos()]\n    bottomRightNode = \[node.xpos() + node.screenWidth(), node.ypos() + node.screenHeight()]\n    bottomRightBackdrop = \[backdropNode.xpos() + backdropNode.screenWidth(), backdropNode.ypos() + backdropNode.screenHeight()]\n                    \n    topLeft = ( topLeftNode\[0] >= topLeftBackDrop\[0] ) and ( topLeftNode\[1] >= topLeftBackDrop\[1] )\n    bottomRight = ( bottomRightNode\[0] <= bottomRightBackdrop\[0] ) and ( bottomRightNode\[1] <= bottomRightBackdrop\[1] )\n                    \n    return topLeft and bottomRight\n\nif not selNodes:\n    nuke.message('Some nodes should be selected')\nelse:\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in selNodes])\n    bdY = min(\[node.ypos() for node in selNodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in selNodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in selNodes]) - bdY\n                        \n    zOrder = 0\n    selectedBackdropNodes = nuke.selectedNodes( \"BackdropNode\" )\n\n    #if there are backdropNodes selected put the new one immediately behind the farthest one\n                \n    if len( selectedBackdropNodes ):\n        zOrder = min( \[node.knob( \"z_order\" ).value() for node in selectedBackdropNodes] ) - 1\n    else :\n        #otherwise (no backdrop in selection) find the nearest backdrop if exists and set the new one in front of it\n        nonSelectedBackdropNodes = nuke.allNodes(\"BackdropNode\")\n        for nonBackdrop in selNodes:\n            for backdrop in nonSelectedBackdropNodes:\n                if nodeIsInside( nonBackdrop, backdrop ):\n                    zOrder = max( zOrder, backdrop.knob( \"z_order\" ).value() + 1 )\n    \n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-padding, -(padding+70), padding, padding)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    this\['xpos'].setValue(bdX)\n    this\['bdwidth'].setValue(bdW)\n    this\['ypos'].setValue(bdY)\n    this\['bdheight'].setValue(bdH)\n    this\['z_order'].setValue(zOrder)\n"}
addUserKnob {26 S04 l " " -STARTLINE T " "}
addUserKnob {3 sides l "" -STARTLINE}
sides 50
addUserKnob {26 divider3 l "" +STARTLINE}
addUserKnob {26 S05 l " " -STARTLINE T " "}
addUserKnob {26 pos_text l Position -STARTLINE T " "}
addUserKnob {3 node_position_x l x -STARTLINE}
node_position_x 28561
addUserKnob {3 node_position_y l y -STARTLINE}
node_position_y 524
addUserKnob {26 S06 l " " T " "}
addUserKnob {14 sizeNode l Size -STARTLINE R 0 100}
sizeNode {518 897}
addUserKnob {26 S07 l " " -STARTLINE T "     "}
addUserKnob {3 zorder l "Z Order" -STARTLINE}
zorder 2
}
BackdropNode {
inputs 0
name BackdropNode51
knobChanged "try:\n    node=nuke.thisNode()\n    knob=nuke.thisKnob()\n    name=knob.name()\n\n    def updateKnobs():\n        nodeWidth=node\['bdwidth'].getValue()\n        nodeHeight=node\['bdheight'].getValue()\n        node\['sizeNode'].setValue(\[int(nodeWidth),int(nodeHeight)])\n        node\['node_position_x'].setValue(int(node\['xpos'].value()))\n        node\['node_position_y'].setValue(int(node\['ypos'].value()))\n        node\['zorder'].setValue(int(node\['z_order'].getValue()))\n        node\['font_size'].setValue(int(node\['note_font_size'].getValue()))\n        node\['oz_appearance'].setValue( node\['appearance'].value() )\n        node\['oz_border_width'].setValue( node\['border_width'].value() )\n        #node\['fontColor'].setValue(int(node\['note_font_color'].getValue()))\n\n    def updateLabelKnob():\n        curLabel = node\['label'].getValue()\n        if '<p align=center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=center>', ''))\n            node\['alignment'].setValue(1)\n        elif '<p align=right>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=right>', ''))\n            node\['alignment'].setValue(2)\n        elif '<center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<center>', ''))\n            node\['alignment'].setValue(1)\n        else:\n            node\['text'].setValue(curLabel)\n            node\['alignment'].setValue(0)\n\n    ### OPENING SETUP\n    if name=='showPanel':\n        updateKnobs()\n        updateLabelKnob()\n\n    ### UPDATE STYLE\n    if name in \['oz_appearance', 'oz_border_width']:\n        node\['appearance'].setValue( node\['oz_appearance'].value() )\n        node\['border_width'].setValue( node\['oz_border_width'].value() )\n\n    ### CHANGE THE SIZE OF THE NODE\n    if name=='sizeNode':\n        node\['bdwidth'].setValue(int(node\['sizeNode'].getValue()\[0]))\n        node\['bdheight'].setValue(int(node\['sizeNode'].getValue()\[1]))\n\n    ### POSITION\n    if name=='node_position_x' or name=='node_position_y':\n        node.setXYpos(int(node\['node_position_x'].getValue()),int(node\['node_position_y'].getValue()))\n\n    ### ZORDER\n    if name=='zorder':\n        node\['z_order'].setValue(node\['zorder'].getValue())\n\n    ### UPDATE THE 'CURRENT SIZE' AND ORDER\n    #if name=='bdwidth' or name=='bdheight' or name=='z_order':\n    if name in \['bdwidth', 'bdheight', 'z_order']:\n        updateKnobs()\n\n    ### UPDATE LABEL\n    title = node\['name'].value()\n    text = node\['text'].value()\n\n    if name in \['text', 'alignment', 'title']:\n        if text=='':\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+title\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+title\n            else:\n                newLabel=title\n        else:\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+text\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+text\n            else:\n                newLabel=text\n\n        node\['label'].setValue(newLabel)\n\n    if name==\"font_size\":\n        new_font_size = node\[\"font_size\"].value()\n        node\['note_font_size'].setValue(new_font_size)\n\n    del newLabel\n\nexcept:\n    pass\n"
tile_color 0x387a4701
label "Instead of Dividing\ndespill is removing\nthe green and the\ngain in the grade shifts\nthe backing up to be \ncloser to 1 before \nmultiplying the result.\nIt's also worth using\ngamma to tweak the\ndetail\n"
note_font_size 15
selected true
xpos -5042
ypos 7587
bdwidth 160
bdheight 306
z_order 3
addUserKnob {20 Settings}
addUserKnob {43 text l Text}
text "Instead of Dividing\ndespill is removing\nthe green and the\ngain in the grade shifts\nthe backing up to be \ncloser to 1 before \nmultiplying the result.\nIt's also worth using\ngamma to tweak the\ndetail\n"
addUserKnob {7 font_size l "Font Size" R 10 100}
font_size 15
addUserKnob {4 alignment l "" -STARTLINE M {left center right}}
addUserKnob {26 divider1 l "" +STARTLINE}
addUserKnob {26 S01 l " " T " "}
addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import random\nn=nuke.thisNode()\nr,g,b=\[(float(random.randint( 20, 40)))/100,(float(random.randint( 10, 50)))/100,(float(random.randint( 15, 60)))/100]\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (r*255,g*255,b*255,1),16) )\n"}
addUserKnob {22 red l " <img src=\"F_r.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.77, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 orange l " <img src=\"F_o.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 yellow l " <img src=\"F_y.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 green l " <img src=\"F_g.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 cyan l " <img src=\"F_c.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 blue l " <img src=\"F_b.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.7, 0.76]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 darkblue l " <img src=\"F_db.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.74, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 magenta l " <img src=\"F_m.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.74, 0.65]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 pink l " <img src=\"F_p.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.74, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {26 S08 l " " T " "}
addUserKnob {4 oz_appearance l appearance -STARTLINE M {Fill Border}}
addUserKnob {7 oz_border_width l width -STARTLINE R 0 10}
oz_border_width 2
addUserKnob {26 divider2 l "" +STARTLINE}
addUserKnob {26 S02 l " " T " "}
addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\ngrow(n,50)"}
addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\nshrink(n,50)"}
addUserKnob {26 S03 l " " -STARTLINE T "     "}
addUserKnob {22 encompassSelectedNodes l " <img src=\"oz_encompass.png\">" -STARTLINE T "this = nuke.thisNode()\npadding = this\['sides'].getValue()\nif this.isSelected:\n    this.setSelected(False)\nselNodes = nuke.selectedNodes()\n        \ndef nodeIsInside (node, backdropNode):\n    # Returns true if node geometry is inside backdropNode otherwise returns false\n    topLeftNode = \[node.xpos(), node.ypos()]\n    topLeftBackDrop = \[backdropNode.xpos(), backdropNode.ypos()]\n    bottomRightNode = \[node.xpos() + node.screenWidth(), node.ypos() + node.screenHeight()]\n    bottomRightBackdrop = \[backdropNode.xpos() + backdropNode.screenWidth(), backdropNode.ypos() + backdropNode.screenHeight()]\n                    \n    topLeft = ( topLeftNode\[0] >= topLeftBackDrop\[0] ) and ( topLeftNode\[1] >= topLeftBackDrop\[1] )\n    bottomRight = ( bottomRightNode\[0] <= bottomRightBackdrop\[0] ) and ( bottomRightNode\[1] <= bottomRightBackdrop\[1] )\n                    \n    return topLeft and bottomRight\n\nif not selNodes:\n    nuke.message('Some nodes should be selected')\nelse:\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in selNodes])\n    bdY = min(\[node.ypos() for node in selNodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in selNodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in selNodes]) - bdY\n                        \n    zOrder = 0\n    selectedBackdropNodes = nuke.selectedNodes( \"BackdropNode\" )\n\n    #if there are backdropNodes selected put the new one immediately behind the farthest one\n                \n    if len( selectedBackdropNodes ):\n        zOrder = min( \[node.knob( \"z_order\" ).value() for node in selectedBackdropNodes] ) - 1\n    else :\n        #otherwise (no backdrop in selection) find the nearest backdrop if exists and set the new one in front of it\n        nonSelectedBackdropNodes = nuke.allNodes(\"BackdropNode\")\n        for nonBackdrop in selNodes:\n            for backdrop in nonSelectedBackdropNodes:\n                if nodeIsInside( nonBackdrop, backdrop ):\n                    zOrder = max( zOrder, backdrop.knob( \"z_order\" ).value() + 1 )\n    \n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-padding, -(padding+70), padding, padding)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    this\['xpos'].setValue(bdX)\n    this\['bdwidth'].setValue(bdW)\n    this\['ypos'].setValue(bdY)\n    this\['bdheight'].setValue(bdH)\n    this\['z_order'].setValue(zOrder)\n"}
addUserKnob {26 S04 l " " -STARTLINE T " "}
addUserKnob {3 sides l "" -STARTLINE}
sides 50
addUserKnob {26 divider3 l "" +STARTLINE}
addUserKnob {26 S05 l " " -STARTLINE T " "}
addUserKnob {26 pos_text l Position -STARTLINE T " "}
addUserKnob {3 node_position_x l x -STARTLINE}
node_position_x 28703
addUserKnob {3 node_position_y l y -STARTLINE}
node_position_y 783
addUserKnob {26 S06 l " " T " "}
addUserKnob {14 sizeNode l Size -STARTLINE R 0 100}
sizeNode {160 306}
addUserKnob {26 S07 l " " -STARTLINE T "     "}
addUserKnob {3 zorder l "Z Order" -STARTLINE}
zorder 3
}
BackdropNode {
inputs 0
name BackdropNode58
knobChanged "try:\n    node=nuke.thisNode()\n    knob=nuke.thisKnob()\n    name=knob.name()\n\n    def updateKnobs():\n        nodeWidth=node\['bdwidth'].getValue()\n        nodeHeight=node\['bdheight'].getValue()\n        node\['sizeNode'].setValue(\[int(nodeWidth),int(nodeHeight)])\n        node\['node_position_x'].setValue(int(node\['xpos'].value()))\n        node\['node_position_y'].setValue(int(node\['ypos'].value()))\n        node\['zorder'].setValue(int(node\['z_order'].getValue()))\n        node\['font_size'].setValue(int(node\['note_font_size'].getValue()))\n        node\['oz_appearance'].setValue( node\['appearance'].value() )\n        node\['oz_border_width'].setValue( node\['border_width'].value() )\n        #node\['fontColor'].setValue(int(node\['note_font_color'].getValue()))\n\n    def updateLabelKnob():\n        curLabel = node\['label'].getValue()\n        if '<p align=center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=center>', ''))\n            node\['alignment'].setValue(1)\n        elif '<p align=right>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=right>', ''))\n            node\['alignment'].setValue(2)\n        elif '<center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<center>', ''))\n            node\['alignment'].setValue(1)\n        else:\n            node\['text'].setValue(curLabel)\n            node\['alignment'].setValue(0)\n\n    ### OPENING SETUP\n    if name=='showPanel':\n        updateKnobs()\n        updateLabelKnob()\n\n    ### UPDATE STYLE\n    if name in \['oz_appearance', 'oz_border_width']:\n        node\['appearance'].setValue( node\['oz_appearance'].value() )\n        node\['border_width'].setValue( node\['oz_border_width'].value() )\n\n    ### CHANGE THE SIZE OF THE NODE\n    if name=='sizeNode':\n        node\['bdwidth'].setValue(int(node\['sizeNode'].getValue()\[0]))\n        node\['bdheight'].setValue(int(node\['sizeNode'].getValue()\[1]))\n\n    ### POSITION\n    if name=='node_position_x' or name=='node_position_y':\n        node.setXYpos(int(node\['node_position_x'].getValue()),int(node\['node_position_y'].getValue()))\n\n    ### ZORDER\n    if name=='zorder':\n        node\['z_order'].setValue(node\['zorder'].getValue())\n\n    ### UPDATE THE 'CURRENT SIZE' AND ORDER\n    #if name=='bdwidth' or name=='bdheight' or name=='z_order':\n    if name in \['bdwidth', 'bdheight', 'z_order']:\n        updateKnobs()\n\n    ### UPDATE LABEL\n    title = node\['name'].value()\n    text = node\['text'].value()\n\n    if name in \['text', 'alignment', 'title']:\n        if text=='':\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+title\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+title\n            else:\n                newLabel=title\n        else:\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+text\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+text\n            else:\n                newLabel=text\n\n        node\['label'].setValue(newLabel)\n\n    if name==\"font_size\":\n        new_font_size = node\[\"font_size\"].value()\n        node\['note_font_size'].setValue(new_font_size)\n\n    del newLabel\n\nexcept:\n    pass\n"
tile_color 0x661c4401
label "Instead of divide,\nyou can remove all\ncolour by desaturating\nas a starting point then\nput in your own\nwarmth or coolness\nby tweak the gamma\nor gain in a grade"
note_font_size 15
selected true
xpos -4848
ypos 7587
bdwidth 173
bdheight 309
z_order 3
addUserKnob {20 Settings}
addUserKnob {43 text l Text}
text "Instead of divide,\nyou can remove all\ncolour by desaturating\nas a starting point then\nput in your own\nwarmth or coolness\nby tweak the gamma\nor gain in a grade"
addUserKnob {7 font_size l "Font Size" R 10 100}
font_size 15
addUserKnob {4 alignment l "" -STARTLINE M {left center right}}
addUserKnob {26 divider1 l "" +STARTLINE}
addUserKnob {26 S01 l " " T " "}
addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import random\nn=nuke.thisNode()\nr,g,b=\[(float(random.randint( 20, 40)))/100,(float(random.randint( 10, 50)))/100,(float(random.randint( 15, 60)))/100]\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (r*255,g*255,b*255,1),16) )\n"}
addUserKnob {22 red l " <img src=\"F_r.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.77, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 orange l " <img src=\"F_o.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 yellow l " <img src=\"F_y.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 green l " <img src=\"F_g.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 cyan l " <img src=\"F_c.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 blue l " <img src=\"F_b.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.7, 0.76]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 darkblue l " <img src=\"F_db.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.74, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 magenta l " <img src=\"F_m.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.74, 0.65]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 pink l " <img src=\"F_p.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.74, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {26 S08 l " " T " "}
addUserKnob {4 oz_appearance l appearance -STARTLINE M {Fill Border}}
addUserKnob {7 oz_border_width l width -STARTLINE R 0 10}
oz_border_width 2
addUserKnob {26 divider2 l "" +STARTLINE}
addUserKnob {26 S02 l " " T " "}
addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\ngrow(n,50)"}
addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\nshrink(n,50)"}
addUserKnob {26 S03 l " " -STARTLINE T "     "}
addUserKnob {22 encompassSelectedNodes l " <img src=\"oz_encompass.png\">" -STARTLINE T "this = nuke.thisNode()\npadding = this\['sides'].getValue()\nif this.isSelected:\n    this.setSelected(False)\nselNodes = nuke.selectedNodes()\n        \ndef nodeIsInside (node, backdropNode):\n    # Returns true if node geometry is inside backdropNode otherwise returns false\n    topLeftNode = \[node.xpos(), node.ypos()]\n    topLeftBackDrop = \[backdropNode.xpos(), backdropNode.ypos()]\n    bottomRightNode = \[node.xpos() + node.screenWidth(), node.ypos() + node.screenHeight()]\n    bottomRightBackdrop = \[backdropNode.xpos() + backdropNode.screenWidth(), backdropNode.ypos() + backdropNode.screenHeight()]\n                    \n    topLeft = ( topLeftNode\[0] >= topLeftBackDrop\[0] ) and ( topLeftNode\[1] >= topLeftBackDrop\[1] )\n    bottomRight = ( bottomRightNode\[0] <= bottomRightBackdrop\[0] ) and ( bottomRightNode\[1] <= bottomRightBackdrop\[1] )\n                    \n    return topLeft and bottomRight\n\nif not selNodes:\n    nuke.message('Some nodes should be selected')\nelse:\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in selNodes])\n    bdY = min(\[node.ypos() for node in selNodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in selNodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in selNodes]) - bdY\n                        \n    zOrder = 0\n    selectedBackdropNodes = nuke.selectedNodes( \"BackdropNode\" )\n\n    #if there are backdropNodes selected put the new one immediately behind the farthest one\n                \n    if len( selectedBackdropNodes ):\n        zOrder = min( \[node.knob( \"z_order\" ).value() for node in selectedBackdropNodes] ) - 1\n    else :\n        #otherwise (no backdrop in selection) find the nearest backdrop if exists and set the new one in front of it\n        nonSelectedBackdropNodes = nuke.allNodes(\"BackdropNode\")\n        for nonBackdrop in selNodes:\n            for backdrop in nonSelectedBackdropNodes:\n                if nodeIsInside( nonBackdrop, backdrop ):\n                    zOrder = max( zOrder, backdrop.knob( \"z_order\" ).value() + 1 )\n    \n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-padding, -(padding+70), padding, padding)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    this\['xpos'].setValue(bdX)\n    this\['bdwidth'].setValue(bdW)\n    this\['ypos'].setValue(bdY)\n    this\['bdheight'].setValue(bdH)\n    this\['z_order'].setValue(zOrder)\n"}
addUserKnob {26 S04 l " " -STARTLINE T " "}
addUserKnob {3 sides l "" -STARTLINE}
sides 15
addUserKnob {26 divider3 l "" +STARTLINE}
addUserKnob {26 S05 l " " -STARTLINE T " "}
addUserKnob {26 pos_text l Position -STARTLINE T " "}
addUserKnob {3 node_position_x l x -STARTLINE}
node_position_x 28897
addUserKnob {3 node_position_y l y -STARTLINE}
node_position_y 783
addUserKnob {26 S06 l " " T " "}
addUserKnob {14 sizeNode l Size -STARTLINE R 0 100}
sizeNode {173 309}
addUserKnob {26 S07 l " " -STARTLINE T "     "}
addUserKnob {3 zorder l "Z Order" -STARTLINE}
zorder 3
}
push $cut_paste_input
NoOp {
name CleanPlate
tile_color 0xd0d0dff
note_font "Verdana Bold"
note_font_size 35
note_font_color 0xff
selected true
xpos -7298
ypos 7359
}
Dot {
name Dot118
selected true
xpos -7264
ypos 7448
}
set N86bbc400 [stack 0]
Dot {
name Dot119
selected true
xpos -7492
ypos 7448
}
HueCorrect {
name HueCorrect5
selected true
xpos -7526
ypos 7565
}
Dot {
name Dot117
selected true
xpos -7492
ypos 7712
}
set N86bbd000 [stack 0]
Dot {
name Dot125
selected true
xpos -7492
ypos 8389
}
push $N86bbd000
push $N86bbc400
Merge2 {
inputs 2
name Merge35
selected true
xpos -7298
ypos 7709
}
Grade {
whitepoint 0.54
name Grade15
selected true
xpos -7298
ypos 7805
}
Saturation {
saturation 0
mode Maximum
name Saturation5
selected true
xpos -7298
ypos 7889
}
set N86bf2000 [stack 0]
Dot {
name Dot122
selected true
xpos -7876
ypos 7892
}
Grade {
whitepoint 0.04
name Grade16
selected true
xpos -7910
ypos 7932
}
Invert {
name Invert3
selected true
xpos -7910
ypos 7967
}
Shuffle {
alpha blue
name Shuffle10
selected true
xpos -7910
ypos 8021
}
FilterErode {
size 1.4
name FilterErode3
selected true
xpos -7910
ypos 8063
}
Blur {
size 20
name Blur9
selected true
xpos -7910
ypos 8111
}
Dot {
name Dot123
selected true
xpos -7876
ypos 8168
}
NoOp {
inputs 0
name BG
tile_color 0xff
note_font "Verdana Bold"
note_font_size 35
selected true
xpos -8045
ypos 7359
}
Blur {
inputs 1+1
name Blur7
selected true
xpos -8045
ypos 8159
}
Dot {
name Dot120
selected true
xpos -8011
ypos 8216
}
push $N86bf2000
Merge2 {
inputs 2
operation multiply
name Merge37
selected true
xpos -7298
ypos 8213
}
Merge2 {
inputs 2
operation plus
name Merge38
selected true
xpos -7298
ypos 8386
}
DespillMadness {
name DespillMadness4
note_font "Bitstream Vera Sans"
selected true
xpos -7298
ypos 8487
maskChannel -rgba.alpha
}
NoOp {
inputs 0
name CleanPlate1
tile_color 0xd0d0dff
note_font "Verdana Bold"
note_font_size 35
note_font_color 0xff
selected true
xpos -6074
ypos 7360
}
Dot {
name Dot128
selected true
xpos -6040
ypos 7520
}
set N86d7e800 [stack 0]
OFXuk.co.thefoundry.keylight.keylight_v201 {
show "Final Result"
unPreMultiply false
screenColour {0 0 0}
screenGain 1
screenBalance 0.5
alphaBias {0.5 0.5 0.5}
despillBias {0.5 0.5 0.5}
gangBiases true
preBlur 0
"Screen Matte" 0
screenClipMin 0
screenClipMax 1
screenClipRollback 0
screenGrowShrink 0
screenSoftness 0
screenDespotBlack 0
screenDespotWhite 0
screenReplaceMethod "Soft Colour"
screenReplaceColour {0.5 0.5 0.5}
Tuning 0
midPoint 0.5
lowGain 1
midGain 1
highGain 1
"Inside Mask" 0
sourceAlphaHandling Ignore
insideReplaceMethod "Soft Colour"
insideReplaceColour {0.5 0.5 0.5}
Crops 0
SourceXMethod Colour
SourceYMethod Colour
SourceEdgeColour 0
SourceCropL 0
SourceCropR 1
SourceCropB 0
SourceCropT 1
balanceSet false
insideComponent None
outsideComponent None
cacheBreaker true
name Keylight16
selected true
xpos -6074
ypos 7685
}
set N86d7ec00 [stack 0]
Dot {
name Dot126
selected true
xpos -6248
ypos 7688
}
Clamp {
name Clamp2
selected true
xpos -6282
ypos 7799
}
Erode {
name Erode3
selected true
xpos -6282
ypos 7871
}
Blur {
name Blur12
selected true
xpos -6282
ypos 7943
}
Dot {
name Dot127
selected true
xpos -6248
ypos 8048
}
push $N86d7ec00
Grade {
name Grade17
selected true
xpos -6074
ypos 7805
}
Merge2 {
inputs 2
operation screen
name Merge39
selected true
xpos -6074
ypos 8045
}
push $N86d7e800
Dot {
name Dot129
selected true
xpos -5844
ypos 7520
}
Group {
name PxF_KillSpill
help "Remove red/green/blue spill."
tile_color 0x733520ff
selected true
xpos -5878
ypos 7716
addUserKnob {20 User}
addUserKnob {4 back_color l ScreenColor t "Which type of spill to remove." M {red green blue "" ""}}
back_color green
addUserKnob {7 supp l Suppression t "Bias the mix of channels used to cap the 'spill' channel.\nFor example when removing 'green spill':\n0 = green channel is capped by the red channel.\n\n0.5 = green channel is capped by half-mix of red and blue channels.\n\n1 = green channel is capped by the blue channel." R 0 2}
supp 0.5
addUserKnob {7 masterMult l Limiter t "Gain applied to the 'cap' channel to make the suppression more or less aggressive." R 0 10}
masterMult 1
addUserKnob {18 SpillTweak t "Adjust the luminance and color of the spill areas." R 0 10}
SpillTweak 1
addUserKnob {6 SpillTweak_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 ""}
addUserKnob {26 t l "" +STARTLINE T "PxF_KillSpill 2.5.2 - (c) 2011 - Xavier Bourque - www.pixelfudger.com"}
}
Input {
inputs 0
name mask
xpos -228
ypos 853
number 1
}
Input {
inputs 0
name img
xpos -496
ypos -217
}
Dot {
name Dot3
xpos -462
ypos -140
}
set N86db5800 [stack 0]
Dot {
name Dot2
xpos -689
ypos 208
}
Dot {
name Dot4
xpos -729
ypos 756
}
push $N86db5800
Dot {
name Dot1
xpos -156
ypos 744
}
push $N86db5800
push $N86db5800
Shuffle {
red blue
green blue
alpha black
name Blue
xpos 187
ypos 28
}
set N86de2800 [stack 0]
push $N86db5800
Shuffle {
red green
blue green
alpha black
name Green
xpos 76
ypos 26
}
set N86de2c00 [stack 0]
push $N86db5800
Shuffle {
green red
blue red
alpha black
name Red
xpos -17
ypos 27
}
set N86de3000 [stack 0]
Switch {
inputs 3
which {{back_color i}}
name High
xpos -17
ypos 132
}
push $N86de2c00
push $N86de3000
Switch {
inputs 2
which {{"back_color == 0 ? 1 : back_color == 1 ? 0 : 0" i}}
name LowA
xpos 76
ypos 132
}
Multiply {
value {{"1 - supp" i}}
name Multiply1
xpos 76
ypos 190
}
push $N86de2800
push $N86de2c00
push 0
Switch {
inputs 3
which {{"back_color == 0 ? 2 : back_color == 1 ? 2 : 1" i}}
name LowB
xpos 187
ypos 140
}
Multiply {
value {{supp i}}
name Multiply2
xpos 187
ypos 187
}
Merge2 {
inputs 2
operation plus
name Merge1
xpos 138
ypos 299
}
Multiply {
value {{masterMult i}}
name Multiply3
xpos 138
ypos 327
}
Merge2 {
inputs 2
operation min
name Merge10
xpos -17
ypos 371
}
set N86e11000 [stack 0]
ShuffleCopy {
inputs 2
red red
green green
name ShuffleBlue
xpos -426
ypos 371
}
push $N86db5800
push $N86e11000
ShuffleCopy {
inputs 2
red red
blue blue
name ShuffleGreen
xpos -526
ypos 369
}
push $N86db5800
push $N86e11000
ShuffleCopy {
inputs 2
green green
blue blue
name ShuffleRed
xpos -630
ypos 369
}
Switch {
inputs 3
which {{back_color i}}
name Switch1
xpos -526
ypos 424
}
set N86e44000 [stack 0]
push $N86db5800
push $N86e44000
Merge2 {
inputs 2
operation minus
name Merge9
xpos -338
ypos 547
}
Saturation {
saturation 0
name Saturation1
xpos -338
ypos 586
}
ColorCorrect {
gain {{SpillTweak.r i} {SpillTweak.g i} {SpillTweak.b i} {1 i}}
name ColorCorrect1
xpos -338
ypos 655
}
Merge2 {
inputs 2
operation plus
name Merge11
xpos -526
ypos 655
}
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos -526
ypos 740
}
Keymix {
inputs 3
invertMask true
bbox A
name Keymix1
selected true
xpos -526
ypos 875
disable {{"\[exists parent.input1] ? 0 : 1" i}}
}
set N86e45800 [stack 0]
Viewer {
input_process false
name Viewer1
xpos 95
ypos 454
}
push $N86e45800
Output {
name Output1
xpos -526
ypos 980
}
end_group
Dot {
name Dot130
selected true
xpos -5844
ypos 8216
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy13
selected true
xpos -6074
ypos 8207
}
Premult {
name Premult13
selected true
xpos -6074
ypos 8326
}
Dot {
name Dot135
selected true
xpos -6040
ypos 8480
}
push $N86d7e800
Dot {
name Dot132
selected true
xpos -6449
ypos 7520
}
set N86ec9400 [stack 0]
Dot {
name Dot131
selected true
xpos -6590
ypos 7520
}
Group {
name PxF_KillSpill2
help "Remove red/green/blue spill."
tile_color 0x733520ff
selected true
xpos -6624
ypos 7718
addUserKnob {20 User}
addUserKnob {4 back_color l ScreenColor t "Which type of spill to remove." M {red green blue "" ""}}
back_color green
addUserKnob {7 supp l Suppression t "Bias the mix of channels used to cap the 'spill' channel.\nFor example when removing 'green spill':\n0 = green channel is capped by the red channel.\n\n0.5 = green channel is capped by half-mix of red and blue channels.\n\n1 = green channel is capped by the blue channel." R 0 2}
supp 0.5
addUserKnob {7 masterMult l Limiter t "Gain applied to the 'cap' channel to make the suppression more or less aggressive." R 0 10}
masterMult 1
addUserKnob {18 SpillTweak t "Adjust the luminance and color of the spill areas." R 0 10}
SpillTweak 1
addUserKnob {6 SpillTweak_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 ""}
addUserKnob {26 t l "" +STARTLINE T "PxF_KillSpill 2.5.2 - (c) 2011 - Xavier Bourque - www.pixelfudger.com"}
}
Input {
inputs 0
name mask
xpos -228
ypos 853
number 1
}
Input {
inputs 0
name img
xpos -496
ypos -217
}
Dot {
name Dot3
xpos -462
ypos -140
}
set N86eec400 [stack 0]
Dot {
name Dot2
xpos -689
ypos 208
}
Dot {
name Dot4
xpos -729
ypos 756
}
push $N86eec400
Dot {
name Dot1
xpos -156
ypos 744
}
push $N86eec400
push $N86eec400
Shuffle {
red blue
green blue
alpha black
name Blue
xpos 187
ypos 28
}
set N86eed400 [stack 0]
push $N86eec400
Shuffle {
red green
blue green
alpha black
name Green
xpos 76
ypos 26
}
set N86eed800 [stack 0]
push $N86eec400
Shuffle {
green red
blue red
alpha black
name Red
xpos -17
ypos 27
}
set N86eedc00 [stack 0]
Switch {
inputs 3
which {{back_color i}}
name High
xpos -17
ypos 132
}
push $N86eed800
push $N86eedc00
Switch {
inputs 2
which {{"back_color == 0 ? 1 : back_color == 1 ? 0 : 0" i}}
name LowA
xpos 76
ypos 132
}
Multiply {
value {{"1 - supp" i}}
name Multiply1
xpos 76
ypos 190
}
push $N86eed400
push $N86eed800
push 0
Switch {
inputs 3
which {{"back_color == 0 ? 2 : back_color == 1 ? 2 : 1" i}}
name LowB
xpos 187
ypos 140
}
Multiply {
value {{supp i}}
name Multiply2
xpos 187
ypos 187
}
Merge2 {
inputs 2
operation plus
name Merge1
xpos 138
ypos 299
}
Multiply {
value {{masterMult i}}
name Multiply3
xpos 138
ypos 327
}
Merge2 {
inputs 2
operation min
name Merge10
xpos -17
ypos 371
}
set N86f17c00 [stack 0]
ShuffleCopy {
inputs 2
red red
green green
name ShuffleBlue
xpos -426
ypos 371
}
push $N86eec400
push $N86f17c00
ShuffleCopy {
inputs 2
red red
blue blue
name ShuffleGreen
xpos -526
ypos 369
}
push $N86eec400
push $N86f17c00
ShuffleCopy {
inputs 2
green green
blue blue
name ShuffleRed
xpos -630
ypos 369
}
Switch {
inputs 3
which {{back_color i}}
name Switch1
xpos -526
ypos 424
}
set N86f46c00 [stack 0]
push $N86eec400
push $N86f46c00
Merge2 {
inputs 2
operation minus
name Merge9
xpos -338
ypos 547
}
Saturation {
saturation 0
name Saturation1
xpos -338
ypos 586
}
ColorCorrect {
gain {{SpillTweak.r i} {SpillTweak.g i} {SpillTweak.b i} {1 i}}
name ColorCorrect1
xpos -338
ypos 655
}
Merge2 {
inputs 2
operation plus
name Merge11
xpos -526
ypos 655
}
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos -526
ypos 740
}
Keymix {
inputs 3
invertMask true
bbox A
name Keymix1
selected true
xpos -526
ypos 875
disable {{"\[exists parent.input1] ? 0 : 1" i}}
}
set N86f8c400 [stack 0]
Viewer {
input_process false
name Viewer1
xpos 95
ypos 454
}
push $N86f8c400
Output {
name Output1
xpos -526
ypos 980
}
end_group
Dot {
name Dot133
selected true
xpos -6593
ypos 8060
}
push $N86ec9400
Primatte3 {
data { 5
    0 0 0
    589840
    0 5
    30234 30234 30234 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.05 1.732 1.732
    0.05 1.732 1.732
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
  }

primEdgedata { 5
    0 0 0
    589840
    0 5
    30234 30234 30234 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.05 1.732 1.732
    0.05 1.732 1.732
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
  }

primBodydata { 5
    0 0 0
    589840
    0 5
    30234 30234 30234 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.05 1.732 1.732
    0.05 1.732 1.732
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
  }

bg_color_selected false
crop {0 0 2048 1556}
adjustLighting true
"Adjust Lighting" 0
"Hybrid Matte" 0
"Fine Tuning" 0
output_mode "adjust lighting BG"
name Primatte9
selected true
xpos -6483
ypos 7709
}
PostageStamp {
name CleanScreen
selected true
xpos -6483
ypos 7793
postage_stamp true
}
Group {
name PxF_KillSpill3
help "Remove red/green/blue spill."
tile_color 0x733520ff
selected true
xpos -6483
ypos 7949
addUserKnob {20 User}
addUserKnob {4 back_color l ScreenColor t "Which type of spill to remove." M {red green blue "" ""}}
back_color green
addUserKnob {7 supp l Suppression t "Bias the mix of channels used to cap the 'spill' channel.\nFor example when removing 'green spill':\n0 = green channel is capped by the red channel.\n\n0.5 = green channel is capped by half-mix of red and blue channels.\n\n1 = green channel is capped by the blue channel." R 0 2}
supp 0.5
addUserKnob {7 masterMult l Limiter t "Gain applied to the 'cap' channel to make the suppression more or less aggressive." R 0 10}
masterMult 1
addUserKnob {18 SpillTweak t "Adjust the luminance and color of the spill areas." R 0 10}
SpillTweak 1
addUserKnob {6 SpillTweak_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 ""}
addUserKnob {26 t l "" +STARTLINE T "PxF_KillSpill 2.5.2 - (c) 2011 - Xavier Bourque - www.pixelfudger.com"}
}
Input {
inputs 0
name mask
xpos -228
ypos 853
number 1
}
Input {
inputs 0
name img
xpos -496
ypos -217
}
Dot {
name Dot3
xpos -462
ypos -140
}
set N87012400 [stack 0]
Dot {
name Dot2
xpos -689
ypos 208
}
Dot {
name Dot4
xpos -729
ypos 756
}
push $N87012400
Dot {
name Dot1
xpos -156
ypos 744
}
push $N87012400
push $N87012400
Shuffle {
red blue
green blue
alpha black
name Blue
xpos 187
ypos 28
}
set N87013400 [stack 0]
push $N87012400
Shuffle {
red green
blue green
alpha black
name Green
xpos 76
ypos 26
}
set N87013800 [stack 0]
push $N87012400
Shuffle {
green red
blue red
alpha black
name Red
xpos -17
ypos 27
}
set N87013c00 [stack 0]
Switch {
inputs 3
which {{back_color i}}
name High
xpos -17
ypos 132
}
push $N87013800
push $N87013c00
Switch {
inputs 2
which {{"back_color == 0 ? 1 : back_color == 1 ? 0 : 0" i}}
name LowA
xpos 76
ypos 132
}
Multiply {
value {{"1 - supp" i}}
name Multiply1
xpos 76
ypos 190
}
push $N87013400
push $N87013800
push 0
Switch {
inputs 3
which {{"back_color == 0 ? 2 : back_color == 1 ? 2 : 1" i}}
name LowB
xpos 187
ypos 140
}
Multiply {
value {{supp i}}
name Multiply2
xpos 187
ypos 187
}
Merge2 {
inputs 2
operation plus
name Merge1
xpos 138
ypos 299
}
Multiply {
value {{masterMult i}}
name Multiply3
xpos 138
ypos 327
}
Merge2 {
inputs 2
operation min
name Merge10
xpos -17
ypos 371
}
set N87035c00 [stack 0]
ShuffleCopy {
inputs 2
red red
green green
name ShuffleBlue
xpos -426
ypos 371
}
push $N87012400
push $N87035c00
ShuffleCopy {
inputs 2
red red
blue blue
name ShuffleGreen
xpos -526
ypos 369
}
push $N87012400
push $N87035c00
ShuffleCopy {
inputs 2
green green
blue blue
name ShuffleRed
xpos -630
ypos 369
}
Switch {
inputs 3
which {{back_color i}}
name Switch1
xpos -526
ypos 424
}
set N8706ac00 [stack 0]
push $N87012400
push $N8706ac00
Merge2 {
inputs 2
operation minus
name Merge9
xpos -338
ypos 547
}
Saturation {
saturation 0
name Saturation1
xpos -338
ypos 586
}
ColorCorrect {
gain {{SpillTweak.r i} {SpillTweak.g i} {SpillTweak.b i} {1 i}}
name ColorCorrect1
xpos -338
ypos 655
}
Merge2 {
inputs 2
operation plus
name Merge11
xpos -526
ypos 655
}
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos -526
ypos 740
}
Keymix {
inputs 3
invertMask true
bbox A
name Keymix1
selected true
xpos -526
ypos 875
disable {{"\[exists parent.input1] ? 0 : 1" i}}
}
set N870b0400 [stack 0]
Viewer {
input_process false
name Viewer1
xpos 95
ypos 454
}
push $N870b0400
Output {
name Output1
xpos -526
ypos 980
}
end_group
Merge2 {
inputs 2
operation divide
name Merge40
selected true
xpos -6483
ypos 8057
}
Dot {
name Dot134
selected true
xpos -6449
ypos 8144
}
NoOp {
inputs 0
name BG1
tile_color 0xff
note_font "Verdana Bold"
note_font_size 35
selected true
xpos -6821
ypos 7432
}
Merge2 {
inputs 2
operation multiply
name Merge41
selected true
xpos -6821
ypos 8141
}
Merge2 {
inputs 2
name Merge42
selected true
xpos -6821
ypos 8477
}
NoOp {
inputs 0
name CleanPlate2
tile_color 0xd0d0dff
note_font "Verdana Bold"
note_font_size 35
note_font_color 0xff
selected true
xpos -4389
ypos 7375
}
Dot {
name Dot136
selected true
xpos -4355
ypos 7535
}
set N8711a800 [stack 0]
OFXuk.co.thefoundry.keylight.keylight_v201 {
show "Final Result"
unPreMultiply false
screenColour {0 0 0}
screenGain 1
screenBalance 0.5
alphaBias {0.5 0.5 0.5}
despillBias {0.5 0.5 0.5}
gangBiases true
preBlur 0
"Screen Matte" 0
screenClipMin 0
screenClipMax 1
screenClipRollback 0
screenGrowShrink 0
screenSoftness 0
screenDespotBlack 0
screenDespotWhite 0
screenReplaceMethod "Soft Colour"
screenReplaceColour {0.5 0.5 0.5}
Tuning 0
midPoint 0.5
lowGain 1
midGain 1
highGain 1
"Inside Mask" 0
sourceAlphaHandling Ignore
insideReplaceMethod "Soft Colour"
insideReplaceColour {0.5 0.5 0.5}
Crops 0
SourceXMethod Colour
SourceYMethod Colour
SourceEdgeColour 0
SourceCropL 0
SourceCropR 1
SourceCropB 0
SourceCropT 1
balanceSet false
insideComponent None
outsideComponent None
cacheBreaker true
name Keylight19
selected true
xpos -4389
ypos 7700
}
set N8711ac00 [stack 0]
Dot {
name Dot137
selected true
xpos -4563
ypos 7703
}
Clamp {
name Clamp4
selected true
xpos -4597
ypos 7814
}
Erode {
name Erode4
selected true
xpos -4597
ypos 7886
}
Blur {
name Blur13
selected true
xpos -4597
ypos 7958
}
Dot {
name Dot138
selected true
xpos -4563
ypos 8063
}
push $N8711ac00
Grade {
name Grade18
selected true
xpos -4389
ypos 7820
}
Merge2 {
inputs 2
operation screen
name Merge43
selected true
xpos -4389
ypos 8060
}
push $N8711a800
Dot {
name Dot139
selected true
xpos -4159
ypos 7535
}
Group {
name PxF_KillSpill4
help "Remove red/green/blue spill."
tile_color 0x733520ff
selected true
xpos -4193
ypos 7731
addUserKnob {20 User}
addUserKnob {4 back_color l ScreenColor t "Which type of spill to remove." M {red green blue "" ""}}
back_color green
addUserKnob {7 supp l Suppression t "Bias the mix of channels used to cap the 'spill' channel.\nFor example when removing 'green spill':\n0 = green channel is capped by the red channel.\n\n0.5 = green channel is capped by half-mix of red and blue channels.\n\n1 = green channel is capped by the blue channel." R 0 2}
supp 0.5
addUserKnob {7 masterMult l Limiter t "Gain applied to the 'cap' channel to make the suppression more or less aggressive." R 0 10}
masterMult 1
addUserKnob {18 SpillTweak t "Adjust the luminance and color of the spill areas." R 0 10}
SpillTweak 1
addUserKnob {6 SpillTweak_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 ""}
addUserKnob {26 t l "" +STARTLINE T "PxF_KillSpill 2.5.2 - (c) 2011 - Xavier Bourque - www.pixelfudger.com"}
}
Input {
inputs 0
name mask
xpos -228
ypos 853
number 1
}
Input {
inputs 0
name img
xpos -496
ypos -217
}
Dot {
name Dot3
xpos -462
ypos -140
}
set N87153800 [stack 0]
Dot {
name Dot2
xpos -689
ypos 208
}
Dot {
name Dot4
xpos -729
ypos 756
}
push $N87153800
Dot {
name Dot1
xpos -156
ypos 744
}
push $N87153800
push $N87153800
Shuffle {
red blue
green blue
alpha black
name Blue
xpos 187
ypos 28
}
set N8717c800 [stack 0]
push $N87153800
Shuffle {
red green
blue green
alpha black
name Green
xpos 76
ypos 26
}
set N8717cc00 [stack 0]
push $N87153800
Shuffle {
green red
blue red
alpha black
name Red
xpos -17
ypos 27
}
set N8717d000 [stack 0]
Switch {
inputs 3
which {{back_color i}}
name High
xpos -17
ypos 132
}
push $N8717cc00
push $N8717d000
Switch {
inputs 2
which {{"back_color == 0 ? 1 : back_color == 1 ? 0 : 0" i}}
name LowA
xpos 76
ypos 132
}
Multiply {
value {{"1 - supp" i}}
name Multiply1
xpos 76
ypos 190
}
push $N8717c800
push $N8717cc00
push 0
Switch {
inputs 3
which {{"back_color == 0 ? 2 : back_color == 1 ? 2 : 1" i}}
name LowB
xpos 187
ypos 140
}
Multiply {
value {{supp i}}
name Multiply2
xpos 187
ypos 187
}
Merge2 {
inputs 2
operation plus
name Merge1
xpos 138
ypos 299
}
Multiply {
value {{masterMult i}}
name Multiply3
xpos 138
ypos 327
}
Merge2 {
inputs 2
operation min
name Merge10
xpos -17
ypos 371
}
set N871a9000 [stack 0]
ShuffleCopy {
inputs 2
red red
green green
name ShuffleBlue
xpos -426
ypos 371
}
push $N87153800
push $N871a9000
ShuffleCopy {
inputs 2
red red
blue blue
name ShuffleGreen
xpos -526
ypos 369
}
push $N87153800
push $N871a9000
ShuffleCopy {
inputs 2
green green
blue blue
name ShuffleRed
xpos -630
ypos 369
}
Switch {
inputs 3
which {{back_color i}}
name Switch1
xpos -526
ypos 424
}
set N871e6000 [stack 0]
push $N87153800
push $N871e6000
Merge2 {
inputs 2
operation minus
name Merge9
xpos -338
ypos 547
}
Saturation {
saturation 0
name Saturation1
xpos -338
ypos 586
}
ColorCorrect {
gain {{SpillTweak.r i} {SpillTweak.g i} {SpillTweak.b i} {1 i}}
name ColorCorrect1
xpos -338
ypos 655
}
Merge2 {
inputs 2
operation plus
name Merge11
xpos -526
ypos 655
}
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos -526
ypos 740
}
Keymix {
inputs 3
invertMask true
bbox A
name Keymix1
selected true
xpos -526
ypos 875
disable {{"\[exists parent.input1] ? 0 : 1" i}}
}
set N871e7800 [stack 0]
Viewer {
input_process false
name Viewer1
xpos 95
ypos 454
}
push $N871e7800
Output {
name Output1
xpos -526
ypos 980
}
end_group
Dot {
name Dot140
selected true
xpos -4159
ypos 8231
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy17
selected true
xpos -4389
ypos 8222
}
Premult {
name Premult14
selected true
xpos -4389
ypos 8341
}
Dot {
name Dot141
selected true
xpos -4355
ypos 8495
}
push $N8711a800
Dot {
name Dot142
selected true
xpos -4764
ypos 7533
}
set N87263400 [stack 0]
Group {
name PxF_KillSpill6
help "Remove red/green/blue spill."
tile_color 0x733520ff
selected true
xpos -4798
ypos 7827
addUserKnob {20 User}
addUserKnob {4 back_color l ScreenColor t "Which type of spill to remove." M {red green blue "" ""}}
back_color green
addUserKnob {7 supp l Suppression t "Bias the mix of channels used to cap the 'spill' channel.\nFor example when removing 'green spill':\n0 = green channel is capped by the red channel.\n\n0.5 = green channel is capped by half-mix of red and blue channels.\n\n1 = green channel is capped by the blue channel." R 0 2}
supp 0.5
addUserKnob {7 masterMult l Limiter t "Gain applied to the 'cap' channel to make the suppression more or less aggressive." R 0 10}
masterMult 1
addUserKnob {18 SpillTweak t "Adjust the luminance and color of the spill areas." R 0 10}
SpillTweak 1
addUserKnob {6 SpillTweak_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 ""}
addUserKnob {26 t l "" +STARTLINE T "PxF_KillSpill 2.5.2 - (c) 2011 - Xavier Bourque - www.pixelfudger.com"}
}
Input {
inputs 0
name mask
xpos -228
ypos 853
number 1
}
Input {
inputs 0
name img
xpos -496
ypos -217
}
Dot {
name Dot3
xpos -462
ypos -140
}
set N8728a000 [stack 0]
Dot {
name Dot2
xpos -689
ypos 208
}
Dot {
name Dot4
xpos -729
ypos 756
}
push $N8728a000
Dot {
name Dot1
xpos -156
ypos 744
}
push $N8728a000
push $N8728a000
Shuffle {
red blue
green blue
alpha black
name Blue
xpos 187
ypos 28
}
set N8728b000 [stack 0]
push $N8728a000
Shuffle {
red green
blue green
alpha black
name Green
xpos 76
ypos 26
}
set N8728b400 [stack 0]
push $N8728a000
Shuffle {
green red
blue red
alpha black
name Red
xpos -17
ypos 27
}
set N8728b800 [stack 0]
Switch {
inputs 3
which {{back_color i}}
name High
xpos -17
ypos 132
}
push $N8728b400
push $N8728b800
Switch {
inputs 2
which {{"back_color == 0 ? 1 : back_color == 1 ? 0 : 0" i}}
name LowA
xpos 76
ypos 132
}
Multiply {
value {{"1 - supp" i}}
name Multiply1
xpos 76
ypos 190
}
push $N8728b000
push $N8728b400
push 0
Switch {
inputs 3
which {{"back_color == 0 ? 2 : back_color == 1 ? 2 : 1" i}}
name LowB
xpos 187
ypos 140
}
Multiply {
value {{supp i}}
name Multiply2
xpos 187
ypos 187
}
Merge2 {
inputs 2
operation plus
name Merge1
xpos 138
ypos 299
}
Multiply {
value {{masterMult i}}
name Multiply3
xpos 138
ypos 327
}
Merge2 {
inputs 2
operation min
name Merge10
xpos -17
ypos 371
}
set N872b7800 [stack 0]
ShuffleCopy {
inputs 2
red red
green green
name ShuffleBlue
xpos -426
ypos 371
}
push $N8728a000
push $N872b7800
ShuffleCopy {
inputs 2
red red
blue blue
name ShuffleGreen
xpos -526
ypos 369
}
push $N8728a000
push $N872b7800
ShuffleCopy {
inputs 2
green green
blue blue
name ShuffleRed
xpos -630
ypos 369
}
Switch {
inputs 3
which {{back_color i}}
name Switch1
xpos -526
ypos 424
}
set N872f4800 [stack 0]
push $N8728a000
push $N872f4800
Merge2 {
inputs 2
operation minus
name Merge9
xpos -338
ypos 547
}
Saturation {
saturation 0
name Saturation1
xpos -338
ypos 586
}
ColorCorrect {
gain {{SpillTweak.r i} {SpillTweak.g i} {SpillTweak.b i} {1 i}}
name ColorCorrect1
xpos -338
ypos 655
}
Merge2 {
inputs 2
operation plus
name Merge11
xpos -526
ypos 655
}
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos -526
ypos 740
}
Keymix {
inputs 3
invertMask true
bbox A
name Keymix1
selected true
xpos -526
ypos 875
disable {{"\[exists parent.input1] ? 0 : 1" i}}
}
set N8732e000 [stack 0]
Viewer {
input_process false
name Viewer1
xpos 95
ypos 454
}
push $N8732e000
Output {
name Output1
xpos -526
ypos 980
}
end_group
Dot {
name Dot145
selected true
xpos -4764
ypos 8157
}
NoOp {
inputs 0
name BG2
tile_color 0xff
note_font "Verdana Bold"
note_font_size 35
selected true
xpos -5136
ypos 7445
}
Merge2 {
inputs 2
operation multiply
name Merge45
selected true
xpos -5136
ypos 8154
}
Merge2 {
inputs 2
name Merge46
selected true
xpos -5136
ypos 8492
}
push $N87263400
Dot {
name Dot143
selected true
xpos -4969
ypos 7533
}
Group {
name PxF_KillSpill5
help "Remove red/green/blue spill."
tile_color 0x733520ff
selected true
xpos -5003
ypos 7803
addUserKnob {20 User}
addUserKnob {4 back_color l ScreenColor t "Which type of spill to remove." M {red green blue "" ""}}
back_color green
addUserKnob {7 supp l Suppression t "Bias the mix of channels used to cap the 'spill' channel.\nFor example when removing 'green spill':\n0 = green channel is capped by the red channel.\n\n0.5 = green channel is capped by half-mix of red and blue channels.\n\n1 = green channel is capped by the blue channel." R 0 2}
supp 0.5
addUserKnob {7 masterMult l Limiter t "Gain applied to the 'cap' channel to make the suppression more or less aggressive." R 0 10}
masterMult 1
addUserKnob {18 SpillTweak t "Adjust the luminance and color of the spill areas." R 0 10}
SpillTweak 1
addUserKnob {6 SpillTweak_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 ""}
addUserKnob {26 t l "" +STARTLINE T "PxF_KillSpill 2.5.2 - (c) 2011 - Xavier Bourque - www.pixelfudger.com"}
}
Input {
inputs 0
name mask
xpos -228
ypos 853
number 1
}
Input {
inputs 0
name img
xpos -496
ypos -217
}
Dot {
name Dot3
xpos -462
ypos -140
}
set N91b4e800 [stack 0]
Dot {
name Dot2
xpos -689
ypos 208
}
Dot {
name Dot4
xpos -729
ypos 756
}
push $N91b4e800
Dot {
name Dot1
xpos -156
ypos 744
}
push $N91b4e800
push $N91b4e800
Shuffle {
red blue
green blue
alpha black
name Blue
xpos 187
ypos 28
}
set N91b4f800 [stack 0]
push $N91b4e800
Shuffle {
red green
blue green
alpha black
name Green
xpos 76
ypos 26
}
set N91b4fc00 [stack 0]
push $N91b4e800
Shuffle {
green red
blue red
alpha black
name Red
xpos -17
ypos 27
}
set N91b6c000 [stack 0]
Switch {
inputs 3
which {{back_color i}}
name High
xpos -17
ypos 132
}
push $N91b4fc00
push $N91b6c000
Switch {
inputs 2
which {{"back_color == 0 ? 1 : back_color == 1 ? 0 : 0" i}}
name LowA
xpos 76
ypos 132
}
Multiply {
value {{"1 - supp" i}}
name Multiply1
xpos 76
ypos 190
}
push $N91b4f800
push $N91b4fc00
push 0
Switch {
inputs 3
which {{"back_color == 0 ? 2 : back_color == 1 ? 2 : 1" i}}
name LowB
xpos 187
ypos 140
}
Multiply {
value {{supp i}}
name Multiply2
xpos 187
ypos 187
}
Merge2 {
inputs 2
operation plus
name Merge1
xpos 138
ypos 299
}
Multiply {
value {{masterMult i}}
name Multiply3
xpos 138
ypos 327
}
Merge2 {
inputs 2
operation min
name Merge10
xpos -17
ypos 371
}
set N91baa000 [stack 0]
ShuffleCopy {
inputs 2
red red
green green
name ShuffleBlue
xpos -426
ypos 371
}
push $N91b4e800
push $N91baa000
ShuffleCopy {
inputs 2
red red
blue blue
name ShuffleGreen
xpos -526
ypos 369
}
push $N91b4e800
push $N91baa000
ShuffleCopy {
inputs 2
green green
blue blue
name ShuffleRed
xpos -630
ypos 369
}
Switch {
inputs 3
which {{back_color i}}
name Switch1
xpos -526
ypos 424
}
set N91bab000 [stack 0]
push $N91b4e800
push $N91bab000
Merge2 {
inputs 2
operation minus
name Merge9
xpos -338
ypos 547
}
Saturation {
saturation 0
name Saturation1
xpos -338
ypos 586
}
ColorCorrect {
gain {{SpillTweak.r i} {SpillTweak.g i} {SpillTweak.b i} {1 i}}
name ColorCorrect1
xpos -338
ypos 655
}
Merge2 {
inputs 2
operation plus
name Merge11
xpos -526
ypos 655
}
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos -526
ypos 740
}
Keymix {
inputs 3
invertMask true
bbox A
name Keymix1
selected true
xpos -526
ypos 875
disable {{"\[exists parent.input1] ? 0 : 1" i}}
}
set N91bee800 [stack 0]
Viewer {
input_process false
name Viewer1
xpos 95
ypos 454
}
push $N91bee800
Output {
name Output1
xpos -526
ypos 980
}
end_group
Grade {
name Grade19
selected true
xpos -5003
ypos 7851
}
NoOp {
inputs 0
name CleanPlate3
tile_color 0xd0d0dff
note_font "Verdana Bold"
note_font_size 35
note_font_color 0xff
selected true
xpos -2986
ypos 7313
}
Dot {
name Dot144
selected true
xpos -2952
ypos 7449
}
set N97c7bc00 [stack 0]
Dot {
name Dot164
selected true
xpos -2952
ypos 7521
}
set N97cc4000 [stack 0]
Dot {
name Dot165
selected true
xpos -3096
ypos 7520
}
Primatte3 {
data { 5
    0 0 0
    589840
    0 5
    30234 30234 30234 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.05 1.732 1.732
    0.05 1.732 1.732
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
  }

primEdgedata { 5
    0 0 0
    589840
    0 5
    30234 30234 30234 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.05 1.732 1.732
    0.05 1.732 1.732
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
  }

primBodydata { 5
    0 0 0
    589840
    0 5
    30234 30234 30234 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.05 1.732 1.732
    0.05 1.732 1.732
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
  }

bg_color_selected false
crop {0 0 2048 1556}
adjustLighting true
"Adjust Lighting" 0
"Hybrid Matte" 0
"Fine Tuning" 0
output_mode "adjust lighting BG"
name Primatte11
selected true
xpos -3130
ypos 7566
}
Dot {
name Dot166
selected true
xpos -3096
ypos 7627
}
push $N97cc4000
Group {
inputs 2
name PxF_ScreenClean1
help "Clean chroma key background imperfections using a clean plate."
tile_color 0x733520ff
selected true
xpos -2986
ypos 7624
addUserKnob {20 User}
addUserKnob {4 screen_type l ScreenType t "The color of the chroma key background." M {Red Green Blue "" "" ""}}
screen_type Green
addUserKnob {18 screen_color l ScreenColor t "The color that will be used to repair the chroma key background (usually the average color of the background)."}
screen_color {0.18 0.3 0.1}
addUserKnob {6 screen_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 ""}
addUserKnob {26 t l "" t "PxF_ScreenClean.\nInput 1 = Plate.\nInput 2 = Clean Plate.\nUse ScreenClean to erase\nimperfections in a green/blue/red\nscreen using a clean plate." -STARTLINE T "PxF_ScreenClean 2.0.3 - (c) 2012 - Xavier Bourque - www.pixelfudger.com"}
}
Input {
inputs 0
name mask
xpos 419
ypos 274
number 2
}
Input {
inputs 0
name plate
xpos 203
ypos -448
}
Dot {
name Dot1
xpos 209
ypos -347
}
set N97cc5800 [stack 0]
Dot {
name Dot2
xpos -64
ypos -202
}
Dot {
name Dot3
xpos -57
ypos 214
}
set N97cfc000 [stack 0]
push $N97cfc000
push $N97cc5800
Shuffle {
red blue
green blue
alpha black
name Blue
xpos 203
ypos -187
}
set N97cfc400 [stack 0]
push $N97cc5800
Shuffle {
red green
blue green
alpha black
name Green
xpos 112
ypos -179
}
set N97cfc800 [stack 0]
push $N97cc5800
Shuffle {
green red
blue red
alpha black
name Red
xpos 17
ypos -180
}
set N97cfcc00 [stack 0]
Switch {
inputs 3
which {{screen_type i x1 0}}
name High
xpos 17
ypos -99
}
push $N97cfc800
push $N97cfcc00
Switch {
inputs 2
which {{"screen_type == 0 ? 1 : screen_type == 1 ? 0 : 0" i x1 0}}
name LowA
xpos 145
ypos -108
}
push $N97cfc400
push $N97cfc800
push 0
Switch {
inputs 3
which {{"screen_type == 0 ? 2 : screen_type == 1 ? 2 : 1" i x1 1}}
name LowB
xpos 261
ypos -107
}
Merge2 {
inputs 2
operation max
name Merge1
xpos 217
ypos -59
}
Merge2 {
inputs 2
operation minus
name Merge2
xpos 116
ypos -20
}
Input {
inputs 0
name clean_plate
xpos 462
ypos -437
number 1
}
Dot {
name Dot4
xpos 530
ypos -235
}
set N97d2c800 [stack 0]
Shuffle {
red blue
green blue
alpha black
name Blue1
xpos 570
ypos -194
}
set N97d2cc00 [stack 0]
push $N97d2c800
Shuffle {
red green
blue green
alpha black
name Green1
xpos 481
ypos -195
}
set N97d2d000 [stack 0]
push $N97d2c800
Shuffle {
green red
blue red
alpha black
name Red1
xpos 382
ypos -194
}
set N97d2d400 [stack 0]
Switch {
inputs 3
which {{screen_type i x1 0}}
name High1
xpos 401
ypos -130
}
push $N97d2d000
push $N97d2d400
Switch {
inputs 2
which {{"screen_type == 0 ? 1 : screen_type == 1 ? 0 : 0" i}}
name LowA1
xpos 498
ypos -131
}
push $N97d2cc00
push $N97d2d000
push 0
Switch {
inputs 3
which {{"screen_type == 0 ? 2 : screen_type == 1 ? 2 : 1" i}}
name LowB1
xpos 592
ypos -128
}
Merge2 {
inputs 2
operation max
name Merge3
xpos 532
ypos -73
}
Merge2 {
inputs 2
operation minus
name Merge4
xpos 429
ypos -19
}
Merge2 {
inputs 2
operation divide
name Merge5
xpos 309
ypos 87
}
Clamp {
name Clamp1
xpos 309
ypos 114
}
push $N97d2c800
Dot {
name Dot5
xpos 720
ypos -198
}
push $N97cc5800
Dot {
name Dot7
xpos 845
ypos -231
}
ColorCorrect {
gain 0
offset {{screen_color.r i} {screen_color.g i} {screen_color.b i} {1 i}}
name ColorCorrect1
xpos 817
ypos -159
postage_stamp true
}
Merge2 {
inputs 2
operation minus
name Merge6
xpos 692
ypos -24
}
Dot {
name Dot6
xpos 688
ypos 165
}
Merge2 {
inputs 2
operation multiply
name Merge7
xpos 309
ypos 166
}
Merge2 {
inputs 2
operation minus
name Merge8
xpos 309
ypos 215
}
Keymix {
inputs 3
invertMask true
bbox B
name Keymix1
selected true
xpos 309
ypos 299
disable {{"\[exists parent.input2] ? 0 : 1" i x1 0}}
}
Output {
name Output1
xpos 309
ypos 348
}
end_group
OFXuk.co.thefoundry.keylight.keylight_v201 {
show "Final Result"
unPreMultiply false
screenColour {0 0 0}
screenGain 1
screenBalance 0.5
alphaBias {0.5 0.5 0.5}
despillBias {0.5 0.5 0.5}
gangBiases true
preBlur 0
"Screen Matte" 0
screenClipMin 0
screenClipMax 1
screenClipRollback 0
screenGrowShrink 0
screenSoftness 0
screenDespotBlack 0
screenDespotWhite 0
screenReplaceMethod "Soft Colour"
screenReplaceColour {0.5 0.5 0.5}
Tuning 0
midPoint 0.5
lowGain 1
midGain 1
highGain 1
"Inside Mask" 0
sourceAlphaHandling Ignore
insideReplaceMethod "Soft Colour"
insideReplaceColour {0.5 0.5 0.5}
Crops 0
SourceXMethod Colour
SourceYMethod Colour
SourceEdgeColour 0
SourceCropL 0
SourceCropR 1
SourceCropB 0
SourceCropT 1
balanceSet false
insideComponent None
outsideComponent None
cacheBreaker true
name Keylight20
selected true
xpos -2986
ypos 7734
}
set N97d99800 [stack 0]
Dot {
name Dot146
selected true
xpos -3096
ypos 7737
}
Clamp {
name Clamp5
selected true
xpos -3130
ypos 7800
}
Erode {
name Erode5
selected true
xpos -3130
ypos 7872
}
Blur {
name Blur14
selected true
xpos -3130
ypos 7944
}
Dot {
name Dot147
selected true
xpos -3096
ypos 8001
}
set N97dd4c00 [stack 0]
push $N97d99800
Grade {
name Grade20
selected true
xpos -2986
ypos 7878
}
Merge2 {
inputs 2
operation screen
name Merge44
selected true
xpos -2986
ypos 7998
}
push $N97dd4c00
Dot {
name Dot169
selected true
xpos -3096
ypos 8049
}
Dot {
name Dot170
selected true
xpos -2807
ypos 8049
}
push $N97c7bc00
Dot {
name Dot148
selected true
xpos -2825
ypos 7449
}
set N97e00000 [stack 0]
Group {
name PxF_KillSpill7
help "Remove red/green/blue spill."
tile_color 0x733520ff
selected true
xpos -2859
ypos 7821
addUserKnob {20 User}
addUserKnob {4 back_color l ScreenColor t "Which type of spill to remove." M {red green blue "" ""}}
back_color green
addUserKnob {7 supp l Suppression t "Bias the mix of channels used to cap the 'spill' channel.\nFor example when removing 'green spill':\n0 = green channel is capped by the red channel.\n\n0.5 = green channel is capped by half-mix of red and blue channels.\n\n1 = green channel is capped by the blue channel." R 0 2}
supp 0.5
addUserKnob {7 masterMult l Limiter t "Gain applied to the 'cap' channel to make the suppression more or less aggressive." R 0 10}
masterMult 1
addUserKnob {18 SpillTweak t "Adjust the luminance and color of the spill areas." R 0 10}
SpillTweak 1
addUserKnob {6 SpillTweak_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 ""}
addUserKnob {26 t l "" +STARTLINE T "PxF_KillSpill 2.5.2 - (c) 2011 - Xavier Bourque - www.pixelfudger.com"}
}
Input {
inputs 0
name mask
xpos -228
ypos 853
number 1
}
Input {
inputs 0
name img
xpos -496
ypos -217
}
Dot {
name Dot3
xpos -462
ypos -140
}
set N97e00c00 [stack 0]
Dot {
name Dot2
xpos -689
ypos 208
}
Dot {
name Dot4
xpos -729
ypos 756
}
push $N97e00c00
Dot {
name Dot1
xpos -156
ypos 744
}
push $N97e00c00
push $N97e00c00
Shuffle {
red blue
green blue
alpha black
name Blue
xpos 187
ypos 28
}
set N97e01c00 [stack 0]
push $N97e00c00
Shuffle {
red green
blue green
alpha black
name Green
xpos 76
ypos 26
}
set N97e2a000 [stack 0]
push $N97e00c00
Shuffle {
green red
blue red
alpha black
name Red
xpos -17
ypos 27
}
set N97e2a400 [stack 0]
Switch {
inputs 3
which {{back_color i}}
name High
xpos -17
ypos 132
}
push $N97e2a000
push $N97e2a400
Switch {
inputs 2
which {{"back_color == 0 ? 1 : back_color == 1 ? 0 : 0" i}}
name LowA
xpos 76
ypos 132
}
Multiply {
value {{"1 - supp" i}}
name Multiply1
xpos 76
ypos 190
}
push $N97e01c00
push $N97e2a000
push 0
Switch {
inputs 3
which {{"back_color == 0 ? 2 : back_color == 1 ? 2 : 1" i}}
name LowB
xpos 187
ypos 140
}
Multiply {
value {{supp i}}
name Multiply2
xpos 187
ypos 187
}
Merge2 {
inputs 2
operation plus
name Merge1
xpos 138
ypos 299
}
Multiply {
value {{masterMult i}}
name Multiply3
xpos 138
ypos 327
}
Merge2 {
inputs 2
operation min
name Merge10
xpos -17
ypos 371
}
set N97e60400 [stack 0]
ShuffleCopy {
inputs 2
red red
green green
name ShuffleBlue
xpos -426
ypos 371
}
push $N97e00c00
push $N97e60400
ShuffleCopy {
inputs 2
red red
blue blue
name ShuffleGreen
xpos -526
ypos 369
}
push $N97e00c00
push $N97e60400
ShuffleCopy {
inputs 2
green green
blue blue
name ShuffleRed
xpos -630
ypos 369
}
Switch {
inputs 3
which {{back_color i}}
name Switch1
xpos -526
ypos 424
}
set N97e61400 [stack 0]
push $N97e00c00
push $N97e61400
Merge2 {
inputs 2
operation minus
name Merge9
xpos -338
ypos 547
}
Saturation {
saturation 0
name Saturation1
xpos -338
ypos 586
}
ColorCorrect {
gain {{SpillTweak.r i} {SpillTweak.g i} {SpillTweak.b i} {1 i}}
name ColorCorrect1
xpos -338
ypos 655
}
Merge2 {
inputs 2
operation plus
name Merge11
xpos -526
ypos 655
}
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos -526
ypos 740
}
Keymix {
inputs 3
invertMask true
bbox A
name Keymix1
selected true
xpos -526
ypos 875
disable {{"\[exists parent.input1] ? 0 : 1" i}}
}
set N97e96c00 [stack 0]
Viewer {
input_process false
name Viewer1
xpos 95
ypos 454
}
push $N97e96c00
Output {
name Output1
xpos -526
ypos 980
}
end_group
Dot {
name Dot168
selected true
xpos -2824
ypos 8001
}
push $N97e00000
Dot {
name Dot167
selected true
xpos -2731
ypos 7449
}
DespillMadness {
name DespillMadness5
note_font "Bitstream Vera Sans"
selected true
xpos -2765
ypos 7822
maskChannel -rgba.alpha
}
Keymix {
inputs 3
name Keymix5
selected true
xpos -2765
ypos 7992
}
Dot {
name Dot149
selected true
xpos -2731
ypos 8217
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy18
selected true
xpos -2986
ypos 8208
}
Premult {
name Premult15
selected true
xpos -2986
ypos 8327
}
Dot {
name Dot150
selected true
xpos -2952
ypos 8481
}
Roto {
inputs 0
output alpha
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 0}
    {t x44800000 x44428000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}}}}}
toolbox {createBezier {
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_brush_hardness 0.200000003
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {1024 778}
name Roto21
selected true
xpos -3843
ypos 7991
addUserKnob {20 button +HIDDEN +INVISIBLE}
addUserKnob {22 createPowerRelative -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerRelative()"}
addUserKnob {22 createPowerAbsolute -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerAbsolute()"}
addUserKnob {22 createPowerStabilize -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerStabilize()"}
}
Invert {
name Invert4
selected true
xpos -3843
ypos 8039
}
Blur {
name Blur16
selected true
xpos -3843
ypos 8087
}
Dot {
name Dot173
selected true
xpos -3809
ypos 8144
}
push 0
push $N97c7bc00
Dot {
name Dot171
selected true
xpos -3445
ypos 7449
}
set N98049400 [stack 0]
Dot {
name Dot151
selected true
xpos -3576
ypos 7449
}
Primatte3 {
data { 5
    0 0 0
    589840
    0 5
    30234 30234 30234 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.05 1.732 1.732
    0.05 1.732 1.732
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
  }

primEdgedata { 5
    0 0 0
    589840
    0 5
    30234 30234 30234 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.05 1.732 1.732
    0.05 1.732 1.732
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
  }

primBodydata { 5
    0 0 0
    589840
    0 5
    30234 30234 30234 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.05 1.732 1.732
    0.05 1.732 1.732
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
  }

bg_color_selected false
crop {0 0 2048 1556}
adjustLighting true
"Adjust Lighting" 0
"Hybrid Matte" 0
"Fine Tuning" 0
output_mode "adjust lighting BG"
name Primatte10
selected true
xpos -3610
ypos 7585
}
push $N98049400
Dot {
name Dot172
selected true
xpos -3445
ypos 7688
}
Group {
inputs 2
name PxF_ScreenClean2
help "Clean chroma key background imperfections using a clean plate."
tile_color 0x733520ff
selected true
xpos -3610
ypos 7685
addUserKnob {20 User}
addUserKnob {4 screen_type l ScreenType t "The color of the chroma key background." M {Red Green Blue "" "" ""}}
screen_type Green
addUserKnob {18 screen_color l ScreenColor t "The color that will be used to repair the chroma key background (usually the average color of the background)."}
screen_color {0.18 0.3 0.1}
addUserKnob {6 screen_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 ""}
addUserKnob {26 t l "" t "PxF_ScreenClean.\nInput 1 = Plate.\nInput 2 = Clean Plate.\nUse ScreenClean to erase\nimperfections in a green/blue/red\nscreen using a clean plate." -STARTLINE T "PxF_ScreenClean 2.0.3 - (c) 2012 - Xavier Bourque - www.pixelfudger.com"}
}
Input {
inputs 0
name mask
xpos 419
ypos 274
number 2
}
Input {
inputs 0
name plate
xpos 203
ypos -448
}
Dot {
name Dot1
xpos 209
ypos -347
}
set N980b0c00 [stack 0]
Dot {
name Dot2
xpos -64
ypos -202
}
Dot {
name Dot3
xpos -57
ypos 214
}
set N980b1400 [stack 0]
push $N980b1400
push $N980b0c00
Shuffle {
red blue
green blue
alpha black
name Blue
xpos 203
ypos -187
}
set N980b1800 [stack 0]
push $N980b0c00
Shuffle {
red green
blue green
alpha black
name Green
xpos 112
ypos -179
}
set N980b1c00 [stack 0]
push $N980b0c00
Shuffle {
green red
blue red
alpha black
name Red
xpos 17
ypos -180
}
set N980d2000 [stack 0]
Switch {
inputs 3
which {{screen_type i x1 0}}
name High
xpos 17
ypos -99
}
push $N980b1c00
push $N980d2000
Switch {
inputs 2
which {{"screen_type == 0 ? 1 : screen_type == 1 ? 0 : 0" i x1 0}}
name LowA
xpos 145
ypos -108
}
push $N980b1800
push $N980b1c00
push 0
Switch {
inputs 3
which {{"screen_type == 0 ? 2 : screen_type == 1 ? 2 : 1" i x1 1}}
name LowB
xpos 261
ypos -107
}
Merge2 {
inputs 2
operation max
name Merge1
xpos 217
ypos -59
}
Merge2 {
inputs 2
operation minus
name Merge2
xpos 116
ypos -20
}
Input {
inputs 0
name clean_plate
xpos 462
ypos -437
number 1
}
Dot {
name Dot4
xpos 530
ypos -235
}
set N980d3c00 [stack 0]
Shuffle {
red blue
green blue
alpha black
name Blue1
xpos 570
ypos -194
}
set N98102000 [stack 0]
push $N980d3c00
Shuffle {
red green
blue green
alpha black
name Green1
xpos 481
ypos -195
}
set N98102400 [stack 0]
push $N980d3c00
Shuffle {
green red
blue red
alpha black
name Red1
xpos 382
ypos -194
}
set N98102800 [stack 0]
Switch {
inputs 3
which {{screen_type i x1 0}}
name High1
xpos 401
ypos -130
}
push $N98102400
push $N98102800
Switch {
inputs 2
which {{"screen_type == 0 ? 1 : screen_type == 1 ? 0 : 0" i}}
name LowA1
xpos 498
ypos -131
}
push $N98102000
push $N98102400
push 0
Switch {
inputs 3
which {{"screen_type == 0 ? 2 : screen_type == 1 ? 2 : 1" i}}
name LowB1
xpos 592
ypos -128
}
Merge2 {
inputs 2
operation max
name Merge3
xpos 532
ypos -73
}
Merge2 {
inputs 2
operation minus
name Merge4
xpos 429
ypos -19
}
Merge2 {
inputs 2
operation divide
name Merge5
xpos 309
ypos 87
}
Clamp {
name Clamp1
xpos 309
ypos 114
}
push $N980d3c00
Dot {
name Dot5
xpos 720
ypos -198
}
push $N980b0c00
Dot {
name Dot7
xpos 845
ypos -231
}
ColorCorrect {
gain 0
offset {{screen_color.r i} {screen_color.g i} {screen_color.b i} {1 i}}
name ColorCorrect1
xpos 817
ypos -159
postage_stamp true
}
Merge2 {
inputs 2
operation minus
name Merge6
xpos 692
ypos -24
}
Dot {
name Dot6
xpos 688
ypos 165
}
Merge2 {
inputs 2
operation multiply
name Merge7
xpos 309
ypos 166
}
Merge2 {
inputs 2
operation minus
name Merge8
xpos 309
ypos 215
}
Keymix {
inputs 3
invertMask true
bbox B
name Keymix1
selected true
xpos 309
ypos 299
disable {{"\[exists parent.input2] ? 0 : 1" i x1 0}}
}
Output {
name Output1
xpos 309
ypos 348
}
end_group
set N87280100 [stack 0]
Group {
name PxF_KillSpill9
help "Remove red/green/blue spill."
tile_color 0x733520ff
selected true
xpos -3610
ypos 7778
addUserKnob {20 User}
addUserKnob {4 back_color l ScreenColor t "Which type of spill to remove." M {red green blue "" ""}}
back_color green
addUserKnob {7 supp l Suppression t "Bias the mix of channels used to cap the 'spill' channel.\nFor example when removing 'green spill':\n0 = green channel is capped by the red channel.\n\n0.5 = green channel is capped by half-mix of red and blue channels.\n\n1 = green channel is capped by the blue channel." R 0 2}
supp 0.5
addUserKnob {7 masterMult l Limiter t "Gain applied to the 'cap' channel to make the suppression more or less aggressive." R 0 10}
masterMult 1
addUserKnob {18 SpillTweak t "Adjust the luminance and color of the spill areas." R 0 10}
SpillTweak 1
addUserKnob {6 SpillTweak_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 ""}
addUserKnob {26 t l "" +STARTLINE T "PxF_KillSpill 2.5.2 - (c) 2011 - Xavier Bourque - www.pixelfudger.com"}
}
Input {
inputs 0
name mask
xpos -228
ypos 853
number 1
}
Input {
inputs 0
name img
xpos -496
ypos -217
}
Dot {
name Dot3
xpos -462
ypos -140
}
set N98175400 [stack 0]
Dot {
name Dot2
xpos -689
ypos 208
}
Dot {
name Dot4
xpos -729
ypos 756
}
push $N98175400
Dot {
name Dot1
xpos -156
ypos 744
}
push $N98175400
push $N98175400
Shuffle {
red blue
green blue
alpha black
name Blue
xpos 187
ypos 28
}
set N98198400 [stack 0]
push $N98175400
Shuffle {
red green
blue green
alpha black
name Green
xpos 76
ypos 26
}
set N98198800 [stack 0]
push $N98175400
Shuffle {
green red
blue red
alpha black
name Red
xpos -17
ypos 27
}
set N98198c00 [stack 0]
Switch {
inputs 3
which {{back_color i}}
name High
xpos -17
ypos 132
}
push $N98198800
push $N98198c00
Switch {
inputs 2
which {{"back_color == 0 ? 1 : back_color == 1 ? 0 : 0" i}}
name LowA
xpos 76
ypos 132
}
Multiply {
value {{"1 - supp" i}}
name Multiply1
xpos 76
ypos 190
}
push $N98198400
push $N98198800
push 0
Switch {
inputs 3
which {{"back_color == 0 ? 2 : back_color == 1 ? 2 : 1" i}}
name LowB
xpos 187
ypos 140
}
Multiply {
value {{supp i}}
name Multiply2
xpos 187
ypos 187
}
Merge2 {
inputs 2
operation plus
name Merge1
xpos 138
ypos 299
}
Multiply {
value {{masterMult i}}
name Multiply3
xpos 138
ypos 327
}
Merge2 {
inputs 2
operation min
name Merge10
xpos -17
ypos 371
}
set N981c8c00 [stack 0]
ShuffleCopy {
inputs 2
red red
green green
name ShuffleBlue
xpos -426
ypos 371
}
push $N98175400
push $N981c8c00
ShuffleCopy {
inputs 2
red red
blue blue
name ShuffleGreen
xpos -526
ypos 369
}
push $N98175400
push $N981c8c00
ShuffleCopy {
inputs 2
green green
blue blue
name ShuffleRed
xpos -630
ypos 369
}
Switch {
inputs 3
which {{back_color i}}
name Switch1
xpos -526
ypos 424
}
set N981c9c00 [stack 0]
push $N98175400
push $N981c9c00
Merge2 {
inputs 2
operation minus
name Merge9
xpos -338
ypos 547
}
Saturation {
saturation 0
name Saturation1
xpos -338
ypos 586
}
ColorCorrect {
gain {{SpillTweak.r i} {SpillTweak.g i} {SpillTweak.b i} {1 i}}
name ColorCorrect1
xpos -338
ypos 655
}
Merge2 {
inputs 2
operation plus
name Merge11
xpos -526
ypos 655
}
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos -526
ypos 740
}
Keymix {
inputs 3
invertMask true
bbox A
name Keymix1
selected true
xpos -526
ypos 875
disable {{"\[exists parent.input1] ? 0 : 1" i}}
}
set N98209400 [stack 0]
Viewer {
input_process false
name Viewer1
xpos 95
ypos 454
}
push $N98209400
Output {
name Output1
xpos -526
ypos 980
}
end_group
Dot {
name Dot153
selected true
xpos -3576
ypos 7968
}
push $N87280100
Dot {
name Dot152
selected true
xpos -3446
ypos 7727
}
Primatte3 {
data { 5
    0 0 0
    65552
    0 5
    30234 30234 30234 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.05 1.732 1.732
    0.05 1.732 1.732
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
  }

primEdgedata { 5
    0 0 0
    65552
    0 5
    30234 30234 30234 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.05 1.732 1.732
    0.05 1.732 1.732
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
  }

primBodydata { 5
    0 0 0
    65552
    0 5
    30234 30234 30234 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.05 1.732 1.732
    0.05 1.732 1.732
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
  }

bg_color_selected false
crop {0 0 2048 1556}
"Adjust Lighting" 0
"Hybrid Matte" 0
"Fine Tuning" 0
name Primatte12
selected true
xpos -3480
ypos 7777
}
Group {
name PxF_KillSpill8
help "Remove red/green/blue spill."
tile_color 0x733520ff
selected true
xpos -3480
ypos 7862
addUserKnob {20 User}
addUserKnob {4 back_color l ScreenColor t "Which type of spill to remove." M {red green blue "" ""}}
back_color green
addUserKnob {7 supp l Suppression t "Bias the mix of channels used to cap the 'spill' channel.\nFor example when removing 'green spill':\n0 = green channel is capped by the red channel.\n\n0.5 = green channel is capped by half-mix of red and blue channels.\n\n1 = green channel is capped by the blue channel." R 0 2}
supp 0.5
addUserKnob {7 masterMult l Limiter t "Gain applied to the 'cap' channel to make the suppression more or less aggressive." R 0 10}
masterMult 1
addUserKnob {18 SpillTweak t "Adjust the luminance and color of the spill areas." R 0 10}
SpillTweak 1
addUserKnob {6 SpillTweak_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 ""}
addUserKnob {26 t l "" +STARTLINE T "PxF_KillSpill 2.5.2 - (c) 2011 - Xavier Bourque - www.pixelfudger.com"}
}
Input {
inputs 0
name mask
xpos -228
ypos 853
number 1
}
Input {
inputs 0
name img
xpos -496
ypos -217
}
Dot {
name Dot3
xpos -462
ypos -140
}
set N98283400 [stack 0]
Dot {
name Dot2
xpos -689
ypos 208
}
Dot {
name Dot4
xpos -729
ypos 756
}
push $N98283400
Dot {
name Dot1
xpos -156
ypos 744
}
push $N98283400
push $N98283400
Shuffle {
red blue
green blue
alpha black
name Blue
xpos 187
ypos 28
}
set N982bc400 [stack 0]
push $N98283400
Shuffle {
red green
blue green
alpha black
name Green
xpos 76
ypos 26
}
set N982bc800 [stack 0]
push $N98283400
Shuffle {
green red
blue red
alpha black
name Red
xpos -17
ypos 27
}
set N982bcc00 [stack 0]
Switch {
inputs 3
which {{back_color i}}
name High
xpos -17
ypos 132
}
push $N982bc800
push $N982bcc00
Switch {
inputs 2
which {{"back_color == 0 ? 1 : back_color == 1 ? 0 : 0" i}}
name LowA
xpos 76
ypos 132
}
Multiply {
value {{"1 - supp" i}}
name Multiply1
xpos 76
ypos 190
}
push $N982bc400
push $N982bc800
push 0
Switch {
inputs 3
which {{"back_color == 0 ? 2 : back_color == 1 ? 2 : 1" i}}
name LowB
xpos 187
ypos 140
}
Multiply {
value {{supp i}}
name Multiply2
xpos 187
ypos 187
}
Merge2 {
inputs 2
operation plus
name Merge1
xpos 138
ypos 299
}
Multiply {
value {{masterMult i}}
name Multiply3
xpos 138
ypos 327
}
Merge2 {
inputs 2
operation min
name Merge10
xpos -17
ypos 371
}
set N982ecc00 [stack 0]
ShuffleCopy {
inputs 2
red red
green green
name ShuffleBlue
xpos -426
ypos 371
}
push $N98283400
push $N982ecc00
ShuffleCopy {
inputs 2
red red
blue blue
name ShuffleGreen
xpos -526
ypos 369
}
push $N98283400
push $N982ecc00
ShuffleCopy {
inputs 2
green green
blue blue
name ShuffleRed
xpos -630
ypos 369
}
Switch {
inputs 3
which {{back_color i}}
name Switch1
xpos -526
ypos 424
}
set N982edc00 [stack 0]
push $N98283400
push $N982edc00
Merge2 {
inputs 2
operation minus
name Merge9
xpos -338
ypos 547
}
Saturation {
saturation 0
name Saturation1
xpos -338
ypos 586
}
ColorCorrect {
gain {{SpillTweak.r i} {SpillTweak.g i} {SpillTweak.b i} {1 i}}
name ColorCorrect1
xpos -338
ypos 655
}
Merge2 {
inputs 2
operation plus
name Merge11
xpos -526
ypos 655
}
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos -526
ypos 740
}
Keymix {
inputs 3
invertMask true
bbox A
name Keymix1
selected true
xpos -526
ypos 875
disable {{"\[exists parent.input1] ? 0 : 1" i}}
}
set N98329400 [stack 0]
Viewer {
input_process false
name Viewer1
xpos 95
ypos 454
}
push $N98329400
Output {
name Output1
xpos -526
ypos 980
}
end_group
Merge2 {
inputs 2
operation minus
name Merge47
selected true
xpos -3480
ypos 7965
}
Grade {
black -0.003
gamma 3.4
name Grade23
selected true
xpos -3480
ypos 8021
}
Saturation {
saturation 0.46
name Saturation6
selected true
xpos -3480
ypos 8069
}
Dot {
name Dot154
selected true
xpos -3446
ypos 8144
}
NoOp {
inputs 0
name BG3
tile_color 0xff
note_font "Verdana Bold"
note_font_size 35
selected true
xpos -3755
ypos 7432
}
Merge2 {
inputs 3+1
operation plus
name Merge48
selected true
xpos -3755
ypos 8141
}
Merge2 {
inputs 2
name Merge50
selected true
xpos -3755
ypos 8477
}
StickyNote {
inputs 0
name StickyNote7
label "< Additive with pixel math  \nback dropped to near zero\nthrough subtraction"
selected true
xpos -3375
ypos 7964
}
NoOp {
inputs 0
name CleanPlate4
tile_color 0xd0d0dff
note_font "Verdana Bold"
note_font_size 35
note_font_color 0xff
selected true
xpos -1301
ypos 7334
}
Dot {
name Dot157
selected true
xpos -1267
ypos 7470
}
set N983d6400 [stack 0]
Dot {
name Dot158
selected true
xpos -1267
ypos 7542
}
set N983d6800 [stack 0]
Dot {
name Dot159
selected true
xpos -1411
ypos 7541
}
Primatte3 {
data { 5
    0 0 0
    589840
    0 5
    30234 30234 30234 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.05 1.732 1.732
    0.05 1.732 1.732
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
  }

primEdgedata { 5
    0 0 0
    589840
    0 5
    30234 30234 30234 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.05 1.732 1.732
    0.05 1.732 1.732
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
  }

primBodydata { 5
    0 0 0
    589840
    0 5
    30234 30234 30234 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.05 1.732 1.732
    0.05 1.732 1.732
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
  }

bg_color_selected false
crop {0 0 2048 1556}
adjustLighting true
"Adjust Lighting" 0
"Hybrid Matte" 0
"Fine Tuning" 0
output_mode "adjust lighting BG"
name Primatte13
selected true
xpos -1445
ypos 7587
}
Dot {
name Dot160
selected true
xpos -1411
ypos 7648
}
push $N983d6800
Group {
inputs 2
name PxF_ScreenClean3
help "Clean chroma key background imperfections using a clean plate."
tile_color 0x733520ff
selected true
xpos -1301
ypos 7645
addUserKnob {20 User}
addUserKnob {4 screen_type l ScreenType t "The color of the chroma key background." M {Red Green Blue "" "" ""}}
screen_type Green
addUserKnob {18 screen_color l ScreenColor t "The color that will be used to repair the chroma key background (usually the average color of the background)."}
screen_color {0.18 0.3 0.1}
addUserKnob {6 screen_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 ""}
addUserKnob {26 t l "" t "PxF_ScreenClean.\nInput 1 = Plate.\nInput 2 = Clean Plate.\nUse ScreenClean to erase\nimperfections in a green/blue/red\nscreen using a clean plate." -STARTLINE T "PxF_ScreenClean 2.0.3 - (c) 2012 - Xavier Bourque - www.pixelfudger.com"}
}
Input {
inputs 0
name mask
xpos 419
ypos 274
number 2
}
Input {
inputs 0
name plate
xpos 203
ypos -448
}
Dot {
name Dot1
xpos 209
ypos -347
}
set N9840a000 [stack 0]
Dot {
name Dot2
xpos -64
ypos -202
}
Dot {
name Dot3
xpos -57
ypos 214
}
set N9840a800 [stack 0]
push $N9840a800
push $N9840a000
Shuffle {
red blue
green blue
alpha black
name Blue
xpos 203
ypos -187
}
set N9840ac00 [stack 0]
push $N9840a000
Shuffle {
red green
blue green
alpha black
name Green
xpos 112
ypos -179
}
set N9840b000 [stack 0]
push $N9840a000
Shuffle {
green red
blue red
alpha black
name Red
xpos 17
ypos -180
}
set N9840b400 [stack 0]
Switch {
inputs 3
which {{screen_type i x1 0}}
name High
xpos 17
ypos -99
}
push $N9840b000
push $N9840b400
Switch {
inputs 2
which {{"screen_type == 0 ? 1 : screen_type == 1 ? 0 : 0" i x1 0}}
name LowA
xpos 145
ypos -108
}
push $N9840ac00
push $N9840b000
push 0
Switch {
inputs 3
which {{"screen_type == 0 ? 2 : screen_type == 1 ? 2 : 1" i x1 1}}
name LowB
xpos 261
ypos -107
}
Merge2 {
inputs 2
operation max
name Merge1
xpos 217
ypos -59
}
Merge2 {
inputs 2
operation minus
name Merge2
xpos 116
ypos -20
}
Input {
inputs 0
name clean_plate
xpos 462
ypos -437
number 1
}
Dot {
name Dot4
xpos 530
ypos -235
}
set N98433000 [stack 0]
Shuffle {
red blue
green blue
alpha black
name Blue1
xpos 570
ypos -194
}
set N98433400 [stack 0]
push $N98433000
Shuffle {
red green
blue green
alpha black
name Green1
xpos 481
ypos -195
}
set N98433800 [stack 0]
push $N98433000
Shuffle {
green red
blue red
alpha black
name Red1
xpos 382
ypos -194
}
set N98433c00 [stack 0]
Switch {
inputs 3
which {{screen_type i x1 0}}
name High1
xpos 401
ypos -130
}
push $N98433800
push $N98433c00
Switch {
inputs 2
which {{"screen_type == 0 ? 1 : screen_type == 1 ? 0 : 0" i}}
name LowA1
xpos 498
ypos -131
}
push $N98433400
push $N98433800
push 0
Switch {
inputs 3
which {{"screen_type == 0 ? 2 : screen_type == 1 ? 2 : 1" i}}
name LowB1
xpos 592
ypos -128
}
Merge2 {
inputs 2
operation max
name Merge3
xpos 532
ypos -73
}
Merge2 {
inputs 2
operation minus
name Merge4
xpos 429
ypos -19
}
Merge2 {
inputs 2
operation divide
name Merge5
xpos 309
ypos 87
}
Clamp {
name Clamp1
xpos 309
ypos 114
}
push $N98433000
Dot {
name Dot5
xpos 720
ypos -198
}
push $N9840a000
Dot {
name Dot7
xpos 845
ypos -231
}
ColorCorrect {
gain 0
offset {{screen_color.r i} {screen_color.g i} {screen_color.b i} {1 i}}
name ColorCorrect1
xpos 817
ypos -159
postage_stamp true
}
Merge2 {
inputs 2
operation minus
name Merge6
xpos 692
ypos -24
}
Dot {
name Dot6
xpos 688
ypos 165
}
Merge2 {
inputs 2
operation multiply
name Merge7
xpos 309
ypos 166
}
Merge2 {
inputs 2
operation minus
name Merge8
xpos 309
ypos 215
}
Keymix {
inputs 3
invertMask true
bbox B
name Keymix1
selected true
xpos 309
ypos 299
disable {{"\[exists parent.input2] ? 0 : 1" i x1 0}}
}
Output {
name Output1
xpos 309
ypos 348
}
end_group
OFXuk.co.thefoundry.keylight.keylight_v201 {
show "Final Result"
unPreMultiply false
screenColour {0 0 0}
screenGain 1
screenBalance 0.5
alphaBias {0.5 0.5 0.5}
despillBias {0.5 0.5 0.5}
gangBiases true
preBlur 0
"Screen Matte" 0
screenClipMin 0
screenClipMax 1
screenClipRollback 0
screenGrowShrink 0
screenSoftness 0
screenDespotBlack 0
screenDespotWhite 0
screenReplaceMethod "Soft Colour"
screenReplaceColour {0.5 0.5 0.5}
Tuning 0
midPoint 0.5
lowGain 1
midGain 1
highGain 1
"Inside Mask" 0
sourceAlphaHandling Ignore
insideReplaceMethod "Soft Colour"
insideReplaceColour {0.5 0.5 0.5}
Crops 0
SourceXMethod Colour
SourceYMethod Colour
SourceEdgeColour 0
SourceCropL 0
SourceCropR 1
SourceCropB 0
SourceCropT 1
balanceSet false
insideComponent None
outsideComponent None
cacheBreaker true
name Keylight22
selected true
xpos -1301
ypos 7755
}
set N984d4000 [stack 0]
Dot {
name Dot161
selected true
xpos -1411
ypos 7758
}
Clamp {
name Clamp6
selected true
xpos -1445
ypos 7821
}
Erode {
name Erode6
selected true
xpos -1445
ypos 7893
}
Blur {
name Blur15
selected true
xpos -1445
ypos 7965
}
Dot {
name Dot162
selected true
xpos -1411
ypos 8022
}
set N984d5400 [stack 0]
push $N984d4000
Grade {
name Grade21
selected true
xpos -1301
ypos 7899
}
Merge2 {
inputs 2
operation screen
name Merge53
selected true
xpos -1301
ypos 8019
}
push $N984d5400
Dot {
name Dot163
selected true
xpos -1411
ypos 8070
}
Dot {
name Dot174
selected true
xpos -1122
ypos 8070
}
push $N983d6400
Dot {
name Dot175
selected true
xpos -1140
ypos 7470
}
set N98516800 [stack 0]
Group {
name PxF_KillSpill10
help "Remove red/green/blue spill."
tile_color 0x733520ff
selected true
xpos -1174
ypos 7842
addUserKnob {20 User}
addUserKnob {4 back_color l ScreenColor t "Which type of spill to remove." M {red green blue "" ""}}
back_color green
addUserKnob {7 supp l Suppression t "Bias the mix of channels used to cap the 'spill' channel.\nFor example when removing 'green spill':\n0 = green channel is capped by the red channel.\n\n0.5 = green channel is capped by half-mix of red and blue channels.\n\n1 = green channel is capped by the blue channel." R 0 2}
supp 0.5
addUserKnob {7 masterMult l Limiter t "Gain applied to the 'cap' channel to make the suppression more or less aggressive." R 0 10}
masterMult 1
addUserKnob {18 SpillTweak t "Adjust the luminance and color of the spill areas." R 0 10}
SpillTweak 1
addUserKnob {6 SpillTweak_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 ""}
addUserKnob {26 t l "" +STARTLINE T "PxF_KillSpill 2.5.2 - (c) 2011 - Xavier Bourque - www.pixelfudger.com"}
}
Input {
inputs 0
name mask
xpos -228
ypos 853
number 1
}
Input {
inputs 0
name img
xpos -496
ypos -217
}
Dot {
name Dot3
xpos -462
ypos -140
}
set N98517400 [stack 0]
Dot {
name Dot2
xpos -689
ypos 208
}
Dot {
name Dot4
xpos -729
ypos 756
}
push $N98517400
Dot {
name Dot1
xpos -156
ypos 744
}
push $N98517400
push $N98517400
Shuffle {
red blue
green blue
alpha black
name Blue
xpos 187
ypos 28
}
set N98538400 [stack 0]
push $N98517400
Shuffle {
red green
blue green
alpha black
name Green
xpos 76
ypos 26
}
set N98538800 [stack 0]
push $N98517400
Shuffle {
green red
blue red
alpha black
name Red
xpos -17
ypos 27
}
set N98538c00 [stack 0]
Switch {
inputs 3
which {{back_color i}}
name High
xpos -17
ypos 132
}
push $N98538800
push $N98538c00
Switch {
inputs 2
which {{"back_color == 0 ? 1 : back_color == 1 ? 0 : 0" i}}
name LowA
xpos 76
ypos 132
}
Multiply {
value {{"1 - supp" i}}
name Multiply1
xpos 76
ypos 190
}
push $N98538400
push $N98538800
push 0
Switch {
inputs 3
which {{"back_color == 0 ? 2 : back_color == 1 ? 2 : 1" i}}
name LowB
xpos 187
ypos 140
}
Multiply {
value {{supp i}}
name Multiply2
xpos 187
ypos 187
}
Merge2 {
inputs 2
operation plus
name Merge1
xpos 138
ypos 299
}
Multiply {
value {{masterMult i}}
name Multiply3
xpos 138
ypos 327
}
Merge2 {
inputs 2
operation min
name Merge10
xpos -17
ypos 371
}
set N9856ac00 [stack 0]
ShuffleCopy {
inputs 2
red red
green green
name ShuffleBlue
xpos -426
ypos 371
}
push $N98517400
push $N9856ac00
ShuffleCopy {
inputs 2
red red
blue blue
name ShuffleGreen
xpos -526
ypos 369
}
push $N98517400
push $N9856ac00
ShuffleCopy {
inputs 2
green green
blue blue
name ShuffleRed
xpos -630
ypos 369
}
Switch {
inputs 3
which {{back_color i}}
name Switch1
xpos -526
ypos 424
}
set N9856bc00 [stack 0]
push $N98517400
push $N9856bc00
Merge2 {
inputs 2
operation minus
name Merge9
xpos -338
ypos 547
}
Saturation {
saturation 0
name Saturation1
xpos -338
ypos 586
}
ColorCorrect {
gain {{SpillTweak.r i} {SpillTweak.g i} {SpillTweak.b i} {1 i}}
name ColorCorrect1
xpos -338
ypos 655
}
Merge2 {
inputs 2
operation plus
name Merge11
xpos -526
ypos 655
}
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos -526
ypos 740
}
Keymix {
inputs 3
invertMask true
bbox A
name Keymix1
selected true
xpos -526
ypos 875
disable {{"\[exists parent.input1] ? 0 : 1" i}}
}
set N985a3400 [stack 0]
Viewer {
input_process false
name Viewer1
xpos 95
ypos 454
}
push $N985a3400
Output {
name Output1
xpos -526
ypos 980
}
end_group
Dot {
name Dot176
selected true
xpos -1139
ypos 8022
}
push $N98516800
Dot {
name Dot177
selected true
xpos -1046
ypos 7470
}
DespillMadness {
name DespillMadness9
note_font "Bitstream Vera Sans"
selected true
xpos -1080
ypos 7843
maskChannel -rgba.alpha
}
Keymix {
inputs 3
name Keymix6
selected true
xpos -1080
ypos 8013
}
Dot {
name Dot178
selected true
xpos -1046
ypos 8238
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy19
selected true
xpos -1301
ypos 8229
}
Premult {
name Premult17
selected true
xpos -1301
ypos 8348
}
Dot {
name Dot179
selected true
xpos -1267
ypos 8502
}
Roto {
inputs 0
output alpha
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 0}
    {t x44800000 x44428000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}}}}}
toolbox {createBezier {
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_brush_hardness 0.200000003
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {1024 778}
name Roto23
selected true
xpos -2158
ypos 8012
addUserKnob {20 button +HIDDEN +INVISIBLE}
addUserKnob {22 createPowerRelative -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerRelative()"}
addUserKnob {22 createPowerAbsolute -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerAbsolute()"}
addUserKnob {22 createPowerStabilize -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerStabilize()"}
}
Invert {
name Invert5
selected true
xpos -2158
ypos 8060
}
Blur {
name Blur17
selected true
xpos -2158
ypos 8108
}
Dot {
name Dot180
selected true
xpos -2124
ypos 8165
}
push 0
push $N983d6400
Dot {
name Dot181
selected true
xpos -1760
ypos 7470
}
set N98759c00 [stack 0]
Dot {
name Dot182
selected true
xpos -1891
ypos 7470
}
Primatte3 {
data { 5
    0 0 0
    589840
    0 5
    30234 30234 30234 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.05 1.732 1.732
    0.05 1.732 1.732
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
  }

primEdgedata { 5
    0 0 0
    589840
    0 5
    30234 30234 30234 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.05 1.732 1.732
    0.05 1.732 1.732
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
  }

primBodydata { 5
    0 0 0
    589840
    0 5
    30234 30234 30234 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.05 1.732 1.732
    0.05 1.732 1.732
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
  }

bg_color_selected false
crop {0 0 2048 1556}
adjustLighting true
"Adjust Lighting" 0
"Hybrid Matte" 0
"Fine Tuning" 0
output_mode "adjust lighting BG"
name Primatte14
selected true
xpos -1925
ypos 7606
}
push $N98759c00
Dot {
name Dot183
selected true
xpos -1760
ypos 7709
}
Group {
inputs 2
name PxF_ScreenClean4
help "Clean chroma key background imperfections using a clean plate."
tile_color 0x733520ff
selected true
xpos -1925
ypos 7706
addUserKnob {20 User}
addUserKnob {4 screen_type l ScreenType t "The color of the chroma key background." M {Red Green Blue "" "" ""}}
screen_type Green
addUserKnob {18 screen_color l ScreenColor t "The color that will be used to repair the chroma key background (usually the average color of the background)."}
screen_color {0.18 0.3 0.1}
addUserKnob {6 screen_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 ""}
addUserKnob {26 t l "" t "PxF_ScreenClean.\nInput 1 = Plate.\nInput 2 = Clean Plate.\nUse ScreenClean to erase\nimperfections in a green/blue/red\nscreen using a clean plate." -STARTLINE T "PxF_ScreenClean 2.0.3 - (c) 2012 - Xavier Bourque - www.pixelfudger.com"}
}
Input {
inputs 0
name mask
xpos 419
ypos 274
number 2
}
Input {
inputs 0
name plate
xpos 203
ypos -448
}
Dot {
name Dot1
xpos 209
ypos -347
}
set N987ad400 [stack 0]
Dot {
name Dot2
xpos -64
ypos -202
}
Dot {
name Dot3
xpos -57
ypos 214
}
set N987adc00 [stack 0]
push $N987adc00
push $N987ad400
Shuffle {
red blue
green blue
alpha black
name Blue
xpos 203
ypos -187
}
set N987e6000 [stack 0]
push $N987ad400
Shuffle {
red green
blue green
alpha black
name Green
xpos 112
ypos -179
}
set N987e6400 [stack 0]
push $N987ad400
Shuffle {
green red
blue red
alpha black
name Red
xpos 17
ypos -180
}
set N987e6800 [stack 0]
Switch {
inputs 3
which {{screen_type i x1 0}}
name High
xpos 17
ypos -99
}
push $N987e6400
push $N987e6800
Switch {
inputs 2
which {{"screen_type == 0 ? 1 : screen_type == 1 ? 0 : 0" i x1 0}}
name LowA
xpos 145
ypos -108
}
push $N987e6000
push $N987e6400
push 0
Switch {
inputs 3
which {{"screen_type == 0 ? 2 : screen_type == 1 ? 2 : 1" i x1 1}}
name LowB
xpos 261
ypos -107
}
Merge2 {
inputs 2
operation max
name Merge1
xpos 217
ypos -59
}
Merge2 {
inputs 2
operation minus
name Merge2
xpos 116
ypos -20
}
Input {
inputs 0
name clean_plate
xpos 462
ypos -437
number 1
}
Dot {
name Dot4
xpos 530
ypos -235
}
set N9881e400 [stack 0]
Shuffle {
red blue
green blue
alpha black
name Blue1
xpos 570
ypos -194
}
set N9881e800 [stack 0]
push $N9881e400
Shuffle {
red green
blue green
alpha black
name Green1
xpos 481
ypos -195
}
set N9881ec00 [stack 0]
push $N9881e400
Shuffle {
green red
blue red
alpha black
name Red1
xpos 382
ypos -194
}
set N9881f000 [stack 0]
Switch {
inputs 3
which {{screen_type i x1 0}}
name High1
xpos 401
ypos -130
}
push $N9881ec00
push $N9881f000
Switch {
inputs 2
which {{"screen_type == 0 ? 1 : screen_type == 1 ? 0 : 0" i}}
name LowA1
xpos 498
ypos -131
}
push $N9881e800
push $N9881ec00
push 0
Switch {
inputs 3
which {{"screen_type == 0 ? 2 : screen_type == 1 ? 2 : 1" i}}
name LowB1
xpos 592
ypos -128
}
Merge2 {
inputs 2
operation max
name Merge3
xpos 532
ypos -73
}
Merge2 {
inputs 2
operation minus
name Merge4
xpos 429
ypos -19
}
Merge2 {
inputs 2
operation divide
name Merge5
xpos 309
ypos 87
}
Clamp {
name Clamp1
xpos 309
ypos 114
}
push $N9881e400
Dot {
name Dot5
xpos 720
ypos -198
}
push $N987ad400
Dot {
name Dot7
xpos 845
ypos -231
}
ColorCorrect {
gain 0
offset {{screen_color.r i} {screen_color.g i} {screen_color.b i} {1 i}}
name ColorCorrect1
xpos 817
ypos -159
postage_stamp true
}
Merge2 {
inputs 2
operation minus
name Merge6
xpos 692
ypos -24
}
Dot {
name Dot6
xpos 688
ypos 165
}
Merge2 {
inputs 2
operation multiply
name Merge7
xpos 309
ypos 166
}
Merge2 {
inputs 2
operation minus
name Merge8
xpos 309
ypos 215
}
Keymix {
inputs 3
invertMask true
bbox B
name Keymix1
selected true
xpos 309
ypos 299
disable {{"\[exists parent.input2] ? 0 : 1" i x1 0}}
}
Output {
name Output1
xpos 309
ypos 348
}
end_group
DespillMadness {
name DespillMadness11
note_font "Bitstream Vera Sans"
selected true
xpos -1925
ypos 7853
gamma 0.2
offset {-0.35 -0.255 -0.18 0}
maskChannel -rgba.alpha
}
Dot {
name Dot155
selected true
xpos -1891
ypos 8165
}
NoOp {
inputs 0
name BG4
tile_color 0xff
note_font "Verdana Bold"
note_font_size 35
selected true
xpos -2070
ypos 7453
}
Merge2 {
inputs 3+1
operation plus
name Merge55
selected true
xpos -2070
ypos 8162
}
Merge2 {
inputs 2
name Merge56
selected true
xpos -2070
ypos 8498
}
StickyNote {
inputs 0
name StickyNote8
label "< Back dropped to\nnear zero in the despill"
selected true
xpos -1821
ypos 7841
}
push $cut_paste_input
NoOp {
name CleanPlate5
tile_color 0xd0d0dff
note_font "Verdana Bold"
note_font_size 35
note_font_color 0xff
selected true
xpos -6065
ypos 8883
}
Dot {
name Dot156
selected true
xpos -6031
ypos 9043
}
set N9d9adc00 [stack 0]
OFXuk.co.thefoundry.keylight.keylight_v201 {
show "Final Result"
unPreMultiply false
screenColour {0 0 0}
screenGain 1
screenBalance 0.5
alphaBias {0.5 0.5 0.5}
despillBias {0.5 0.5 0.5}
gangBiases true
preBlur 0
"Screen Matte" 0
screenClipMin 0
screenClipMax 1
screenClipRollback 0
screenGrowShrink 0
screenSoftness 0
screenDespotBlack 0
screenDespotWhite 0
screenReplaceMethod "Soft Colour"
screenReplaceColour {0.5 0.5 0.5}
Tuning 0
midPoint 0.5
lowGain 1
midGain 1
highGain 1
"Inside Mask" 0
sourceAlphaHandling Ignore
insideReplaceMethod "Soft Colour"
insideReplaceColour {0.5 0.5 0.5}
Crops 0
SourceXMethod Colour
SourceYMethod Colour
SourceEdgeColour 0
SourceCropL 0
SourceCropR 1
SourceCropB 0
SourceCropT 1
balanceSet false
insideComponent None
outsideComponent None
cacheBreaker true
name Keylight23
selected true
xpos -6065
ypos 9208
}
set N9d9ce000 [stack 0]
Dot {
name Dot184
selected true
xpos -6239
ypos 9211
}
Clamp {
name Clamp7
selected true
xpos -6273
ypos 9322
}
Erode {
name Erode7
selected true
xpos -6273
ypos 9394
}
Blur {
name Blur18
selected true
xpos -6273
ypos 9466
}
Dot {
name Dot185
selected true
xpos -6239
ypos 9571
}
push $N9d9ce000
Grade {
name Grade22
selected true
xpos -6065
ypos 9328
}
Merge2 {
inputs 2
operation screen
name Merge54
selected true
xpos -6065
ypos 9568
}
push $N9d9adc00
Dot {
name Dot186
selected true
xpos -5835
ypos 9043
}
Group {
name PxF_KillSpill11
help "Remove red/green/blue spill."
tile_color 0x733520ff
selected true
xpos -5869
ypos 9239
addUserKnob {20 User}
addUserKnob {4 back_color l ScreenColor t "Which type of spill to remove." M {red green blue "" ""}}
back_color green
addUserKnob {7 supp l Suppression t "Bias the mix of channels used to cap the 'spill' channel.\nFor example when removing 'green spill':\n0 = green channel is capped by the red channel.\n\n0.5 = green channel is capped by half-mix of red and blue channels.\n\n1 = green channel is capped by the blue channel." R 0 2}
supp 0.5
addUserKnob {7 masterMult l Limiter t "Gain applied to the 'cap' channel to make the suppression more or less aggressive." R 0 10}
masterMult 1
addUserKnob {18 SpillTweak t "Adjust the luminance and color of the spill areas." R 0 10}
SpillTweak 1
addUserKnob {6 SpillTweak_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 ""}
addUserKnob {26 t l "" +STARTLINE T "PxF_KillSpill 2.5.2 - (c) 2011 - Xavier Bourque - www.pixelfudger.com"}
}
Input {
inputs 0
name mask
xpos -228
ypos 853
number 1
}
Input {
inputs 0
name img
xpos -496
ypos -217
}
Dot {
name Dot3
xpos -462
ypos -140
}
set N9da0ec00 [stack 0]
Dot {
name Dot2
xpos -689
ypos 208
}
Dot {
name Dot4
xpos -729
ypos 756
}
push $N9da0ec00
Dot {
name Dot1
xpos -156
ypos 744
}
push $N9da0ec00
push $N9da0ec00
Shuffle {
red blue
green blue
alpha black
name Blue
xpos 187
ypos 28
}
set N9da0fc00 [stack 0]
push $N9da0ec00
Shuffle {
red green
blue green
alpha black
name Green
xpos 76
ypos 26
}
set N9da2a000 [stack 0]
push $N9da0ec00
Shuffle {
green red
blue red
alpha black
name Red
xpos -17
ypos 27
}
set N9da2a400 [stack 0]
Switch {
inputs 3
which {{back_color i}}
name High
xpos -17
ypos 132
}
push $N9da2a000
push $N9da2a400
Switch {
inputs 2
which {{"back_color == 0 ? 1 : back_color == 1 ? 0 : 0" i}}
name LowA
xpos 76
ypos 132
}
Multiply {
value {{"1 - supp" i}}
name Multiply1
xpos 76
ypos 190
}
push $N9da0fc00
push $N9da2a000
push 0
Switch {
inputs 3
which {{"back_color == 0 ? 2 : back_color == 1 ? 2 : 1" i}}
name LowB
xpos 187
ypos 140
}
Multiply {
value {{supp i}}
name Multiply2
xpos 187
ypos 187
}
Merge2 {
inputs 2
operation plus
name Merge1
xpos 138
ypos 299
}
Multiply {
value {{masterMult i}}
name Multiply3
xpos 138
ypos 327
}
Merge2 {
inputs 2
operation min
name Merge10
xpos -17
ypos 371
}
set N9da66400 [stack 0]
ShuffleCopy {
inputs 2
red red
green green
name ShuffleBlue
xpos -426
ypos 371
}
push $N9da0ec00
push $N9da66400
ShuffleCopy {
inputs 2
red red
blue blue
name ShuffleGreen
xpos -526
ypos 369
}
push $N9da0ec00
push $N9da66400
ShuffleCopy {
inputs 2
green green
blue blue
name ShuffleRed
xpos -630
ypos 369
}
Switch {
inputs 3
which {{back_color i}}
name Switch1
xpos -526
ypos 424
}
set N9da67400 [stack 0]
push $N9da0ec00
push $N9da67400
Merge2 {
inputs 2
operation minus
name Merge9
xpos -338
ypos 547
}
Saturation {
saturation 0
name Saturation1
xpos -338
ypos 586
}
ColorCorrect {
gain {{SpillTweak.r i} {SpillTweak.g i} {SpillTweak.b i} {1 i}}
name ColorCorrect1
xpos -338
ypos 655
}
Merge2 {
inputs 2
operation plus
name Merge11
xpos -526
ypos 655
}
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos -526
ypos 740
}
Keymix {
inputs 3
invertMask true
bbox A
name Keymix1
selected true
xpos -526
ypos 875
disable {{"\[exists parent.input1] ? 0 : 1" i}}
}
set N9daa0c00 [stack 0]
Viewer {
input_process false
name Viewer1
xpos 95
ypos 454
}
push $N9daa0c00
Output {
name Output1
xpos -526
ypos 980
}
end_group
Dot {
name Dot187
selected true
xpos -5835
ypos 9739
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy20
selected true
xpos -6065
ypos 9730
}
Premult {
name Premult22
selected true
xpos -6065
ypos 9849
}
Dot {
name Dot188
selected true
xpos -6031
ypos 10003
}
NoOp {
inputs 0
name BG5
tile_color 0xff
note_font "Verdana Bold"
note_font_size 35
selected true
xpos -6812
ypos 8955
}
Log2Lin {
operation lin2log
black 0
name Log2Lin3
selected true
xpos -6812
ypos 9485
}
push $N9d9adc00
Dot {
name Dot189
selected true
xpos -6513
ypos 9043
}
set N9db19000 [stack 0]
Primatte3 {
data { 5
    0 0 0
    589840
    0 5
    30234 30234 30234 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.05 1.732 1.732
    0.05 1.732 1.732
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
  }

primEdgedata { 5
    0 0 0
    589840
    0 5
    30234 30234 30234 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.05 1.732 1.732
    0.05 1.732 1.732
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
  }

primBodydata { 5
    0 0 0
    589840
    0 5
    30234 30234 30234 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.05 1.732 1.732
    0.05 1.732 1.732
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
  }

bg_color_selected false
crop {0 0 2048 1556}
adjustLighting true
"Adjust Lighting" 0
"Hybrid Matte" 0
"Fine Tuning" 0
output_mode "adjust lighting BG"
name Primatte15
selected true
xpos -6547
ypos 9232
}
PostageStamp {
name CleanScreen1
selected true
xpos -6547
ypos 9316
postage_stamp true
}
Group {
name PxF_KillSpill13
help "Remove red/green/blue spill."
tile_color 0x733520ff
selected true
xpos -6547
ypos 9433
addUserKnob {20 User}
addUserKnob {4 back_color l ScreenColor t "Which type of spill to remove." M {red green blue "" ""}}
back_color green
addUserKnob {7 supp l Suppression t "Bias the mix of channels used to cap the 'spill' channel.\nFor example when removing 'green spill':\n0 = green channel is capped by the red channel.\n\n0.5 = green channel is capped by half-mix of red and blue channels.\n\n1 = green channel is capped by the blue channel." R 0 2}
supp 0.5
addUserKnob {7 masterMult l Limiter t "Gain applied to the 'cap' channel to make the suppression more or less aggressive." R 0 10}
masterMult 1
addUserKnob {18 SpillTweak t "Adjust the luminance and color of the spill areas." R 0 10}
SpillTweak 1
addUserKnob {6 SpillTweak_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 ""}
addUserKnob {26 t l "" +STARTLINE T "PxF_KillSpill 2.5.2 - (c) 2011 - Xavier Bourque - www.pixelfudger.com"}
}
Input {
inputs 0
name mask
xpos -228
ypos 853
number 1
}
Input {
inputs 0
name img
xpos -496
ypos -217
}
Dot {
name Dot3
xpos -462
ypos -140
}
set N9db4e400 [stack 0]
Dot {
name Dot2
xpos -689
ypos 208
}
Dot {
name Dot4
xpos -729
ypos 756
}
push $N9db4e400
Dot {
name Dot1
xpos -156
ypos 744
}
push $N9db4e400
push $N9db4e400
Shuffle {
red blue
green blue
alpha black
name Blue
xpos 187
ypos 28
}
set N9db4f400 [stack 0]
push $N9db4e400
Shuffle {
red green
blue green
alpha black
name Green
xpos 76
ypos 26
}
set N9db4f800 [stack 0]
push $N9db4e400
Shuffle {
green red
blue red
alpha black
name Red
xpos -17
ypos 27
}
set N9db4fc00 [stack 0]
Switch {
inputs 3
which {{back_color i}}
name High
xpos -17
ypos 132
}
push $N9db4f800
push $N9db4fc00
Switch {
inputs 2
which {{"back_color == 0 ? 1 : back_color == 1 ? 0 : 0" i}}
name LowA
xpos 76
ypos 132
}
Multiply {
value {{"1 - supp" i}}
name Multiply1
xpos 76
ypos 190
}
push $N9db4f400
push $N9db4f800
push 0
Switch {
inputs 3
which {{"back_color == 0 ? 2 : back_color == 1 ? 2 : 1" i}}
name LowB
xpos 187
ypos 140
}
Multiply {
value {{supp i}}
name Multiply2
xpos 187
ypos 187
}
Merge2 {
inputs 2
operation plus
name Merge1
xpos 138
ypos 299
}
Multiply {
value {{masterMult i}}
name Multiply3
xpos 138
ypos 327
}
Merge2 {
inputs 2
operation min
name Merge10
xpos -17
ypos 371
}
set N9db77c00 [stack 0]
ShuffleCopy {
inputs 2
red red
green green
name ShuffleBlue
xpos -426
ypos 371
}
push $N9db4e400
push $N9db77c00
ShuffleCopy {
inputs 2
red red
blue blue
name ShuffleGreen
xpos -526
ypos 369
}
push $N9db4e400
push $N9db77c00
ShuffleCopy {
inputs 2
green green
blue blue
name ShuffleRed
xpos -630
ypos 369
}
Switch {
inputs 3
which {{back_color i}}
name Switch1
xpos -526
ypos 424
}
set N9dbb0c00 [stack 0]
push $N9db4e400
push $N9dbb0c00
Merge2 {
inputs 2
operation minus
name Merge9
xpos -338
ypos 547
}
Saturation {
saturation 0
name Saturation1
xpos -338
ypos 586
}
ColorCorrect {
gain {{SpillTweak.r i} {SpillTweak.g i} {SpillTweak.b i} {1 i}}
name ColorCorrect1
xpos -338
ypos 655
}
Merge2 {
inputs 2
operation plus
name Merge11
xpos -526
ypos 655
}
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos -526
ypos 740
}
Keymix {
inputs 3
invertMask true
bbox A
name Keymix1
selected true
xpos -526
ypos 875
disable {{"\[exists parent.input1] ? 0 : 1" i}}
}
set N9dbf0400 [stack 0]
Viewer {
input_process false
name Viewer1
xpos 95
ypos 454
}
push $N9dbf0400
Output {
name Output1
xpos -526
ypos 980
}
end_group
Log2Lin {
operation lin2log
black 0
name Log2Lin1
selected true
xpos -6547
ypos 9485
}
Dot {
name Dot213
selected true
xpos -6513
ypos 9536
}
Dot {
name Dot192
selected true
xpos -6727
ypos 9536
}
push $N9db19000
Dot {
name Dot190
selected true
xpos -6654
ypos 9043
}
Group {
name PxF_KillSpill12
help "Remove red/green/blue spill."
tile_color 0x733520ff
selected true
xpos -6688
ypos 9437
addUserKnob {20 User}
addUserKnob {4 back_color l ScreenColor t "Which type of spill to remove." M {red green blue "" ""}}
back_color green
addUserKnob {7 supp l Suppression t "Bias the mix of channels used to cap the 'spill' channel.\nFor example when removing 'green spill':\n0 = green channel is capped by the red channel.\n\n0.5 = green channel is capped by half-mix of red and blue channels.\n\n1 = green channel is capped by the blue channel." R 0 2}
supp 0.5
addUserKnob {7 masterMult l Limiter t "Gain applied to the 'cap' channel to make the suppression more or less aggressive." R 0 10}
masterMult 1
addUserKnob {18 SpillTweak t "Adjust the luminance and color of the spill areas." R 0 10}
SpillTweak 1
addUserKnob {6 SpillTweak_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 ""}
addUserKnob {26 t l "" +STARTLINE T "PxF_KillSpill 2.5.2 - (c) 2011 - Xavier Bourque - www.pixelfudger.com"}
}
Input {
inputs 0
name mask
xpos -228
ypos 853
number 1
}
Input {
inputs 0
name img
xpos -496
ypos -217
}
Dot {
name Dot3
xpos -462
ypos -140
}
set N9dc66800 [stack 0]
Dot {
name Dot2
xpos -689
ypos 208
}
Dot {
name Dot4
xpos -729
ypos 756
}
push $N9dc66800
Dot {
name Dot1
xpos -156
ypos 744
}
push $N9dc66800
push $N9dc66800
Shuffle {
red blue
green blue
alpha black
name Blue
xpos 187
ypos 28
}
set N9dc67800 [stack 0]
push $N9dc66800
Shuffle {
red green
blue green
alpha black
name Green
xpos 76
ypos 26
}
set N9dc67c00 [stack 0]
push $N9dc66800
Shuffle {
green red
blue red
alpha black
name Red
xpos -17
ypos 27
}
set N9dc88000 [stack 0]
Switch {
inputs 3
which {{back_color i}}
name High
xpos -17
ypos 132
}
push $N9dc67c00
push $N9dc88000
Switch {
inputs 2
which {{"back_color == 0 ? 1 : back_color == 1 ? 0 : 0" i}}
name LowA
xpos 76
ypos 132
}
Multiply {
value {{"1 - supp" i}}
name Multiply1
xpos 76
ypos 190
}
push $N9dc67800
push $N9dc67c00
push 0
Switch {
inputs 3
which {{"back_color == 0 ? 2 : back_color == 1 ? 2 : 1" i}}
name LowB
xpos 187
ypos 140
}
Multiply {
value {{supp i}}
name Multiply2
xpos 187
ypos 187
}
Merge2 {
inputs 2
operation plus
name Merge1
xpos 138
ypos 299
}
Multiply {
value {{masterMult i}}
name Multiply3
xpos 138
ypos 327
}
Merge2 {
inputs 2
operation min
name Merge10
xpos -17
ypos 371
}
set N9dcba000 [stack 0]
ShuffleCopy {
inputs 2
red red
green green
name ShuffleBlue
xpos -426
ypos 371
}
push $N9dc66800
push $N9dcba000
ShuffleCopy {
inputs 2
red red
blue blue
name ShuffleGreen
xpos -526
ypos 369
}
push $N9dc66800
push $N9dcba000
ShuffleCopy {
inputs 2
green green
blue blue
name ShuffleRed
xpos -630
ypos 369
}
Switch {
inputs 3
which {{back_color i}}
name Switch1
xpos -526
ypos 424
}
set N9dcbb000 [stack 0]
push $N9dc66800
push $N9dcbb000
Merge2 {
inputs 2
operation minus
name Merge9
xpos -338
ypos 547
}
Saturation {
saturation 0
name Saturation1
xpos -338
ypos 586
}
ColorCorrect {
gain {{SpillTweak.r i} {SpillTweak.g i} {SpillTweak.b i} {1 i}}
name ColorCorrect1
xpos -338
ypos 655
}
Merge2 {
inputs 2
operation plus
name Merge11
xpos -526
ypos 655
}
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos -526
ypos 740
}
Keymix {
inputs 3
invertMask true
bbox A
name Keymix1
selected true
xpos -526
ypos 875
disable {{"\[exists parent.input1] ? 0 : 1" i}}
}
set N9dd02800 [stack 0]
Viewer {
input_process false
name Viewer1
xpos 95
ypos 454
}
push $N9dd02800
Output {
name Output1
xpos -526
ypos 980
}
end_group
Log2Lin {
operation lin2log
black 0
name Log2Lin2
selected true
xpos -6688
ypos 9485
}
Dot {
name Dot191
selected true
xpos -6654
ypos 9584
}
Group {
inputs 3
name Screen_Diff_Key1
selected true
xpos -6812
ypos 9581
addUserKnob {20 User}
addUserKnob {4 Method t "Uses the image you have connected as CleanPlate, or a simple colour" M {CleanPlate Colour}}
addUserKnob {26 ""}
addUserKnob {7 huerotation l "Overall Hue" R -180 180}
huerotation -38.5
addUserKnob {7 saturation l "Overall Saturation"}
saturation 0.73
addUserKnob {26 ""}
addUserKnob {19 value l "Lows Strenght"}
value 500
addUserKnob {6 value_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {19 value_1 l "Lows Multiply" t "Tint your Lows"}
value_1 {1.05 1.05 1.05 1.05}
addUserKnob {6 value_1_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {19 mix l "Lows Limit" t "0== no limit \n\"Limit\" prevents engative effects. Handle with Care!"}
mix 1
addUserKnob {6 mix_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 ""}
addUserKnob {19 value_2 l "Highs Strenght"}
value_2 30
addUserKnob {6 value_2_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {19 value_3 l "Highs Multiply" t "Tints your Highs"}
value_3 0.84
addUserKnob {6 value_3_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {19 mix_1 l "Highs Limit" t "0== no limit \n\"Limit\" prevents engative effects. Handle with Care!"}
mix_1 1
addUserKnob {6 mix_1_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 ""}
addUserKnob {19 colour t "If you choose the \"Colour\" method, set your reference colour here"}
colour {0 1 0 0}
addUserKnob {6 colour_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {4 format M {"Of your Colour constant"}}
}
BackdropNode {
inputs 0
name BackdropNode69
knobChanged "try:\n    node=nuke.thisNode()\n    knob=nuke.thisKnob()\n    name=knob.name()\n\n    def updateKnobs():\n        nodeWidth=node\['bdwidth'].getValue()\n        nodeHeight=node\['bdheight'].getValue()\n        node\['sizeNode'].setValue(\[int(nodeWidth),int(nodeHeight)])\n        node\['node_position_x'].setValue(int(node\['xpos'].value()))\n        node\['node_position_y'].setValue(int(node\['ypos'].value()))\n        node\['zorder'].setValue(int(node\['z_order'].getValue()))\n        node\['font_size'].setValue(int(node\['note_font_size'].getValue()))\n        node\['oz_appearance'].setValue( node\['appearance'].value() )\n        node\['oz_border_width'].setValue( node\['border_width'].value() )\n        #node\['fontColor'].setValue(int(node\['note_font_color'].getValue()))\n\n    def updateLabelKnob():\n        curLabel = node\['label'].getValue()\n        if '<p align=center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=center>', ''))\n            node\['alignment'].setValue(1)\n        elif '<p align=right>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=right>', ''))\n            node\['alignment'].setValue(2)\n        elif '<center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<center>', ''))\n            node\['alignment'].setValue(1)\n        else:\n            node\['text'].setValue(curLabel)\n            node\['alignment'].setValue(0)\n\n    ### OPENING SETUP\n    if name=='showPanel':\n        updateKnobs()\n        updateLabelKnob()\n\n    ### UPDATE STYLE\n    if name in \['oz_appearance', 'oz_border_width']:\n        node\['appearance'].setValue( node\['oz_appearance'].value() )\n        node\['border_width'].setValue( node\['oz_border_width'].value() )\n\n    ### CHANGE THE SIZE OF THE NODE\n    if name=='sizeNode':\n        node\['bdwidth'].setValue(int(node\['sizeNode'].getValue()\[0]))\n        node\['bdheight'].setValue(int(node\['sizeNode'].getValue()\[1]))\n\n    ### POSITION\n    if name=='node_position_x' or name=='node_position_y':\n        node.setXYpos(int(node\['node_position_x'].getValue()),int(node\['node_position_y'].getValue()))\n\n    ### ZORDER\n    if name=='zorder':\n        node\['z_order'].setValue(node\['zorder'].getValue())\n\n    ### UPDATE THE 'CURRENT SIZE' AND ORDER\n    #if name=='bdwidth' or name=='bdheight' or name=='z_order':\n    if name in \['bdwidth', 'bdheight', 'z_order']:\n        updateKnobs()\n\n    ### UPDATE LABEL\n    title = node\['name'].value()\n    text = node\['text'].value()\n\n    if name in \['text', 'alignment', 'title']:\n        if text=='':\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+title\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+title\n            else:\n                newLabel=title\n        else:\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+text\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+text\n            else:\n                newLabel=text\n\n        node\['label'].setValue(newLabel)\n\n    if name==\"font_size\":\n        new_font_size = node\[\"font_size\"].value()\n        node\['note_font_size'].setValue(new_font_size)\n\n    del newLabel\n\nexcept:\n    pass\n"
tile_color 0x2b2a37ff
label ScreenDifference
note_font_size 50
xpos 186
ypos -519
bdwidth 729
bdheight 1474
addUserKnob {20 Settings}
addUserKnob {43 text l Text}
text ScreenDifference
addUserKnob {7 font_size l "Font Size" R 10 100}
font_size 50
addUserKnob {4 alignment l "" -STARTLINE M {left center right}}
addUserKnob {26 divider1 l "" +STARTLINE}
addUserKnob {26 S01 l " " T " "}
addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import random\nn=nuke.thisNode()\nr,g,b=\[(float(random.randint( 20, 40)))/100,(float(random.randint( 10, 50)))/100,(float(random.randint( 15, 60)))/100]\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (r*255,g*255,b*255,1),16) )\n"}
addUserKnob {22 red l " <img src=\"F_r.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.77, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 orange l " <img src=\"F_o.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 yellow l " <img src=\"F_y.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 green l " <img src=\"F_g.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 cyan l " <img src=\"F_c.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 blue l " <img src=\"F_b.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.7, 0.76]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 darkblue l " <img src=\"F_db.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.74, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 magenta l " <img src=\"F_m.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.74, 0.65]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 pink l " <img src=\"F_p.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.74, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {26 S08 l " " T " "}
addUserKnob {4 oz_appearance l appearance -STARTLINE M {Fill Border}}
addUserKnob {7 oz_border_width l width -STARTLINE R 0 10}
oz_border_width 2
addUserKnob {26 divider2 l "" +STARTLINE}
addUserKnob {26 S02 l " " T " "}
addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\ngrow(n,50)"}
addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\nshrink(n,50)"}
addUserKnob {26 S03 l " " -STARTLINE T "     "}
addUserKnob {22 encompassSelectedNodes l " <img src=\"oz_encompass.png\">" -STARTLINE T "this = nuke.thisNode()\npadding = this\['sides'].getValue()\nif this.isSelected:\n    this.setSelected(False)\nselNodes = nuke.selectedNodes()\n        \ndef nodeIsInside (node, backdropNode):\n    # Returns true if node geometry is inside backdropNode otherwise returns false\n    topLeftNode = \[node.xpos(), node.ypos()]\n    topLeftBackDrop = \[backdropNode.xpos(), backdropNode.ypos()]\n    bottomRightNode = \[node.xpos() + node.screenWidth(), node.ypos() + node.screenHeight()]\n    bottomRightBackdrop = \[backdropNode.xpos() + backdropNode.screenWidth(), backdropNode.ypos() + backdropNode.screenHeight()]\n                    \n    topLeft = ( topLeftNode\[0] >= topLeftBackDrop\[0] ) and ( topLeftNode\[1] >= topLeftBackDrop\[1] )\n    bottomRight = ( bottomRightNode\[0] <= bottomRightBackdrop\[0] ) and ( bottomRightNode\[1] <= bottomRightBackdrop\[1] )\n                    \n    return topLeft and bottomRight\n\nif not selNodes:\n    nuke.message('Some nodes should be selected')\nelse:\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in selNodes])\n    bdY = min(\[node.ypos() for node in selNodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in selNodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in selNodes]) - bdY\n                        \n    zOrder = 0\n    selectedBackdropNodes = nuke.selectedNodes( \"BackdropNode\" )\n\n    #if there are backdropNodes selected put the new one immediately behind the farthest one\n                \n    if len( selectedBackdropNodes ):\n        zOrder = min( \[node.knob( \"z_order\" ).value() for node in selectedBackdropNodes] ) - 1\n    else :\n        #otherwise (no backdrop in selection) find the nearest backdrop if exists and set the new one in front of it\n        nonSelectedBackdropNodes = nuke.allNodes(\"BackdropNode\")\n        for nonBackdrop in selNodes:\n            for backdrop in nonSelectedBackdropNodes:\n                if nodeIsInside( nonBackdrop, backdrop ):\n                    zOrder = max( zOrder, backdrop.knob( \"z_order\" ).value() + 1 )\n    \n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-padding, -(padding+70), padding, padding)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    this\['xpos'].setValue(bdX)\n    this\['bdwidth'].setValue(bdW)\n    this\['ypos'].setValue(bdY)\n    this\['bdheight'].setValue(bdH)\n    this\['z_order'].setValue(zOrder)\n"}
addUserKnob {26 S04 l " " -STARTLINE T " "}
addUserKnob {3 sides l "" -STARTLINE}
sides 50
addUserKnob {26 divider3 l "" +STARTLINE}
addUserKnob {26 S05 l " " -STARTLINE T " "}
addUserKnob {26 pos_text l Position -STARTLINE T " "}
addUserKnob {3 node_position_x l x -STARTLINE}
node_position_x 186
addUserKnob {3 node_position_y l y -STARTLINE}
node_position_y -519
addUserKnob {26 S06 l " " T " "}
addUserKnob {14 sizeNode l Size -STARTLINE R 0 100}
sizeNode {729 1474}
addUserKnob {26 S07 l " " -STARTLINE T "     "}
addUserKnob {3 zorder l "Z Order" -STARTLINE}
}
Input {
inputs 0
name FG
xpos 468
ypos -441
}
NoOp {
name Foreground1
xpos 468
ypos -399
}
Clamp {
name Clamp15
xpos 468
ypos -316
}
Remove {
channels alpha
name Remove9
xpos 468
ypos -225
}
Dot {
name Dot213
xpos 502
ypos -128
}
Constant {
inputs 0
channels rgb
color {{parent.colour} {parent.colour} {parent.colour} {parent.colour}}
color_panelDropped true
name Constant11
xpos 746
ypos -371
}
Input {
inputs 0
name Clean
xpos 611
ypos -441
number 1
}
NoOp {
name Cleanplate1
xpos 611
ypos -399
}
Switch {
inputs 2
which {{"Method ==1"}}
name Switch3
xpos 611
ypos -347
}
Clamp {
name Clamp16
xpos 611
ypos -316
}
Remove {
channels alpha
name Remove10
xpos 611
ypos -224
}
Merge2 {
inputs 2
operation minus
name Merge66
xpos 611
ypos -131
}
set N9dda6c00 [stack 0]
Dot {
name Dot214
xpos 836
ypos -128
}
Expression {
expr3 (r+g+b+)/3
name Expression_Luma2
xpos 802
ypos -11
}
Clamp {
name Clamp17
selected true
xpos 802
ypos 175
}
Dot {
name Dot215
xpos 836
ypos 816
}
Input {
inputs 0
name BG
xpos 351
ypos -441
number 2
}
NoOp {
name Background1
xpos 351
ypos -399
}
Clamp {
name Clamp18
xpos 351
ypos -316
}
Shuffle {
alpha black
name Shuffle14
xpos 351
ypos -216
}
Dot {
name Dot216
xpos 250
ypos -213
}
Expression {
expr3 (r+g+b+)/3
name Expression_Luma3
xpos 216
ypos -23
}
Dot {
name Dot217
xpos 250
ypos 232
}
set N9dde1800 [stack 0]
push $N9dda6c00
Saturation {
saturation {{parent.saturation}}
name Saturation_Overall1
xpos 611
ypos -57
}
HSVTool {
huerotation {{parent.huerotation}}
name HSVTool2
xpos 611
ypos 24
}
set N9de0a000 [stack 0]
Dot {
name Dot218
xpos 501
ypos 33
}
Clamp {
minimum -15
MinClampTo -15
name Clamp19
xpos 467
ypos 175
}
Multiply {
value {{parent.value}}
name Brightness_Lows1
xpos 467
ypos 281
}
Multiply {
value {{parent.value_1} {parent.value_1} {parent.value_1} {parent.value_1}}
name Multiply_Lows1
xpos 467
ypos 367
}
Merge2 {
inputs 2
operation multiply
mix {{parent.mix}}
name Multiply_Limits_Low1
xpos 216
ypos 373
}
push $N9de0a000
Clamp {
maximum 15
MaxClampTo 15
name Clamp20
xpos 611
ypos 175
}
Multiply {
value {{parent.value_2}}
name Brightness_Highs1
xpos 611
ypos 271
}
Multiply {
value {{parent.value_3}}
name Multiply_Highs1
xpos 611
ypos 367
}
push $N9dde1800
Dot {
name Dot219
xpos 350
ypos 232
}
set N9de4a400 [stack 0]
Dot {
name Dot220
xpos 420
ypos 232
}
Dot {
name Dot221
xpos 420
ypos 448
}
Merge2 {
inputs 2
operation multiply
mix {{parent.mix_1}}
name Multiply_Limits_Highs1
xpos 611
ypos 445
}
Dot {
name Dot222
xpos 645
ypos 536
}
Merge2 {
inputs 2
operation plus
name Merge67
xpos 216
ypos 533
}
Dot {
name Dot223
xpos 250
ypos 688
}
push $N9de4a400
Merge2 {
inputs 2
operation plus
name Merge68
xpos 316
ypos 685
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy23
xpos 316
ypos 807
}
NoOp {
name Screen_Diff_Out
xpos 316
ypos 863
}
Output {
name Output1
xpos 316
ypos 907
}
end_group
Merge2 {
inputs 2
name Merge59
selected true
xpos -6812
ypos 10000
}
NoOp {
inputs 0
name Foreground
selected true
xpos -7463
ypos 8894
}
Clamp {
name Clamp10
selected true
xpos -7463
ypos 8977
}
Remove {
channels alpha
name Remove1
selected true
xpos -7463
ypos 9068
}
Dot {
name Dot202
selected true
xpos -7429
ypos 9165
}
Constant {
inputs 0
channels rgb
name Constant10
selected true
xpos -7210
ypos 8922
}
NoOp {
inputs 0
name Cleanplate
selected true
xpos -7320
ypos 8894
}
Switch {
inputs 2
name Switch1
selected true
xpos -7320
ypos 8946
}
Clamp {
name Clamp11
selected true
xpos -7320
ypos 8977
}
Remove {
channels alpha
name Remove8
selected true
xpos -7320
ypos 9069
}
Merge2 {
inputs 2
operation minus
name Merge63
selected true
xpos -7320
ypos 9162
}
set N9dea7800 [stack 0]
Dot {
name Dot211
selected true
xpos -7095
ypos 9165
}
Expression {
expr3 (r+g+b+)/3
name Expression_Luma1
selected true
xpos -7129
ypos 9282
}
Clamp {
name Clamp14
selected true
xpos -7129
ypos 9468
}
Dot {
name Dot212
selected true
xpos -7095
ypos 10109
}
push $cut_paste_input
NoOp {
name Background
selected true
xpos -7580
ypos 8894
}
Clamp {
name Clamp9
selected true
xpos -7580
ypos 8977
}
Shuffle {
alpha black
name Shuffle13
selected true
xpos -7580
ypos 9077
}
Dot {
name Dot204
selected true
xpos -7681
ypos 9080
}
Expression {
expr3 (r+g+b+)/3
name Expression_Luma
selected true
xpos -7715
ypos 9270
}
Dot {
name Dot207
selected true
xpos -7681
ypos 9525
}
set N9df0a000 [stack 0]
push $N9dea7800
Saturation {
name Saturation_Overall
selected true
xpos -7320
ypos 9234
}
HSVTool {
huerotation -38.5
name HSVTool1
selected true
xpos -7320
ypos 9317
}
set N9df0a800 [stack 0]
Dot {
name Dot203
selected true
xpos -7430
ypos 9326
}
Clamp {
name Clamp12
selected true
xpos -7464
ypos 9468
}
Multiply {
value 500
name Brightness_Lows
selected true
xpos -7464
ypos 9574
}
Multiply {
value {1.05 1.05 1.04 1.04}
name Multiply_Lows
selected true
xpos -7464
ypos 9660
}
Merge2 {
inputs 2
operation multiply
name Multiply_Limits_Low
selected true
xpos -7715
ypos 9666
}
push $N9df0a800
Clamp {
name Clamp13
selected true
xpos -7320
ypos 9468
}
Multiply {
value 30
name Brightness_Highs
selected true
xpos -7320
ypos 9564
}
Multiply {
value 0.84
name Multiply_Highs
selected true
xpos -7320
ypos 9660
}
push $N9df0a000
Dot {
name Dot210
selected true
xpos -7581
ypos 9525
}
set N9df40c00 [stack 0]
Dot {
name Dot208
selected true
xpos -7511
ypos 9525
}
Dot {
name Dot206
selected true
xpos -7511
ypos 9741
}
Merge2 {
inputs 2
operation multiply
name Multiply_Limits_Highs
selected true
xpos -7320
ypos 9738
}
Dot {
name Dot205
selected true
xpos -7286
ypos 9829
}
Merge2 {
inputs 2
operation plus
name Merge64
selected true
xpos -7715
ypos 9826
}
Dot {
name Dot209
selected true
xpos -7681
ypos 9981
}
push $N9df40c00
Merge2 {
inputs 2
operation plus
name Merge65
selected true
xpos -7615
ypos 9978
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy22
selected true
xpos -7615
ypos 10100
}
StickyNote {
inputs 0
name StickyNote9
label "<left>- Optimum set up is in log or other extended colour range colour space\n\n- Tends to work better for reflective or specular features \n(or parts of 'FX' elements) that have alrge amounts of semi-transparency\n but do not contain very much colour"
note_font_size 14
selected true
xpos -6761
ypos 9644
}
StickyNote {
inputs 0
name StickyNote10
label "<left>- No real need to go into log or extended range colour space\n\n- tends to work better for dof defocus or motion blur fall off that contains COLOUR"
note_font_size 14
selected true
xpos -5081
ypos 9658
}
Group {
inputs 0
name Screen_Diff_Key
selected true
xpos -7605
ypos 10229
addUserKnob {20 User}
addUserKnob {4 Method t "Uses the image you have connected as CleanPlate, or a simple colour" M {CleanPlate Colour}}
addUserKnob {26 ""}
addUserKnob {7 huerotation l "Overall Hue" R -180 180}
huerotation -38.5
addUserKnob {7 saturation l "Overall Saturation"}
saturation 0.73
addUserKnob {26 ""}
addUserKnob {19 value l "Lows Strenght"}
value 500
addUserKnob {6 value_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {19 value_1 l "Lows Multiply" t "Tint your Lows"}
value_1 {1.05 1.05 1.05 1.05}
addUserKnob {6 value_1_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {19 mix l "Lows Limit" t "0== no limit \n\"Limit\" prevents engative effects. Handle with Care!"}
mix 1
addUserKnob {6 mix_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 ""}
addUserKnob {19 value_2 l "Highs Strenght"}
value_2 30
addUserKnob {6 value_2_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {19 value_3 l "Highs Multiply" t "Tints your Highs"}
value_3 0.84
addUserKnob {6 value_3_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {19 mix_1 l "Highs Limit" t "0== no limit \n\"Limit\" prevents engative effects. Handle with Care!"}
mix_1 1
addUserKnob {6 mix_1_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 ""}
addUserKnob {19 colour t "If you choose the \"Colour\" method, set your reference colour here"}
colour {0 1 0 0}
addUserKnob {6 colour_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {4 format M {"Of your Colour constant"}}
}
BackdropNode {
inputs 0
name BackdropNode69
knobChanged "try:\n    node=nuke.thisNode()\n    knob=nuke.thisKnob()\n    name=knob.name()\n\n    def updateKnobs():\n        nodeWidth=node\['bdwidth'].getValue()\n        nodeHeight=node\['bdheight'].getValue()\n        node\['sizeNode'].setValue(\[int(nodeWidth),int(nodeHeight)])\n        node\['node_position_x'].setValue(int(node\['xpos'].value()))\n        node\['node_position_y'].setValue(int(node\['ypos'].value()))\n        node\['zorder'].setValue(int(node\['z_order'].getValue()))\n        node\['font_size'].setValue(int(node\['note_font_size'].getValue()))\n        node\['oz_appearance'].setValue( node\['appearance'].value() )\n        node\['oz_border_width'].setValue( node\['border_width'].value() )\n        #node\['fontColor'].setValue(int(node\['note_font_color'].getValue()))\n\n    def updateLabelKnob():\n        curLabel = node\['label'].getValue()\n        if '<p align=center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=center>', ''))\n            node\['alignment'].setValue(1)\n        elif '<p align=right>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=right>', ''))\n            node\['alignment'].setValue(2)\n        elif '<center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<center>', ''))\n            node\['alignment'].setValue(1)\n        else:\n            node\['text'].setValue(curLabel)\n            node\['alignment'].setValue(0)\n\n    ### OPENING SETUP\n    if name=='showPanel':\n        updateKnobs()\n        updateLabelKnob()\n\n    ### UPDATE STYLE\n    if name in \['oz_appearance', 'oz_border_width']:\n        node\['appearance'].setValue( node\['oz_appearance'].value() )\n        node\['border_width'].setValue( node\['oz_border_width'].value() )\n\n    ### CHANGE THE SIZE OF THE NODE\n    if name=='sizeNode':\n        node\['bdwidth'].setValue(int(node\['sizeNode'].getValue()\[0]))\n        node\['bdheight'].setValue(int(node\['sizeNode'].getValue()\[1]))\n\n    ### POSITION\n    if name=='node_position_x' or name=='node_position_y':\n        node.setXYpos(int(node\['node_position_x'].getValue()),int(node\['node_position_y'].getValue()))\n\n    ### ZORDER\n    if name=='zorder':\n        node\['z_order'].setValue(node\['zorder'].getValue())\n\n    ### UPDATE THE 'CURRENT SIZE' AND ORDER\n    #if name=='bdwidth' or name=='bdheight' or name=='z_order':\n    if name in \['bdwidth', 'bdheight', 'z_order']:\n        updateKnobs()\n\n    ### UPDATE LABEL\n    title = node\['name'].value()\n    text = node\['text'].value()\n\n    if name in \['text', 'alignment', 'title']:\n        if text=='':\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+title\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+title\n            else:\n                newLabel=title\n        else:\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+text\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+text\n            else:\n                newLabel=text\n\n        node\['label'].setValue(newLabel)\n\n    if name==\"font_size\":\n        new_font_size = node\[\"font_size\"].value()\n        node\['note_font_size'].setValue(new_font_size)\n\n    del newLabel\n\nexcept:\n    pass\n"
tile_color 0x2b2a37ff
label ScreenDifference
note_font_size 50
xpos 186
ypos -519
bdwidth 729
bdheight 1474
addUserKnob {20 Settings}
addUserKnob {43 text l Text}
text ScreenDifference
addUserKnob {7 font_size l "Font Size" R 10 100}
font_size 50
addUserKnob {4 alignment l "" -STARTLINE M {left center right}}
addUserKnob {26 divider1 l "" +STARTLINE}
addUserKnob {26 S01 l " " T " "}
addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import random\nn=nuke.thisNode()\nr,g,b=\[(float(random.randint( 20, 40)))/100,(float(random.randint( 10, 50)))/100,(float(random.randint( 15, 60)))/100]\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (r*255,g*255,b*255,1),16) )\n"}
addUserKnob {22 red l " <img src=\"F_r.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.77, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 orange l " <img src=\"F_o.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 yellow l " <img src=\"F_y.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 green l " <img src=\"F_g.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 cyan l " <img src=\"F_c.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 blue l " <img src=\"F_b.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.7, 0.76]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 darkblue l " <img src=\"F_db.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.74, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 magenta l " <img src=\"F_m.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.74, 0.65]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 pink l " <img src=\"F_p.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.74, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {26 S08 l " " T " "}
addUserKnob {4 oz_appearance l appearance -STARTLINE M {Fill Border}}
addUserKnob {7 oz_border_width l width -STARTLINE R 0 10}
oz_border_width 2
addUserKnob {26 divider2 l "" +STARTLINE}
addUserKnob {26 S02 l " " T " "}
addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\ngrow(n,50)"}
addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\nshrink(n,50)"}
addUserKnob {26 S03 l " " -STARTLINE T "     "}
addUserKnob {22 encompassSelectedNodes l " <img src=\"oz_encompass.png\">" -STARTLINE T "this = nuke.thisNode()\npadding = this\['sides'].getValue()\nif this.isSelected:\n    this.setSelected(False)\nselNodes = nuke.selectedNodes()\n        \ndef nodeIsInside (node, backdropNode):\n    # Returns true if node geometry is inside backdropNode otherwise returns false\n    topLeftNode = \[node.xpos(), node.ypos()]\n    topLeftBackDrop = \[backdropNode.xpos(), backdropNode.ypos()]\n    bottomRightNode = \[node.xpos() + node.screenWidth(), node.ypos() + node.screenHeight()]\n    bottomRightBackdrop = \[backdropNode.xpos() + backdropNode.screenWidth(), backdropNode.ypos() + backdropNode.screenHeight()]\n                    \n    topLeft = ( topLeftNode\[0] >= topLeftBackDrop\[0] ) and ( topLeftNode\[1] >= topLeftBackDrop\[1] )\n    bottomRight = ( bottomRightNode\[0] <= bottomRightBackdrop\[0] ) and ( bottomRightNode\[1] <= bottomRightBackdrop\[1] )\n                    \n    return topLeft and bottomRight\n\nif not selNodes:\n    nuke.message('Some nodes should be selected')\nelse:\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in selNodes])\n    bdY = min(\[node.ypos() for node in selNodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in selNodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in selNodes]) - bdY\n                        \n    zOrder = 0\n    selectedBackdropNodes = nuke.selectedNodes( \"BackdropNode\" )\n\n    #if there are backdropNodes selected put the new one immediately behind the farthest one\n                \n    if len( selectedBackdropNodes ):\n        zOrder = min( \[node.knob( \"z_order\" ).value() for node in selectedBackdropNodes] ) - 1\n    else :\n        #otherwise (no backdrop in selection) find the nearest backdrop if exists and set the new one in front of it\n        nonSelectedBackdropNodes = nuke.allNodes(\"BackdropNode\")\n        for nonBackdrop in selNodes:\n            for backdrop in nonSelectedBackdropNodes:\n                if nodeIsInside( nonBackdrop, backdrop ):\n                    zOrder = max( zOrder, backdrop.knob( \"z_order\" ).value() + 1 )\n    \n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-padding, -(padding+70), padding, padding)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    this\['xpos'].setValue(bdX)\n    this\['bdwidth'].setValue(bdW)\n    this\['ypos'].setValue(bdY)\n    this\['bdheight'].setValue(bdH)\n    this\['z_order'].setValue(zOrder)\n"}
addUserKnob {26 S04 l " " -STARTLINE T " "}
addUserKnob {3 sides l "" -STARTLINE}
sides 50
addUserKnob {26 divider3 l "" +STARTLINE}
addUserKnob {26 S05 l " " -STARTLINE T " "}
addUserKnob {26 pos_text l Position -STARTLINE T " "}
addUserKnob {3 node_position_x l x -STARTLINE}
node_position_x 186
addUserKnob {3 node_position_y l y -STARTLINE}
node_position_y -519
addUserKnob {26 S06 l " " T " "}
addUserKnob {14 sizeNode l Size -STARTLINE R 0 100}
sizeNode {729 1474}
addUserKnob {26 S07 l " " -STARTLINE T "     "}
addUserKnob {3 zorder l "Z Order" -STARTLINE}
}
Input {
inputs 0
name FG
xpos 468
ypos -441
}
NoOp {
name Foreground1
xpos 468
ypos -399
}
Clamp {
name Clamp15
xpos 468
ypos -316
}
Remove {
channels alpha
name Remove9
xpos 468
ypos -225
}
Dot {
name Dot213
xpos 502
ypos -128
}
Constant {
inputs 0
channels rgb
color {{parent.colour} {parent.colour} {parent.colour} {parent.colour}}
color_panelDropped true
name Constant11
selected true
xpos 746
ypos -371
}
Input {
inputs 0
name Clean
xpos 611
ypos -441
number 1
}
NoOp {
name Cleanplate1
xpos 611
ypos -399
}
Switch {
inputs 2
which {{"Method ==1"}}
name Switch3
xpos 611
ypos -347
}
Clamp {
name Clamp16
xpos 611
ypos -316
}
Remove {
channels alpha
name Remove10
xpos 611
ypos -224
}
Merge2 {
inputs 2
operation minus
name Merge66
xpos 611
ypos -131
}
set N9dfd0800 [stack 0]
Dot {
name Dot214
xpos 836
ypos -128
}
Expression {
expr3 (r+g+b+)/3
name Expression_Luma2
xpos 802
ypos -11
}
Clamp {
name Clamp17
xpos 802
ypos 175
}
Dot {
name Dot215
xpos 836
ypos 816
}
Input {
inputs 0
name BG
xpos 351
ypos -441
number 2
}
NoOp {
name Background1
xpos 351
ypos -399
}
Clamp {
name Clamp18
xpos 351
ypos -316
}
Shuffle {
alpha black
name Shuffle14
xpos 351
ypos -216
}
Dot {
name Dot216
xpos 250
ypos -213
}
Expression {
expr3 (r+g+b+)/3
name Expression_Luma3
xpos 216
ypos -23
}
Dot {
name Dot217
xpos 250
ypos 232
}
set N9e007400 [stack 0]
push $N9dfd0800
Saturation {
saturation {{parent.saturation}}
name Saturation_Overall1
xpos 611
ypos -57
}
HSVTool {
huerotation {{parent.huerotation}}
name HSVTool2
xpos 611
ypos 24
}
set N9e007c00 [stack 0]
Dot {
name Dot218
xpos 501
ypos 33
}
Clamp {
name Clamp19
xpos 467
ypos 175
}
Multiply {
value {{parent.value}}
name Brightness_Lows1
xpos 467
ypos 281
}
Multiply {
value {{parent.value_1} {parent.value_1} {parent.value_1} {parent.value_1}}
name Multiply_Lows1
xpos 467
ypos 367
}
Merge2 {
inputs 2
operation multiply
mix {{parent.mix}}
name Multiply_Limits_Low1
xpos 216
ypos 373
}
push $N9e007c00
Clamp {
name Clamp20
xpos 611
ypos 175
}
Multiply {
value {{parent.value_2}}
name Brightness_Highs1
xpos 611
ypos 271
}
Multiply {
value {{parent.value_3}}
name Multiply_Highs1
xpos 611
ypos 367
}
push $N9e007400
Dot {
name Dot219
xpos 350
ypos 232
}
set N9e074000 [stack 0]
Dot {
name Dot220
xpos 420
ypos 232
}
Dot {
name Dot221
xpos 420
ypos 448
}
Merge2 {
inputs 2
operation multiply
mix {{parent.mix_1}}
name Multiply_Limits_Highs1
xpos 611
ypos 445
}
Dot {
name Dot222
xpos 645
ypos 536
}
Merge2 {
inputs 2
operation plus
name Merge67
xpos 216
ypos 533
}
Dot {
name Dot223
xpos 250
ypos 688
}
push $N9e074000
Merge2 {
inputs 2
operation plus
name Merge68
xpos 316
ypos 685
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy23
xpos 316
ypos 807
}
NoOp {
name Screen_Diff_Out
xpos 316
ypos 863
}
Output {
name Output1
xpos 316
ypos 907
}
end_group
Input {
inputs 0
name Matte
selected true
xpos -3812
ypos 10316
number 3
}
Blur {
size {{parent.size}}
filter quadratic
name MatteBlur
selected true
xpos -3812
ypos 10400
}
set N9e0a3000 [stack 0]
Dilate {
size {{parent.MatteDilate.size}}
name MatteDilate1
selected true
xpos -3812
ypos 10487
}
Dot {
name Dot216
selected true
xpos -3245
ypos 10496
}
set N9e0a3800 [stack 0]
Invert {
name Invert6
selected true
xpos -3279
ypos 10541
}
push $cut_paste_input
NoOp {
name Background1
selected true
xpos -3524
ypos 8843
}
Dot {
name Dot217
selected true
xpos -3490
ypos 8966
}
set N9e0d0400 [stack 0]
Dot {
name Dot218
selected true
xpos -3414
ypos 8966
}
Dot {
name Dot219
selected true
xpos -3414
ypos 10352
}
set N9e0d0c00 [stack 0]
Dot {
name Dot220
selected true
xpos -3414
ypos 10607
}
set N9e0d1000 [stack 0]
push $N9e0d0400
NoOp {
inputs 0
name Cleanplate1
selected true
xpos -3823
ypos 8843
}
Dot {
name Dot221
selected true
xpos -3789
ypos 8936
}
set N9e0d1800 [stack 0]
push $N9e0d1800
Remove {
operation keep
channels rgb
name Remove9
selected true
xpos -3689
ypos 8933
}
Expression {
expr0 parent.ColorPick.r
expr1 parent.ColorPick.g
expr2 parent.ColorPick.b
name Expression3
selected true
xpos -3689
ypos 9011
}
Switch {
inputs 2
which {{parent.CleanPlateOption}}
name ColorOrClean
selected true
xpos -3823
ypos 9011
}
Dot {
name Dot222
selected true
xpos -3789
ypos 9110
}
set N9e0ee800 [stack 0]
Merge2 {
inputs 2
operation minus
name BGminusColour
selected true
xpos -3524
ypos 9107
}
Dot {
name Dot223
selected true
xpos -3490
ypos 9906
}
push $N9e0ee800
Dot {
name Dot224
selected true
xpos -3789
ypos 9161
}
set N9e0ef400 [stack 0]
Shuffle {
red green
blue green
alpha green
name ColorGreenCH
selected true
xpos -3823
ypos 9250
}
set N9e0ef800 [stack 0]
push $N9e0ef400
Dot {
name Dot225
selected true
xpos -3701
ypos 9161
}
Shuffle {
red blue
green blue
alpha blue
name ColorBlueCH
selected true
xpos -3735
ypos 9250
}
set N9e11a000 [stack 0]
Switch {
inputs 2
which {{parent.GreenOrBlue.which}}
name GreenOrBlue1
selected true
xpos -3735
ypos 9327
}
Dot {
name Dot226
selected true
xpos -3701
ypos 9632
}
push $N9e0ef400
Dot {
name Dot227
selected true
xpos -3875
ypos 9161
}
Shuffle {
green red
blue red
alpha red
name ColorRedCH
selected true
xpos -3909
ypos 9250
}
push $N9e11a000
push $N9e0ef800
Switch {
inputs 2
which {{parent.ScreenColor}}
name GreenOrBlue
selected true
xpos -3823
ypos 9328
}
Dot {
name Dot228
selected true
xpos -3789
ypos 9405
}
Dissolve {
inputs 2
which {{parent.which}}
name AverageWRED
selected true
xpos -3909
ypos 9396
}
Gamma {
value {{parent.GammaTweak}}
name GammaCHBG
selected true
xpos -3909
ypos 9479
}
Grade {
blackpoint 0.0001
white {{parent.GainTweak}}
name GradeCHBG
selected true
xpos -3909
ypos 9557
}
Merge2 {
inputs 2
operation minus
name MINUSaverageValue1
selected true
xpos -3909
ypos 9629
}
Clamp {
minimum 0.0001
name ClampBG
selected true
xpos -3909
ypos 9753
}
Merge2 {
inputs 2
operation divide
name MergeDivide
selected true
xpos -3909
ypos 9903
}
Dot {
name Dot229
selected true
xpos -3875
ypos 10031
}
NoOp {
inputs 0
name Foreground1
selected true
xpos -3249
ypos 8837
}
Dot {
name Dot230
selected true
xpos -3215
ypos 9056
}
set N9e13fc00 [stack 0]
Dot {
name Dot231
selected true
xpos -3215
ypos 9152
}
set N9e176000 [stack 0]
Shuffle {
red green
blue green
alpha green
name ColorGreenCH1
selected true
xpos -3249
ypos 9241
}
set N9e176400 [stack 0]
push $N9e176000
Dot {
name Dot232
selected true
xpos -3127
ypos 9152
}
Shuffle {
red blue
green blue
alpha blue
name ColorBlueCH1
selected true
xpos -3161
ypos 9241
}
set N9e176c00 [stack 0]
Switch {
inputs 2
which {{parent.GreenOrBlue.which}}
name GreenOrBlue2
selected true
xpos -3161
ypos 9317
}
Dot {
name Dot233
selected true
xpos -3127
ypos 9623
}
push $N9e176000
Dot {
name Dot234
selected true
xpos -3301
ypos 9152
}
Shuffle {
green red
blue red
alpha red
name ColorRedCH1
selected true
xpos -3335
ypos 9241
}
push $N9e176c00
push $N9e176400
Switch {
inputs 2
which {{parent.GreenOrBlue.which}}
name GreenOrBlue3
selected true
xpos -3249
ypos 9317
}
Dot {
name Dot235
selected true
xpos -3215
ypos 9396
}
Dissolve {
inputs 2
which {{parent.AverageWRED.which}}
name AverageWRED1
selected true
xpos -3335
ypos 9387
}
Gamma {
value {{parent.GammaCHBG.value}}
name GammaCHBG1
selected true
xpos -3335
ypos 9470
}
Grade {
white {{parent.GradeCHBG.white}}
name GradeCHBG1
selected true
xpos -3335
ypos 9557
}
Merge2 {
inputs 2
operation minus
name MINUSaverageValue2
selected true
xpos -3335
ypos 9620
}
Multiply {
value {{parent.Despillr}}
name MultiplySpill
selected true
xpos -3335
ypos 9687
}
set N9e19d800 [stack 0]
Clamp {
minimum 0.0001
name Clamp15
selected true
xpos -3335
ypos 9767
}
Merge2 {
inputs 2
operation multiply
name MergeMultiply
selected true
xpos -3335
ypos 10028
}
Dot {
name Dot236
selected true
xpos -3301
ypos 10112
}
push $N9e13fc00
Dot {
name Dot237
selected true
xpos -2941
ypos 9056
}
set N9e1da800 [stack 0]
Merge2 {
inputs 2
operation plus
name MergePlus
selected true
xpos -2975
ypos 10109
}
Dot {
name Dot238
selected true
xpos -2941
ypos 10256
}
set N9e1db000 [stack 0]
Dot {
name Dot239
selected true
xpos -2941
ypos 10409
}
set N9e1db400 [stack 0]
Dot {
name Dot240
selected true
xpos -3307
ypos 10409
}
Keymix {
inputs 3
name KeymixMASK
selected true
xpos -3341
ypos 10598
}
Dot {
name Dot241
selected true
xpos -3307
ypos 10688
}
Dot {
name Dot242
selected true
xpos -2973
ypos 10688
}
push $N9e0a3000
Dot {
name Dot243
selected true
xpos -3931
ypos 10409
}
Invert {
name InvertMatte
selected true
xpos -3965
ypos 10559
}
Dot {
name Dot244
selected true
xpos -3931
ypos 10705
}
Dilate {
size {{-parent.MatteShrink}}
name MatteDilate
selected true
xpos -3579
ypos 10703
}
Dot {
name Dot245
selected true
xpos -2511
ypos 10712
}
push $N9e0d1000
Dot {
name Dot246
selected true
xpos -3414
ypos 10736
}
Dot {
name Dot247
selected true
xpos -2775
ypos 10736
}
set N9e220000 [stack 0]
push $N9e0a3800
Dot {
name Dot248
selected true
xpos -3113
ypos 10497
}
set N9e220400 [stack 0]
Dot {
name Dot249
selected true
xpos -3113
ypos 10616
}
push $N9e1da800
Dot {
name Dot250
selected true
xpos -2584
ypos 9056
}
set N9e220c00 [stack 0]
Dot {
name Dot251
selected true
xpos -2584
ypos 9264
}
set N9e221000 [stack 0]
Dot {
name Dot252
selected true
xpos -2724
ypos 9264
}
Shuffle {
red green
blue green
alpha green
name ShuffleGspill
selected true
xpos -2758
ypos 9341
}
push $N9e19d800
Dot {
name Dot253
selected true
xpos -3012
ypos 9696
}
Dot {
name Dot254
selected true
xpos -3012
ypos 9560
}
set N9e23a000 [stack 0]
Dot {
name Dot255
selected true
xpos -3012
ypos 9440
}
Merge2 {
inputs 2
operation minus
name MINUSaverageValue3
selected true
xpos -2758
ypos 9437
}
push $N9e221000
Copy {
inputs 2
from0 rgba.green
to0 rgba.green
name Copy23
selected true
xpos -2618
ypos 9431
}
Dot {
name Dot256
selected true
xpos -2584
ypos 9698
}
push $N9e220c00
Dot {
name Dot257
selected true
xpos -2305
ypos 9056
}
Dot {
name Dot258
selected true
xpos -2305
ypos 9384
}
set N9e23b800 [stack 0]
Dot {
name Dot259
selected true
xpos -2445
ypos 9384
}
Shuffle {
red blue
green blue
alpha blue
name ShuffleBspill1
selected true
xpos -2479
ypos 9461
}
push $N9e23a000
Merge2 {
inputs 2
operation minus
name MINUSaverageValue4
selected true
xpos -2479
ypos 9557
}
push $N9e23b800
Copy {
inputs 2
from0 rgba.blue
to0 rgba.blue
name Copy24
selected true
xpos -2339
ypos 9551
}
Switch {
inputs 2
which {{parent.GreenOrBlue.which}}
name GreenOrBlue4
selected true
xpos -2339
ypos 9695
}
Dot {
name Dot260
selected true
xpos -2305
ypos 10496
}
set N9e263000 [stack 0]
Dot {
name Dot261
selected true
xpos -2305
ypos 10626
}
push $N9e1db400
Dot {
name Dot262
selected true
xpos -2445
ypos 10409
}
Keymix {
inputs 3
name CoreKeymix
selected true
xpos -2479
ypos 10617
}
Keymix {
inputs 3
name GarbageKeymix
selected true
xpos -2479
ypos 10727
}
Dot {
name Dot263
selected true
xpos -2504
ypos 10640
}
push $N9e0a3800
push $N9e0d0c00
push $N9e1db000
Dot {
name Dot264
selected true
xpos -3192
ypos 10256
}
Keymix {
inputs 3
name KeymixBG
selected true
xpos -3226
ypos 10343
}
Dot {
name Dot265
selected true
xpos -3192
ypos 10640
}
push $N9e220400
push $N9e263000
push $N9e1db400
Keymix {
inputs 3
name KeymixHO
selected true
xpos -2975
ypos 10487
}
Switch {
inputs 4
which {{parent.HOGB}}
name HOGBSwitch
selected true
xpos -2975
ypos 10637
}
push $N9e220000
Dissolve {
inputs 2
which 1
name OverallMix
selected true
xpos -2975
ypos 10775
}
Dot {
name Dot266
selected true
xpos -2941
ypos 10880
}
set N9e2b4000 [stack 0]
push $N9e220000
Merge2 {
inputs 2
operation minus
name Merge57
selected true
xpos -2809
ypos 10877
}
Dot {
name Dot267
selected true
xpos -2775
ypos 11034
}
push $N9e2b4000
Switch {
inputs 2
which {{parent.addresult}}
name Switchoutput
selected true
xpos -2975
ypos 11031
}
NoOp {
inputs 0
name CleanPlate6
tile_color 0xd0d0dff
note_font "Verdana Bold"
note_font_size 35
note_font_color 0xff
selected true
xpos -4380
ypos 8898
}
Dot {
name Dot193
selected true
xpos -4346
ypos 9058
}
set N9e2b5400 [stack 0]
OFXuk.co.thefoundry.keylight.keylight_v201 {
show "Final Result"
unPreMultiply false
screenColour {0 0 0}
screenGain 1
screenBalance 0.5
alphaBias {0.5 0.5 0.5}
despillBias {0.5 0.5 0.5}
gangBiases true
preBlur 0
"Screen Matte" 0
screenClipMin 0
screenClipMax 1
screenClipRollback 0
screenGrowShrink 0
screenSoftness 0
screenDespotBlack 0
screenDespotWhite 0
screenReplaceMethod "Soft Colour"
screenReplaceColour {0.5 0.5 0.5}
Tuning 0
midPoint 0.5
lowGain 1
midGain 1
highGain 1
"Inside Mask" 0
sourceAlphaHandling Ignore
insideReplaceMethod "Soft Colour"
insideReplaceColour {0.5 0.5 0.5}
Crops 0
SourceXMethod Colour
SourceYMethod Colour
SourceEdgeColour 0
SourceCropL 0
SourceCropR 1
SourceCropB 0
SourceCropT 1
balanceSet false
insideComponent None
outsideComponent None
cacheBreaker true
name Keylight24
selected true
xpos -4380
ypos 9223
}
set N9e2b5800 [stack 0]
Dot {
name Dot194
selected true
xpos -4554
ypos 9226
}
Clamp {
name Clamp8
selected true
xpos -4588
ypos 9337
}
Erode {
name Erode8
selected true
xpos -4588
ypos 9409
}
Blur {
name Blur19
selected true
xpos -4588
ypos 9481
}
Dot {
name Dot195
selected true
xpos -4554
ypos 9586
}
push $N9e2b5800
Grade {
name Grade24
selected true
xpos -4380
ypos 9343
}
Merge2 {
inputs 2
operation screen
name Merge60
selected true
xpos -4380
ypos 9583
}
push $N9e2b5400
Dot {
name Dot196
selected true
xpos -4150
ypos 9058
}
Group {
name PxF_KillSpill14
help "Remove red/green/blue spill."
tile_color 0x733520ff
selected true
xpos -4184
ypos 9254
addUserKnob {20 User}
addUserKnob {4 back_color l ScreenColor t "Which type of spill to remove." M {red green blue "" ""}}
back_color green
addUserKnob {7 supp l Suppression t "Bias the mix of channels used to cap the 'spill' channel.\nFor example when removing 'green spill':\n0 = green channel is capped by the red channel.\n\n0.5 = green channel is capped by half-mix of red and blue channels.\n\n1 = green channel is capped by the blue channel." R 0 2}
supp 0.5
addUserKnob {7 masterMult l Limiter t "Gain applied to the 'cap' channel to make the suppression more or less aggressive." R 0 10}
masterMult 1
addUserKnob {18 SpillTweak t "Adjust the luminance and color of the spill areas." R 0 10}
SpillTweak 1
addUserKnob {6 SpillTweak_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 ""}
addUserKnob {26 t l "" +STARTLINE T "PxF_KillSpill 2.5.2 - (c) 2011 - Xavier Bourque - www.pixelfudger.com"}
}
Input {
inputs 0
name mask
xpos -228
ypos 853
number 1
}
Input {
inputs 0
name img
xpos -496
ypos -217
}
Dot {
name Dot3
xpos -462
ypos -140
}
set N9e320400 [stack 0]
Dot {
name Dot2
xpos -689
ypos 208
}
Dot {
name Dot4
xpos -729
ypos 756
}
push $N9e320400
Dot {
name Dot1
xpos -156
ypos 744
}
push $N9e320400
push $N9e320400
Shuffle {
red blue
green blue
alpha black
name Blue
xpos 187
ypos 28
}
set N9e321400 [stack 0]
push $N9e320400
Shuffle {
red green
blue green
alpha black
name Green
xpos 76
ypos 26
}
set N9e321800 [stack 0]
push $N9e320400
Shuffle {
green red
blue red
alpha black
name Red
xpos -17
ypos 27
}
set N9e321c00 [stack 0]
Switch {
inputs 3
which {{back_color i}}
name High
xpos -17
ypos 132
}
push $N9e321800
push $N9e321c00
Switch {
inputs 2
which {{"back_color == 0 ? 1 : back_color == 1 ? 0 : 0" i}}
name LowA
xpos 76
ypos 132
}
Multiply {
value {{"1 - supp" i}}
name Multiply1
xpos 76
ypos 190
}
push $N9e321400
push $N9e321800
push 0
Switch {
inputs 3
which {{"back_color == 0 ? 2 : back_color == 1 ? 2 : 1" i}}
name LowB
xpos 187
ypos 140
}
Multiply {
value {{supp i}}
name Multiply2
xpos 187
ypos 187
}
Merge2 {
inputs 2
operation plus
name Merge1
xpos 138
ypos 299
}
Multiply {
value {{masterMult i}}
name Multiply3
xpos 138
ypos 327
}
Merge2 {
inputs 2
operation min
name Merge10
xpos -17
ypos 371
}
set N9e345c00 [stack 0]
ShuffleCopy {
inputs 2
red red
green green
name ShuffleBlue
xpos -426
ypos 371
}
push $N9e320400
push $N9e345c00
ShuffleCopy {
inputs 2
red red
blue blue
name ShuffleGreen
xpos -526
ypos 369
}
push $N9e320400
push $N9e345c00
ShuffleCopy {
inputs 2
green green
blue blue
name ShuffleRed
xpos -630
ypos 369
}
Switch {
inputs 3
which {{back_color i}}
name Switch1
xpos -526
ypos 424
}
set N9e378c00 [stack 0]
push $N9e320400
push $N9e378c00
Merge2 {
inputs 2
operation minus
name Merge9
xpos -338
ypos 547
}
Saturation {
saturation 0
name Saturation1
xpos -338
ypos 586
}
ColorCorrect {
gain {{SpillTweak.r i} {SpillTweak.g i} {SpillTweak.b i} {1 i}}
name ColorCorrect1
xpos -338
ypos 655
}
Merge2 {
inputs 2
operation plus
name Merge11
xpos -526
ypos 655
}
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos -526
ypos 740
}
Keymix {
inputs 3
invertMask true
bbox A
name Keymix1
selected true
xpos -526
ypos 875
disable {{"\[exists parent.input1] ? 0 : 1" i}}
}
set N9e3bc400 [stack 0]
Viewer {
input_process false
name Viewer1
xpos 95
ypos 454
}
push $N9e3bc400
Output {
name Output1
xpos -526
ypos 980
}
end_group
Dot {
name Dot197
selected true
xpos -4150
ypos 9754
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy21
selected true
xpos -4380
ypos 9745
}
Premult {
name Premult23
selected true
xpos -4380
ypos 9864
}
Dot {
name Dot198
selected true
xpos -4346
ypos 10018
}
NoOp {
inputs 0
name BG6
tile_color 0xff
note_font "Verdana Bold"
note_font_size 35
selected true
xpos -5127
ypos 8968
}
push $N9e2b5400
Dot {
name Dot199
selected true
xpos -4743
ypos 9058
}
set N9e428400 [stack 0]
Primatte3 {
data { 5
    0 0 0
    589840
    0 5
    30234 30234 30234 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.05 1.732 1.732
    0.05 1.732 1.732
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
  }

primEdgedata { 5
    0 0 0
    589840
    0 5
    30234 30234 30234 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.05 1.732 1.732
    0.05 1.732 1.732
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
  }

primBodydata { 5
    0 0 0
    589840
    0 5
    30234 30234 30234 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.05 1.732 1.732
    0.05 1.732 1.732
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
  }

bg_color_selected false
crop {0 0 2048 1556}
adjustLighting true
"Adjust Lighting" 0
"Hybrid Matte" 0
"Fine Tuning" 0
output_mode "adjust lighting BG"
name Primatte16
selected true
xpos -4777
ypos 9247
}
PostageStamp {
name CleanScreen2
selected true
xpos -4777
ypos 9331
postage_stamp true
}
Group {
name PxF_KillSpill15
help "Remove red/green/blue spill."
tile_color 0x733520ff
selected true
xpos -4777
ypos 9448
addUserKnob {20 User}
addUserKnob {4 back_color l ScreenColor t "Which type of spill to remove." M {red green blue "" ""}}
back_color green
addUserKnob {7 supp l Suppression t "Bias the mix of channels used to cap the 'spill' channel.\nFor example when removing 'green spill':\n0 = green channel is capped by the red channel.\n\n0.5 = green channel is capped by half-mix of red and blue channels.\n\n1 = green channel is capped by the blue channel." R 0 2}
supp 0.5
addUserKnob {7 masterMult l Limiter t "Gain applied to the 'cap' channel to make the suppression more or less aggressive." R 0 10}
masterMult 1
addUserKnob {18 SpillTweak t "Adjust the luminance and color of the spill areas." R 0 10}
SpillTweak 1
addUserKnob {6 SpillTweak_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 ""}
addUserKnob {26 t l "" +STARTLINE T "PxF_KillSpill 2.5.2 - (c) 2011 - Xavier Bourque - www.pixelfudger.com"}
}
Input {
inputs 0
name mask
xpos -228
ypos 853
number 1
}
Input {
inputs 0
name img
xpos -496
ypos -217
}
Dot {
name Dot3
xpos -462
ypos -140
}
set N9e429800 [stack 0]
Dot {
name Dot2
xpos -689
ypos 208
}
Dot {
name Dot4
xpos -729
ypos 756
}
push $N9e429800
Dot {
name Dot1
xpos -156
ypos 744
}
push $N9e429800
push $N9e429800
Shuffle {
red blue
green blue
alpha black
name Blue
xpos 187
ypos 28
}
set N9e45e800 [stack 0]
push $N9e429800
Shuffle {
red green
blue green
alpha black
name Green
xpos 76
ypos 26
}
set N9e45ec00 [stack 0]
push $N9e429800
Shuffle {
green red
blue red
alpha black
name Red
xpos -17
ypos 27
}
set N9e45f000 [stack 0]
Switch {
inputs 3
which {{back_color i}}
name High
xpos -17
ypos 132
}
push $N9e45ec00
push $N9e45f000
Switch {
inputs 2
which {{"back_color == 0 ? 1 : back_color == 1 ? 0 : 0" i}}
name LowA
xpos 76
ypos 132
}
Multiply {
value {{"1 - supp" i}}
name Multiply1
xpos 76
ypos 190
}
push $N9e45e800
push $N9e45ec00
push 0
Switch {
inputs 3
which {{"back_color == 0 ? 2 : back_color == 1 ? 2 : 1" i}}
name LowB
xpos 187
ypos 140
}
Multiply {
value {{supp i}}
name Multiply2
xpos 187
ypos 187
}
Merge2 {
inputs 2
operation plus
name Merge1
xpos 138
ypos 299
}
Multiply {
value {{masterMult i}}
name Multiply3
xpos 138
ypos 327
}
Merge2 {
inputs 2
operation min
name Merge10
xpos -17
ypos 371
}
set N9e48b000 [stack 0]
ShuffleCopy {
inputs 2
red red
green green
name ShuffleBlue
xpos -426
ypos 371
}
push $N9e429800
push $N9e48b000
ShuffleCopy {
inputs 2
red red
blue blue
name ShuffleGreen
xpos -526
ypos 369
}
push $N9e429800
push $N9e48b000
ShuffleCopy {
inputs 2
green green
blue blue
name ShuffleRed
xpos -630
ypos 369
}
Switch {
inputs 3
which {{back_color i}}
name Switch1
xpos -526
ypos 424
}
set N9e4c4000 [stack 0]
push $N9e429800
push $N9e4c4000
Merge2 {
inputs 2
operation minus
name Merge9
xpos -338
ypos 547
}
Saturation {
saturation 0
name Saturation1
xpos -338
ypos 586
}
ColorCorrect {
gain {{SpillTweak.r i} {SpillTweak.g i} {SpillTweak.b i} {1 i}}
name ColorCorrect1
xpos -338
ypos 655
}
Merge2 {
inputs 2
operation plus
name Merge11
xpos -526
ypos 655
}
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos -526
ypos 740
}
Keymix {
inputs 3
invertMask true
bbox A
name Keymix1
selected true
xpos -526
ypos 875
disable {{"\[exists parent.input1] ? 0 : 1" i}}
}
set N9e4c5800 [stack 0]
Viewer {
input_process false
name Viewer1
xpos 95
ypos 454
}
push $N9e4c5800
Output {
name Output1
xpos -526
ypos 980
}
end_group
Dot {
name Dot200
selected true
xpos -4743
ypos 9551
}
Dot {
name Dot201
selected true
xpos -4957
ypos 9551
}
push $N9e428400
Dot {
name Dot214
selected true
xpos -4884
ypos 9058
}
Group {
name PxF_KillSpill16
help "Remove red/green/blue spill."
tile_color 0x733520ff
selected true
xpos -4918
ypos 9452
addUserKnob {20 User}
addUserKnob {4 back_color l ScreenColor t "Which type of spill to remove." M {red green blue "" ""}}
back_color green
addUserKnob {7 supp l Suppression t "Bias the mix of channels used to cap the 'spill' channel.\nFor example when removing 'green spill':\n0 = green channel is capped by the red channel.\n\n0.5 = green channel is capped by half-mix of red and blue channels.\n\n1 = green channel is capped by the blue channel." R 0 2}
supp 0.5
addUserKnob {7 masterMult l Limiter t "Gain applied to the 'cap' channel to make the suppression more or less aggressive." R 0 10}
masterMult 1
addUserKnob {18 SpillTweak t "Adjust the luminance and color of the spill areas." R 0 10}
SpillTweak 1
addUserKnob {6 SpillTweak_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 ""}
addUserKnob {26 t l "" +STARTLINE T "PxF_KillSpill 2.5.2 - (c) 2011 - Xavier Bourque - www.pixelfudger.com"}
}
Input {
inputs 0
name mask
xpos -228
ypos 853
number 1
}
Input {
inputs 0
name img
xpos -496
ypos -217
}
Dot {
name Dot3
xpos -462
ypos -140
}
set N9e545800 [stack 0]
Dot {
name Dot2
xpos -689
ypos 208
}
Dot {
name Dot4
xpos -729
ypos 756
}
push $N9e545800
Dot {
name Dot1
xpos -156
ypos 744
}
push $N9e545800
push $N9e545800
Shuffle {
red blue
green blue
alpha black
name Blue
xpos 187
ypos 28
}
set N9f534800 [stack 0]
push $N9e545800
Shuffle {
red green
blue green
alpha black
name Green
xpos 76
ypos 26
}
set N9f534c00 [stack 0]
push $N9e545800
Shuffle {
green red
blue red
alpha black
name Red
xpos -17
ypos 27
}
set N9f535000 [stack 0]
Switch {
inputs 3
which {{back_color i}}
name High
xpos -17
ypos 132
}
push $N9f534c00
push $N9f535000
Switch {
inputs 2
which {{"back_color == 0 ? 1 : back_color == 1 ? 0 : 0" i}}
name LowA
xpos 76
ypos 132
}
Multiply {
value {{"1 - supp" i}}
name Multiply1
xpos 76
ypos 190
}
push $N9f534800
push $N9f534c00
push 0
Switch {
inputs 3
which {{"back_color == 0 ? 2 : back_color == 1 ? 2 : 1" i}}
name LowB
xpos 187
ypos 140
}
Multiply {
value {{supp i}}
name Multiply2
xpos 187
ypos 187
}
Merge2 {
inputs 2
operation plus
name Merge1
xpos 138
ypos 299
}
Multiply {
value {{masterMult i}}
name Multiply3
xpos 138
ypos 327
}
Merge2 {
inputs 2
operation min
name Merge10
xpos -17
ypos 371
}
set N9f55d000 [stack 0]
ShuffleCopy {
inputs 2
red red
green green
name ShuffleBlue
xpos -426
ypos 371
}
push $N9e545800
push $N9f55d000
ShuffleCopy {
inputs 2
red red
blue blue
name ShuffleGreen
xpos -526
ypos 369
}
push $N9e545800
push $N9f55d000
ShuffleCopy {
inputs 2
green green
blue blue
name ShuffleRed
xpos -630
ypos 369
}
Switch {
inputs 3
which {{back_color i}}
name Switch1
xpos -526
ypos 424
}
set N9f598000 [stack 0]
push $N9e545800
push $N9f598000
Merge2 {
inputs 2
operation minus
name Merge9
xpos -338
ypos 547
}
Saturation {
saturation 0
name Saturation1
xpos -338
ypos 586
}
ColorCorrect {
gain {{SpillTweak.r i} {SpillTweak.g i} {SpillTweak.b i} {1 i}}
name ColorCorrect1
xpos -338
ypos 655
}
Merge2 {
inputs 2
operation plus
name Merge11
xpos -526
ypos 655
}
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos -526
ypos 740
}
Keymix {
inputs 3
invertMask true
bbox A
name Keymix1
selected true
xpos -526
ypos 875
disable {{"\[exists parent.input1] ? 0 : 1" i}}
}
set N9f599800 [stack 0]
Viewer {
input_process false
name Viewer1
xpos 95
ypos 454
}
push $N9f599800
Output {
name Output1
xpos -526
ypos 980
}
end_group
Dot {
name Dot215
selected true
xpos -4884
ypos 9599
}
Group {
inputs 3
name ScreenExchange
selected true
xpos -5127
ypos 9596
addUserKnob {20 User}
addUserKnob {4 ScreenColor l "Screen Color" M {Blue Green ""}}
ScreenColor Green
addUserKnob {18 ColorPick l Color}
ColorPick {0 0 0}
addUserKnob {6 ColorPick_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 CleanPlateOption l "Use CleanPlate" +STARTLINE}
CleanPlateOption true
addUserKnob {4 HOGB l Matte M {HoldOut Garbage "Base Key" Mask}}
HOGB Mask
addUserKnob {7 MatteShrink l "Matte Offset" R 0 40}
MatteShrink 1
addUserKnob {7 size l Softness R 0 10000}
addUserKnob {26 ""}
addUserKnob {7 which l "Red Balance"}
which 0.045
addUserKnob {7 GammaTweak l Gamma}
GammaTweak 0.92
addUserKnob {7 GainTweak l Gain}
GainTweak 0.64
addUserKnob {7 Despillr l Despill}
Despillr 1
addUserKnob {26 ""}
addUserKnob {7 which_ l Mix}
which_ 1
addUserKnob {6 addresult l "Additive Output" +STARTLINE}
}
BackdropNode {
inputs 0
name BackdropNode69
knobChanged "try:\n    node=nuke.thisNode()\n    knob=nuke.thisKnob()\n    name=knob.name()\n\n    def updateKnobs():\n        nodeWidth=node\['bdwidth'].getValue()\n        nodeHeight=node\['bdheight'].getValue()\n        node\['sizeNode'].setValue(\[int(nodeWidth),int(nodeHeight)])\n        node\['node_position_x'].setValue(int(node\['xpos'].value()))\n        node\['node_position_y'].setValue(int(node\['ypos'].value()))\n        node\['zorder'].setValue(int(node\['z_order'].getValue()))\n        node\['font_size'].setValue(int(node\['note_font_size'].getValue()))\n        node\['oz_appearance'].setValue( node\['appearance'].value() )\n        node\['oz_border_width'].setValue( node\['border_width'].value() )\n        #node\['fontColor'].setValue(int(node\['note_font_color'].getValue()))\n\n    def updateLabelKnob():\n        curLabel = node\['label'].getValue()\n        if '<p align=center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=center>', ''))\n            node\['alignment'].setValue(1)\n        elif '<p align=right>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=right>', ''))\n            node\['alignment'].setValue(2)\n        elif '<center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<center>', ''))\n            node\['alignment'].setValue(1)\n        else:\n            node\['text'].setValue(curLabel)\n            node\['alignment'].setValue(0)\n\n    ### OPENING SETUP\n    if name=='showPanel':\n        updateKnobs()\n        updateLabelKnob()\n\n    ### UPDATE STYLE\n    if name in \['oz_appearance', 'oz_border_width']:\n        node\['appearance'].setValue( node\['oz_appearance'].value() )\n        node\['border_width'].setValue( node\['oz_border_width'].value() )\n\n    ### CHANGE THE SIZE OF THE NODE\n    if name=='sizeNode':\n        node\['bdwidth'].setValue(int(node\['sizeNode'].getValue()\[0]))\n        node\['bdheight'].setValue(int(node\['sizeNode'].getValue()\[1]))\n\n    ### POSITION\n    if name=='node_position_x' or name=='node_position_y':\n        node.setXYpos(int(node\['node_position_x'].getValue()),int(node\['node_position_y'].getValue()))\n\n    ### ZORDER\n    if name=='zorder':\n        node\['z_order'].setValue(node\['zorder'].getValue())\n\n    ### UPDATE THE 'CURRENT SIZE' AND ORDER\n    #if name=='bdwidth' or name=='bdheight' or name=='z_order':\n    if name in \['bdwidth', 'bdheight', 'z_order']:\n        updateKnobs()\n\n    ### UPDATE LABEL\n    title = node\['name'].value()\n    text = node\['text'].value()\n\n    if name in \['text', 'alignment', 'title']:\n        if text=='':\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+title\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+title\n            else:\n                newLabel=title\n        else:\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+text\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+text\n            else:\n                newLabel=text\n\n        node\['label'].setValue(newLabel)\n\n    if name==\"font_size\":\n        new_font_size = node\[\"font_size\"].value()\n        node\['note_font_size'].setValue(new_font_size)\n\n    del newLabel\n\nexcept:\n    pass\n"
tile_color 0x2b2a37ff
label "Screen Exchange"
note_font_size 50
selected true
xpos -3
ypos -455
bdwidth 1767
bdheight 2542
addUserKnob {20 Settings}
addUserKnob {43 text l Text}
text "Screen Exchange"
addUserKnob {7 font_size l "Font Size" R 10 100}
font_size 50
addUserKnob {4 alignment l "" -STARTLINE M {left center right}}
addUserKnob {26 divider1 l "" +STARTLINE}
addUserKnob {26 S01 l " " T " "}
addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import random\nn=nuke.thisNode()\nr,g,b=\[(float(random.randint( 20, 40)))/100,(float(random.randint( 10, 50)))/100,(float(random.randint( 15, 60)))/100]\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (r*255,g*255,b*255,1),16) )\n"}
addUserKnob {22 red l " <img src=\"F_r.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.77, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 orange l " <img src=\"F_o.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 yellow l " <img src=\"F_y.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 green l " <img src=\"F_g.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 cyan l " <img src=\"F_c.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 blue l " <img src=\"F_b.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.7, 0.76]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 darkblue l " <img src=\"F_db.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.74, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 magenta l " <img src=\"F_m.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.74, 0.65]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 pink l " <img src=\"F_p.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.74, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {26 S08 l " " T " "}
addUserKnob {4 oz_appearance l appearance -STARTLINE M {Fill Border}}
addUserKnob {7 oz_border_width l width -STARTLINE R 0 10}
oz_border_width 2
addUserKnob {26 divider2 l "" +STARTLINE}
addUserKnob {26 S02 l " " T " "}
addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\ngrow(n,50)"}
addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\nshrink(n,50)"}
addUserKnob {26 S03 l " " -STARTLINE T "     "}
addUserKnob {22 encompassSelectedNodes l " <img src=\"oz_encompass.png\">" -STARTLINE T "this = nuke.thisNode()\npadding = this\['sides'].getValue()\nif this.isSelected:\n    this.setSelected(False)\nselNodes = nuke.selectedNodes()\n        \ndef nodeIsInside (node, backdropNode):\n    # Returns true if node geometry is inside backdropNode otherwise returns false\n    topLeftNode = \[node.xpos(), node.ypos()]\n    topLeftBackDrop = \[backdropNode.xpos(), backdropNode.ypos()]\n    bottomRightNode = \[node.xpos() + node.screenWidth(), node.ypos() + node.screenHeight()]\n    bottomRightBackdrop = \[backdropNode.xpos() + backdropNode.screenWidth(), backdropNode.ypos() + backdropNode.screenHeight()]\n                    \n    topLeft = ( topLeftNode\[0] >= topLeftBackDrop\[0] ) and ( topLeftNode\[1] >= topLeftBackDrop\[1] )\n    bottomRight = ( bottomRightNode\[0] <= bottomRightBackdrop\[0] ) and ( bottomRightNode\[1] <= bottomRightBackdrop\[1] )\n                    \n    return topLeft and bottomRight\n\nif not selNodes:\n    nuke.message('Some nodes should be selected')\nelse:\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in selNodes])\n    bdY = min(\[node.ypos() for node in selNodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in selNodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in selNodes]) - bdY\n                        \n    zOrder = 0\n    selectedBackdropNodes = nuke.selectedNodes( \"BackdropNode\" )\n\n    #if there are backdropNodes selected put the new one immediately behind the farthest one\n                \n    if len( selectedBackdropNodes ):\n        zOrder = min( \[node.knob( \"z_order\" ).value() for node in selectedBackdropNodes] ) - 1\n    else :\n        #otherwise (no backdrop in selection) find the nearest backdrop if exists and set the new one in front of it\n        nonSelectedBackdropNodes = nuke.allNodes(\"BackdropNode\")\n        for nonBackdrop in selNodes:\n            for backdrop in nonSelectedBackdropNodes:\n                if nodeIsInside( nonBackdrop, backdrop ):\n                    zOrder = max( zOrder, backdrop.knob( \"z_order\" ).value() + 1 )\n    \n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-padding, -(padding+70), padding, padding)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    this\['xpos'].setValue(bdX)\n    this\['bdwidth'].setValue(bdW)\n    this\['ypos'].setValue(bdY)\n    this\['bdheight'].setValue(bdH)\n    this\['z_order'].setValue(zOrder)\n"}
addUserKnob {26 S04 l " " -STARTLINE T " "}
addUserKnob {3 sides l "" -STARTLINE}
sides 50
addUserKnob {26 divider3 l "" +STARTLINE}
addUserKnob {26 S05 l " " -STARTLINE T " "}
addUserKnob {26 pos_text l Position -STARTLINE T " "}
addUserKnob {3 node_position_x l x -STARTLINE}
node_position_x 61
addUserKnob {3 node_position_y l y -STARTLINE}
node_position_y -439
addUserKnob {26 S06 l " " T " "}
addUserKnob {14 sizeNode l Size -STARTLINE R 0 100}
sizeNode {1767 2542}
addUserKnob {26 S07 l " " -STARTLINE T "     "}
addUserKnob {3 zorder l "Z Order" -STARTLINE}
}
Input {
inputs 0
name Matte
selected true
xpos 167
ypos 1158
number 3
}
Blur {
size {{parent.size}}
filter quadratic
name MatteBlur
selected true
xpos 167
ypos 1242
}
set N9f61f000 [stack 0]
Dilate {
size {{parent.MatteDilate.size}}
name MatteDilate1
selected true
xpos 167
ypos 1329
}
Dot {
name Dot47
selected true
xpos 734
ypos 1338
}
set N9f61f800 [stack 0]
Invert {
name Invert1
selected true
xpos 700
ypos 1383
}
Input {
inputs 0
name BG
selected true
xpos 455
ypos -357
number 2
}
NoOp {
name Background1
selected true
xpos 455
ypos -315
}
Dot {
name Dot3
selected true
xpos 489
ypos -192
}
set N9f652800 [stack 0]
Dot {
name Dot31
selected true
xpos 565
ypos -192
}
Dot {
name Dot32
selected true
xpos 565
ypos 1194
}
set N9f653000 [stack 0]
Dot {
name Dot37
selected true
xpos 565
ypos 1449
}
set N9f653400 [stack 0]
push $N9f652800
Input {
inputs 0
name Clean
selected true
xpos 156
ypos -357
number 1
}
NoOp {
name Cleanplate1
selected true
xpos 156
ypos -315
}
Dot {
name Dot1
selected true
xpos 190
ypos -222
}
set N9f66c000 [stack 0]
push $N9f66c000
Remove {
operation keep
channels rgb
name Remove1
selected true
xpos 290
ypos -225
}
Expression {
expr0 parent.ColorPick.r
expr1 parent.ColorPick.g
expr2 parent.ColorPick.b
name Expression1
selected true
xpos 290
ypos -147
}
Switch {
inputs 2
which {{parent.CleanPlateOption}}
name ColorOrClean
selected true
xpos 156
ypos -147
}
Dot {
name Dot2
selected true
xpos 190
ypos -48
}
set N9f66d000 [stack 0]
Merge2 {
inputs 2
operation minus
name BGminusColour
selected true
xpos 455
ypos -51
}
Dot {
name Dot9
selected true
xpos 489
ypos 748
}
push $N9f66d000
Dot {
name Dot4
selected true
xpos 190
ypos 3
}
set N9f66dc00 [stack 0]
Shuffle {
red green
blue green
alpha green
name ColorGreenCH
selected true
xpos 156
ypos 92
}
set N9f694000 [stack 0]
push $N9f66dc00
Dot {
name Dot6
selected true
xpos 278
ypos 3
}
Shuffle {
red blue
green blue
alpha blue
name ColorBlueCH
selected true
xpos 244
ypos 92
}
set N9f694800 [stack 0]
Switch {
inputs 2
which {{parent.GreenOrBlue.which}}
name GreenOrBlue1
selected true
xpos 244
ypos 169
}
Dot {
name Dot8
selected true
xpos 278
ypos 474
}
push $N9f66dc00
Dot {
name Dot5
selected true
xpos 104
ypos 3
}
Shuffle {
green red
blue red
alpha red
name ColorRedCH
selected true
xpos 70
ypos 92
}
push $N9f694800
push $N9f694000
Switch {
inputs 2
which {{parent.ScreenColor}}
name GreenOrBlue
selected true
xpos 156
ypos 170
}
Dot {
name Dot7
selected true
xpos 190
ypos 247
}
Dissolve {
inputs 2
which {{parent.which}}
name AverageWRED
selected true
xpos 70
ypos 238
}
Gamma {
value {{parent.GammaTweak}}
name GammaCHBG
selected true
xpos 70
ypos 321
}
Grade {
blackpoint 0.0001
white {{parent.GainTweak}}
name GradeCHBG
selected true
xpos 70
ypos 399
}
Merge2 {
inputs 2
operation minus
name MINUSaverageValue1
selected true
xpos 70
ypos 471
}
Clamp {
minimum 0.0001
name ClampBG
selected true
xpos 70
ypos 595
}
Merge2 {
inputs 2
operation divide
name MergeDivide
selected true
xpos 70
ypos 745
}
Dot {
name Dot15
selected true
xpos 104
ypos 873
}
Input {
inputs 0
name FG
selected true
xpos 730
ypos -363
}
NoOp {
name Foreground1
selected true
xpos 730
ypos -321
}
Dot {
name Dot16
selected true
xpos 764
ypos -102
}
set N9f6fa800 [stack 0]
Dot {
name Dot10
selected true
xpos 764
ypos -6
}
set N9f6fac00 [stack 0]
Shuffle {
red green
blue green
alpha green
name ColorGreenCH1
selected true
xpos 730
ypos 83
}
set N9f6fb000 [stack 0]
push $N9f6fac00
Dot {
name Dot11
selected true
xpos 852
ypos -6
}
Shuffle {
red blue
green blue
alpha blue
name ColorBlueCH1
selected true
xpos 818
ypos 83
}
set N9f6fb800 [stack 0]
Switch {
inputs 2
which {{parent.GreenOrBlue.which}}
name GreenOrBlue2
selected true
xpos 818
ypos 159
}
Dot {
name Dot12
selected true
xpos 852
ypos 465
}
push $N9f6fac00
Dot {
name Dot13
selected true
xpos 678
ypos -6
}
Shuffle {
green red
blue red
alpha red
name ColorRedCH1
selected true
xpos 644
ypos 83
}
push $N9f6fb800
push $N9f6fb000
Switch {
inputs 2
which {{parent.GreenOrBlue.which}}
name GreenOrBlue3
selected true
xpos 730
ypos 159
}
Dot {
name Dot14
selected true
xpos 764
ypos 238
}
Dissolve {
inputs 2
which {{parent.AverageWRED.which}}
name AverageWRED1
selected true
xpos 644
ypos 229
}
Gamma {
value {{parent.GammaCHBG.value}}
name GammaCHBG1
selected true
xpos 644
ypos 312
}
Grade {
white {{parent.GradeCHBG.white}}
name GradeCHBG1
selected true
xpos 644
ypos 399
}
Merge2 {
inputs 2
operation minus
name MINUSaverageValue2
selected true
xpos 644
ypos 462
}
Multiply {
value {{parent.Despillr}}
name MultiplySpill
selected true
xpos 644
ypos 529
}
set N9f748400 [stack 0]
Clamp {
minimum 0.0001
name Clamp1
selected true
xpos 644
ypos 609
}
Merge2 {
inputs 2
operation multiply
name MergeMultiply
selected true
xpos 644
ypos 870
}
Dot {
name Dot18
selected true
xpos 678
ypos 954
}
push $N9f6fa800
Dot {
name Dot17
selected true
xpos 1038
ypos -102
}
set N9f749400 [stack 0]
Merge2 {
inputs 2
operation plus
name MergePlus
selected true
xpos 1004
ypos 951
}
Dot {
name Dot29
selected true
xpos 1038
ypos 1098
}
set N9f749c00 [stack 0]
Dot {
name Dot38
selected true
xpos 1038
ypos 1251
}
set N9f77e000 [stack 0]
Dot {
name Dot39
selected true
xpos 672
ypos 1251
}
Keymix {
inputs 3
name KeymixMASK
selected true
xpos 638
ypos 1440
}
Dot {
name Dot44
selected true
xpos 672
ypos 1530
}
Dot {
name Dot45
selected true
xpos 1006
ypos 1530
}
push $N9f61f000
Dot {
name Dot49
selected true
xpos 48
ypos 1251
}
Invert {
name InvertMatte
selected true
xpos 14
ypos 1401
}
Dot {
name Dot51
selected true
xpos 48
ypos 1547
}
Dilate {
size {{-parent.MatteShrink}}
name MatteDilate
selected true
xpos 400
ypos 1545
}
Dot {
name Dot52
selected true
xpos 1468
ypos 1554
}
push $N9f653400
Dot {
name Dot40
selected true
xpos 565
ypos 1578
}
Dot {
name Dot41
selected true
xpos 1204
ypos 1578
}
set N9f798c00 [stack 0]
push $N9f61f800
Dot {
name Dot50
selected true
xpos 866
ypos 1339
}
set N9f799000 [stack 0]
Dot {
name Dot48
selected true
xpos 866
ypos 1458
}
push $N9f749400
Dot {
name Dot19
selected true
xpos 1395
ypos -102
}
set N9f799800 [stack 0]
Dot {
name Dot20
selected true
xpos 1395
ypos 106
}
set N9f799c00 [stack 0]
Dot {
name Dot21
selected true
xpos 1255
ypos 106
}
Shuffle {
red green
blue green
alpha green
name ShuffleGspill
selected true
xpos 1221
ypos 183
}
push $N9f748400
Dot {
name Dot22
selected true
xpos 967
ypos 538
}
Dot {
name Dot24
selected true
xpos 967
ypos 402
}
set N9f7bac00 [stack 0]
Dot {
name Dot23
selected true
xpos 967
ypos 282
}
Merge2 {
inputs 2
operation minus
name MINUSaverageValue3
selected true
xpos 1221
ypos 279
}
push $N9f799c00
Copy {
inputs 2
from0 rgba.green
to0 rgba.green
name Copy1
selected true
xpos 1361
ypos 273
}
Dot {
name Dot28
selected true
xpos 1395
ypos 540
}
push $N9f799800
Dot {
name Dot27
selected true
xpos 1674
ypos -102
}
Dot {
name Dot25
selected true
xpos 1674
ypos 226
}
set N9f7e0400 [stack 0]
Dot {
name Dot26
selected true
xpos 1534
ypos 226
}
Shuffle {
red blue
green blue
alpha blue
name ShuffleBspill1
selected true
xpos 1500
ypos 303
}
push $N9f7bac00
Merge2 {
inputs 2
operation minus
name MINUSaverageValue4
selected true
xpos 1500
ypos 399
}
push $N9f7e0400
Copy {
inputs 2
from0 rgba.blue
to0 rgba.blue
name Copy2
selected true
xpos 1640
ypos 393
}
Switch {
inputs 2
which {{parent.GreenOrBlue.which}}
name GreenOrBlue4
selected true
xpos 1640
ypos 537
}
Dot {
name Dot33
selected true
xpos 1674
ypos 1338
}
set N9f7e1c00 [stack 0]
Dot {
name Dot42
selected true
xpos 1674
ypos 1468
}
push $N9f77e000
Dot {
name Dot43
selected true
xpos 1534
ypos 1251
}
Keymix {
inputs 3
name CoreKeymix
selected true
xpos 1500
ypos 1459
}
Keymix {
inputs 3
name GarbageKeymix
selected true
xpos 1500
ypos 1569
}
Dot {
name Dot46
selected true
xpos 1475
ypos 1482
}
push $N9f61f800
push $N9f653000
push $N9f749c00
Dot {
name Dot30
selected true
xpos 787
ypos 1098
}
Keymix {
inputs 3
name KeymixBG
selected true
xpos 753
ypos 1185
}
Dot {
name Dot34
selected true
xpos 787
ypos 1482
}
push $N9f799000
push $N9f7e1c00
push $N9f77e000
Keymix {
inputs 3
name KeymixHO
selected true
xpos 1004
ypos 1329
}
Switch {
inputs 4
which {{parent.HOGB}}
name HOGBSwitch
selected true
xpos 1004
ypos 1479
}
push $N9f798c00
Dissolve {
inputs 2
which 1
name OverallMix
selected true
xpos 1004
ypos 1617
}
Dot {
name Dot35
selected true
xpos 1038
ypos 1722
}
set N9f82ac00 [stack 0]
push $N9f798c00
Merge2 {
inputs 2
operation minus
name Merge1
selected true
xpos 1170
ypos 1719
}
Dot {
name Dot36
selected true
xpos 1204
ypos 1876
}
push $N9f82ac00
Switch {
inputs 2
which {{parent.addresult}}
name Switchoutput
selected true
xpos 1004
ypos 1873
}
Output {
name Output1
selected true
xpos 1004
ypos 2031
}
end_group
Merge2 {
inputs 2
name Merge62
selected true
xpos -5127
ypos 10015
}
push $cut_paste_input
Group {
name ScreenExchange1
selected true
xpos -3034
ypos 11145
addUserKnob {20 User}
addUserKnob {4 ScreenColor l "Screen Color" M {Blue Green ""}}
ScreenColor Green
addUserKnob {18 ColorPick l Color}
ColorPick {0 0 0}
addUserKnob {6 ColorPick_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 CleanPlateOption l "Use CleanPlate" +STARTLINE}
CleanPlateOption true
addUserKnob {4 HOGB l Matte M {HoldOut Garbage "Base Key" Mask}}
HOGB Mask
addUserKnob {7 MatteShrink l "Matte Offset" R 0 40}
MatteShrink 1
addUserKnob {7 size l Softness R 0 10000}
addUserKnob {26 ""}
addUserKnob {7 which l "Red Balance"}
which 0.045
addUserKnob {7 GammaTweak l Gamma}
GammaTweak 0.92
addUserKnob {7 GainTweak l Gain}
GainTweak 0.64
addUserKnob {7 Despillr l Despill}
Despillr 1
addUserKnob {26 ""}
addUserKnob {7 which_ l Mix}
which_ 1
addUserKnob {6 addresult l "Additive Output" +STARTLINE}
}
BackdropNode {
inputs 0
name BackdropNode69
knobChanged "try:\n    node=nuke.thisNode()\n    knob=nuke.thisKnob()\n    name=knob.name()\n\n    def updateKnobs():\n        nodeWidth=node\['bdwidth'].getValue()\n        nodeHeight=node\['bdheight'].getValue()\n        node\['sizeNode'].setValue(\[int(nodeWidth),int(nodeHeight)])\n        node\['node_position_x'].setValue(int(node\['xpos'].value()))\n        node\['node_position_y'].setValue(int(node\['ypos'].value()))\n        node\['zorder'].setValue(int(node\['z_order'].getValue()))\n        node\['font_size'].setValue(int(node\['note_font_size'].getValue()))\n        node\['oz_appearance'].setValue( node\['appearance'].value() )\n        node\['oz_border_width'].setValue( node\['border_width'].value() )\n        #node\['fontColor'].setValue(int(node\['note_font_color'].getValue()))\n\n    def updateLabelKnob():\n        curLabel = node\['label'].getValue()\n        if '<p align=center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=center>', ''))\n            node\['alignment'].setValue(1)\n        elif '<p align=right>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=right>', ''))\n            node\['alignment'].setValue(2)\n        elif '<center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<center>', ''))\n            node\['alignment'].setValue(1)\n        else:\n            node\['text'].setValue(curLabel)\n            node\['alignment'].setValue(0)\n\n    ### OPENING SETUP\n    if name=='showPanel':\n        updateKnobs()\n        updateLabelKnob()\n\n    ### UPDATE STYLE\n    if name in \['oz_appearance', 'oz_border_width']:\n        node\['appearance'].setValue( node\['oz_appearance'].value() )\n        node\['border_width'].setValue( node\['oz_border_width'].value() )\n\n    ### CHANGE THE SIZE OF THE NODE\n    if name=='sizeNode':\n        node\['bdwidth'].setValue(int(node\['sizeNode'].getValue()\[0]))\n        node\['bdheight'].setValue(int(node\['sizeNode'].getValue()\[1]))\n\n    ### POSITION\n    if name=='node_position_x' or name=='node_position_y':\n        node.setXYpos(int(node\['node_position_x'].getValue()),int(node\['node_position_y'].getValue()))\n\n    ### ZORDER\n    if name=='zorder':\n        node\['z_order'].setValue(node\['zorder'].getValue())\n\n    ### UPDATE THE 'CURRENT SIZE' AND ORDER\n    #if name=='bdwidth' or name=='bdheight' or name=='z_order':\n    if name in \['bdwidth', 'bdheight', 'z_order']:\n        updateKnobs()\n\n    ### UPDATE LABEL\n    title = node\['name'].value()\n    text = node\['text'].value()\n\n    if name in \['text', 'alignment', 'title']:\n        if text=='':\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+title\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+title\n            else:\n                newLabel=title\n        else:\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+text\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+text\n            else:\n                newLabel=text\n\n        node\['label'].setValue(newLabel)\n\n    if name==\"font_size\":\n        new_font_size = node\[\"font_size\"].value()\n        node\['note_font_size'].setValue(new_font_size)\n\n    del newLabel\n\nexcept:\n    pass\n"
tile_color 0x2b2a37ff
label "Screen Exchange"
note_font_size 50
selected true
xpos -3
ypos -455
bdwidth 1767
bdheight 2542
addUserKnob {20 Settings}
addUserKnob {43 text l Text}
text "Screen Exchange"
addUserKnob {7 font_size l "Font Size" R 10 100}
font_size 50
addUserKnob {4 alignment l "" -STARTLINE M {left center right}}
addUserKnob {26 divider1 l "" +STARTLINE}
addUserKnob {26 S01 l " " T " "}
addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import random\nn=nuke.thisNode()\nr,g,b=\[(float(random.randint( 20, 40)))/100,(float(random.randint( 10, 50)))/100,(float(random.randint( 15, 60)))/100]\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (r*255,g*255,b*255,1),16) )\n"}
addUserKnob {22 red l " <img src=\"F_r.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.77, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 orange l " <img src=\"F_o.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 yellow l " <img src=\"F_y.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.8, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 green l " <img src=\"F_g.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 cyan l " <img src=\"F_c.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 blue l " <img src=\"F_b.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.7, 0.76]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 darkblue l " <img src=\"F_db.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.74, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 magenta l " <img src=\"F_m.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.74, 0.65]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {22 pink l " <img src=\"F_p.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.74, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
addUserKnob {26 S08 l " " T " "}
addUserKnob {4 oz_appearance l appearance -STARTLINE M {Fill Border}}
addUserKnob {7 oz_border_width l width -STARTLINE R 0 10}
oz_border_width 2
addUserKnob {26 divider2 l "" +STARTLINE}
addUserKnob {26 S02 l " " T " "}
addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\ngrow(n,50)"}
addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\nshrink(n,50)"}
addUserKnob {26 S03 l " " -STARTLINE T "     "}
addUserKnob {22 encompassSelectedNodes l " <img src=\"oz_encompass.png\">" -STARTLINE T "this = nuke.thisNode()\npadding = this\['sides'].getValue()\nif this.isSelected:\n    this.setSelected(False)\nselNodes = nuke.selectedNodes()\n        \ndef nodeIsInside (node, backdropNode):\n    # Returns true if node geometry is inside backdropNode otherwise returns false\n    topLeftNode = \[node.xpos(), node.ypos()]\n    topLeftBackDrop = \[backdropNode.xpos(), backdropNode.ypos()]\n    bottomRightNode = \[node.xpos() + node.screenWidth(), node.ypos() + node.screenHeight()]\n    bottomRightBackdrop = \[backdropNode.xpos() + backdropNode.screenWidth(), backdropNode.ypos() + backdropNode.screenHeight()]\n                    \n    topLeft = ( topLeftNode\[0] >= topLeftBackDrop\[0] ) and ( topLeftNode\[1] >= topLeftBackDrop\[1] )\n    bottomRight = ( bottomRightNode\[0] <= bottomRightBackdrop\[0] ) and ( bottomRightNode\[1] <= bottomRightBackdrop\[1] )\n                    \n    return topLeft and bottomRight\n\nif not selNodes:\n    nuke.message('Some nodes should be selected')\nelse:\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in selNodes])\n    bdY = min(\[node.ypos() for node in selNodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in selNodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in selNodes]) - bdY\n                        \n    zOrder = 0\n    selectedBackdropNodes = nuke.selectedNodes( \"BackdropNode\" )\n\n    #if there are backdropNodes selected put the new one immediately behind the farthest one\n                \n    if len( selectedBackdropNodes ):\n        zOrder = min( \[node.knob( \"z_order\" ).value() for node in selectedBackdropNodes] ) - 1\n    else :\n        #otherwise (no backdrop in selection) find the nearest backdrop if exists and set the new one in front of it\n        nonSelectedBackdropNodes = nuke.allNodes(\"BackdropNode\")\n        for nonBackdrop in selNodes:\n            for backdrop in nonSelectedBackdropNodes:\n                if nodeIsInside( nonBackdrop, backdrop ):\n                    zOrder = max( zOrder, backdrop.knob( \"z_order\" ).value() + 1 )\n    \n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-padding, -(padding+70), padding, padding)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    this\['xpos'].setValue(bdX)\n    this\['bdwidth'].setValue(bdW)\n    this\['ypos'].setValue(bdY)\n    this\['bdheight'].setValue(bdH)\n    this\['z_order'].setValue(zOrder)\n"}
addUserKnob {26 S04 l " " -STARTLINE T " "}
addUserKnob {3 sides l "" -STARTLINE}
sides 50
addUserKnob {26 divider3 l "" +STARTLINE}
addUserKnob {26 S05 l " " -STARTLINE T " "}
addUserKnob {26 pos_text l Position -STARTLINE T " "}
addUserKnob {3 node_position_x l x -STARTLINE}
node_position_x 61
addUserKnob {3 node_position_y l y -STARTLINE}
node_position_y -439
addUserKnob {26 S06 l " " T " "}
addUserKnob {14 sizeNode l Size -STARTLINE R 0 100}
sizeNode {1767 2542}
addUserKnob {26 S07 l " " -STARTLINE T "     "}
addUserKnob {3 zorder l "Z Order" -STARTLINE}
}
Input {
inputs 0
name Matte
selected true
xpos 167
ypos 1158
number 3
}
Blur {
size {{parent.size}}
filter quadratic
name MatteBlur
selected true
xpos 167
ypos 1242
}
set N9f856c00 [stack 0]
Dilate {
size {{parent.MatteDilate.size}}
name MatteDilate1
selected true
xpos 167
ypos 1329
}
Dot {
name Dot47
selected true
xpos 734
ypos 1338
}
set N9f857400 [stack 0]
Invert {
name Invert1
selected true
xpos 700
ypos 1383
}
Input {
inputs 0
name BG
selected true
xpos 455
ypos -357
number 2
}
NoOp {
name Background1
selected true
xpos 455
ypos -315
}
Dot {
name Dot3
selected true
xpos 489
ypos -192
}
set N9f896400 [stack 0]
Dot {
name Dot31
selected true
xpos 565
ypos -192
}
Dot {
name Dot32
selected true
xpos 565
ypos 1194
}
set N9f896c00 [stack 0]
Dot {
name Dot37
selected true
xpos 565
ypos 1449
}
set N9f897000 [stack 0]
push $N9f896400
Input {
inputs 0
name Clean
selected true
xpos 156
ypos -357
number 1
}
NoOp {
name Cleanplate1
selected true
xpos 156
ypos -315
}
Dot {
name Dot1
selected true
xpos 190
ypos -222
}
set N9f897c00 [stack 0]
push $N9f897c00
Remove {
operation keep
channels rgb
name Remove1
selected true
xpos 290
ypos -225
}
Expression {
expr0 parent.ColorPick.r
expr1 parent.ColorPick.g
expr2 parent.ColorPick.b
name Expression1
selected true
xpos 290
ypos -147
}
Switch {
inputs 2
which {{parent.CleanPlateOption}}
name ColorOrClean
selected true
xpos 156
ypos -147
}
Dot {
name Dot2
selected true
xpos 190
ypos -48
}
set N9f8acc00 [stack 0]
Merge2 {
inputs 2
operation minus
name BGminusColour
selected true
xpos 455
ypos -51
}
Dot {
name Dot9
selected true
xpos 489
ypos 748
}
push $N9f8acc00
Dot {
name Dot4
selected true
xpos 190
ypos 3
}
set N9f8ad800 [stack 0]
Shuffle {
red green
blue green
alpha green
name ColorGreenCH
selected true
xpos 156
ypos 92
}
set N9f8adc00 [stack 0]
push $N9f8ad800
Dot {
name Dot6
selected true
xpos 278
ypos 3
}
Shuffle {
red blue
green blue
alpha blue
name ColorBlueCH
selected true
xpos 244
ypos 92
}
set N9f8d6400 [stack 0]
Switch {
inputs 2
which {{parent.GreenOrBlue.which}}
name GreenOrBlue1
selected true
xpos 244
ypos 169
}
Dot {
name Dot8
selected true
xpos 278
ypos 474
}
push $N9f8ad800
Dot {
name Dot5
selected true
xpos 104
ypos 3
}
Shuffle {
green red
blue red
alpha red
name ColorRedCH
selected true
xpos 70
ypos 92
}
push $N9f8d6400
push $N9f8adc00
Switch {
inputs 2
which {{parent.ScreenColor}}
name GreenOrBlue
selected true
xpos 156
ypos 170
}
Dot {
name Dot7
selected true
xpos 190
ypos 247
}
Dissolve {
inputs 2
which {{parent.which}}
name AverageWRED
selected true
xpos 70
ypos 238
}
Gamma {
value {{parent.GammaTweak}}
name GammaCHBG
selected true
xpos 70
ypos 321
}
Grade {
blackpoint 0.0001
white {{parent.GainTweak}}
name GradeCHBG
selected true
xpos 70
ypos 399
}
Merge2 {
inputs 2
operation minus
name MINUSaverageValue1
selected true
xpos 70
ypos 471
}
Clamp {
minimum 0.0001
name ClampBG
selected true
xpos 70
ypos 595
}
Merge2 {
inputs 2
operation divide
name MergeDivide
selected true
xpos 70
ypos 745
}
Dot {
name Dot15
selected true
xpos 104
ypos 873
}
Input {
inputs 0
name FG
selected true
xpos 730
ypos -363
}
NoOp {
name Foreground1
selected true
xpos 730
ypos -321
}
Dot {
name Dot16
selected true
xpos 764
ypos -102
}
set N9f938400 [stack 0]
Dot {
name Dot10
selected true
xpos 764
ypos -6
}
set N9f938800 [stack 0]
Shuffle {
red green
blue green
alpha green
name ColorGreenCH1
selected true
xpos 730
ypos 83
}
set N9f938c00 [stack 0]
push $N9f938800
Dot {
name Dot11
selected true
xpos 852
ypos -6
}
Shuffle {
red blue
green blue
alpha blue
name ColorBlueCH1
selected true
xpos 818
ypos 83
}
set N9f939400 [stack 0]
Switch {
inputs 2
which {{parent.GreenOrBlue.which}}
name GreenOrBlue2
selected true
xpos 818
ypos 159
}
Dot {
name Dot12
selected true
xpos 852
ypos 465
}
push $N9f938800
Dot {
name Dot13
selected true
xpos 678
ypos -6
}
Shuffle {
green red
blue red
alpha red
name ColorRedCH1
selected true
xpos 644
ypos 83
}
push $N9f939400
push $N9f938c00
Switch {
inputs 2
which {{parent.GreenOrBlue.which}}
name GreenOrBlue3
selected true
xpos 730
ypos 159
}
Dot {
name Dot14
selected true
xpos 764
ypos 238
}
Dissolve {
inputs 2
which {{parent.AverageWRED.which}}
name AverageWRED1
selected true
xpos 644
ypos 229
}
Gamma {
value {{parent.GammaCHBG.value}}
name GammaCHBG1
selected true
xpos 644
ypos 312
}
Grade {
white {{parent.GradeCHBG.white}}
name GradeCHBG1
selected true
xpos 644
ypos 399
}
Merge2 {
inputs 2
operation minus
name MINUSaverageValue2
selected true
xpos 644
ypos 462
}
Multiply {
value {{parent.Despillr}}
name MultiplySpill
selected true
xpos 644
ypos 529
}
set N9f990000 [stack 0]
Clamp {
minimum 0.0001
name Clamp1
selected true
xpos 644
ypos 609
}
Merge2 {
inputs 2
operation multiply
name MergeMultiply
selected true
xpos 644
ypos 870
}
Dot {
name Dot18
selected true
xpos 678
ypos 954
}
push $N9f938400
Dot {
name Dot17
selected true
xpos 1038
ypos -102
}
set N9f991000 [stack 0]
Merge2 {
inputs 2
operation plus
name MergePlus
selected true
xpos 1004
ypos 951
}
Dot {
name Dot29
selected true
xpos 1038
ypos 1098
}
set N9f991800 [stack 0]
Dot {
name Dot38
selected true
xpos 1038
ypos 1251
}
set N9f991c00 [stack 0]
Dot {
name Dot39
selected true
xpos 672
ypos 1251
}
Keymix {
inputs 3
name KeymixMASK
selected true
xpos 638
ypos 1440
}
Dot {
name Dot44
selected true
xpos 672
ypos 1530
}
Dot {
name Dot45
selected true
xpos 1006
ypos 1530
}
push $N9f856c00
Dot {
name Dot49
selected true
xpos 48
ypos 1251
}
Invert {
name InvertMatte
selected true
xpos 14
ypos 1401
}
Dot {
name Dot51
selected true
xpos 48
ypos 1547
}
Dilate {
size {{-parent.MatteShrink}}
name MatteDilate
selected true
xpos 400
ypos 1545
}
Dot {
name Dot52
selected true
xpos 1468
ypos 1554
}
push $N9f897000
Dot {
name Dot40
selected true
xpos 565
ypos 1578
}
Dot {
name Dot41
selected true
xpos 1204
ypos 1578
}
set N9f9e2800 [stack 0]
push $N9f857400
Dot {
name Dot50
selected true
xpos 866
ypos 1339
}
set N9f9e2c00 [stack 0]
Dot {
name Dot48
selected true
xpos 866
ypos 1458
}
push $N9f991000
Dot {
name Dot19
selected true
xpos 1395
ypos -102
}
set N9f9e3400 [stack 0]
Dot {
name Dot20
selected true
xpos 1395
ypos 106
}
set N9f9e3800 [stack 0]
Dot {
name Dot21
selected true
xpos 1255
ypos 106
}
Shuffle {
red green
blue green
alpha green
name ShuffleGspill
selected true
xpos 1221
ypos 183
}
push $N9f990000
Dot {
name Dot22
selected true
xpos 967
ypos 538
}
Dot {
name Dot24
selected true
xpos 967
ypos 402
}
set N9f9fa800 [stack 0]
Dot {
name Dot23
selected true
xpos 967
ypos 282
}
Merge2 {
inputs 2
operation minus
name MINUSaverageValue3
selected true
xpos 1221
ypos 279
}
push $N9f9e3800
Copy {
inputs 2
from0 rgba.green
to0 rgba.green
name Copy1
selected true
xpos 1361
ypos 273
}
Dot {
name Dot28
selected true
xpos 1395
ypos 540
}
push $N9f9e3400
Dot {
name Dot27
selected true
xpos 1674
ypos -102
}
Dot {
name Dot25
selected true
xpos 1674
ypos 226
}
set N9fa22000 [stack 0]
Dot {
name Dot26
selected true
xpos 1534
ypos 226
}
Shuffle {
red blue
green blue
alpha blue
name ShuffleBspill1
selected true
xpos 1500
ypos 303
}
push $N9f9fa800
Merge2 {
inputs 2
operation minus
name MINUSaverageValue4
selected true
xpos 1500
ypos 399
}
push $N9fa22000
Copy {
inputs 2
from0 rgba.blue
to0 rgba.blue
name Copy2
selected true
xpos 1640
ypos 393
}
Switch {
inputs 2
which {{parent.GreenOrBlue.which}}
name GreenOrBlue4
selected true
xpos 1640
ypos 537
}
Dot {
name Dot33
selected true
xpos 1674
ypos 1338
}
set N9fa23800 [stack 0]
Dot {
name Dot42
selected true
xpos 1674
ypos 1468
}
push $N9f991c00
Dot {
name Dot43
selected true
xpos 1534
ypos 1251
}
Keymix {
inputs 3
name CoreKeymix
selected true
xpos 1500
ypos 1459
}
Keymix {
inputs 3
name GarbageKeymix
selected true
xpos 1500
ypos 1569
}
Dot {
name Dot46
selected true
xpos 1475
ypos 1482
}
push $N9f857400
push $N9f896c00
push $N9f991800
Dot {
name Dot30
selected true
xpos 787
ypos 1098
}
Keymix {
inputs 3
name KeymixBG
selected true
xpos 753
ypos 1185
}
Dot {
name Dot34
selected true
xpos 787
ypos 1482
}
push $N9f9e2c00
push $N9fa23800
push $N9f991c00
Keymix {
inputs 3
name KeymixHO
selected true
xpos 1004
ypos 1329
}
Switch {
inputs 4
which {{parent.HOGB}}
name HOGBSwitch
selected true
xpos 1004
ypos 1479
}
push $N9f9e2800
Dissolve {
inputs 2
which 1
name OverallMix
selected true
xpos 1004
ypos 1617
}
Dot {
name Dot35
selected true
xpos 1038
ypos 1722
}
set N9fa72800 [stack 0]
push $N9f9e2800
Merge2 {
inputs 2
operation minus
name Merge1
selected true
xpos 1170
ypos 1719
}
Dot {
name Dot36
selected true
xpos 1204
ypos 1876
}
push $N9fa72800
Switch {
inputs 2
which {{parent.addresult}}
name Switchoutput
selected true
xpos 1004
ypos 1873
}
Output {
name Output1
selected true
xpos 1004
ypos 2031
}
end_group
push $cut_paste_input
NoOp {
name Plate1
note_font "Verdana Bold"
note_font_size 35
selected true
xpos -373
ypos 7304
}
Dot {
name Dot268
selected true
xpos -339
ypos 7410
}
set N9fa96000 [stack 0]
Dot {
name Dot269
selected true
xpos -510
ypos 7410
}
IBKColourV3 {
name IBKColourV3_8
selected true
xpos -544
ypos 7454
screen_type green
Size 1
erode 4
multi 1
}
IBKColourV3 {
name IBKColourV3_9
selected true
xpos -544
ypos 7478
screen_type green
Size 1
multi 2
}
IBKColourV3 {
name IBKColourV3_11
selected true
xpos -544
ypos 7502
screen_type green
Size 1
multi 4
}
IBKColourV3 {
name IBKColourV3_12
selected true
xpos -544
ypos 7526
screen_type green
Size 1
multi 8
}
IBKColourV3 {
name IBKColourV3_13
selected true
xpos -544
ypos 7550
screen_type green
Size 1
multi 16
}
IBKColourV3 {
name IBKColourV3_14
selected true
xpos -544
ypos 7574
screen_type green
Size 1
multi 32
}
set N9e317700 [stack 0]
push $N9fa96000
Group {
inputs 2
name PxF_ScreenClean5
help "Clean chroma key background imperfections using a clean plate."
tile_color 0x733520ff
selected true
xpos -373
ypos 7574
addUserKnob {20 User}
addUserKnob {4 screen_type l ScreenType t "The color of the chroma key background." M {Red Green Blue "" "" ""}}
screen_type Green
addUserKnob {18 screen_color l ScreenColor t "The color that will be used to repair the chroma key background (usually the average color of the background)."}
screen_color {0.18 0.3 0.1}
addUserKnob {6 screen_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 ""}
addUserKnob {26 t l "" t "PxF_ScreenClean.\nInput 1 = Plate.\nInput 2 = Clean Plate.\nUse ScreenClean to erase\nimperfections in a green/blue/red\nscreen using a clean plate." -STARTLINE T "PxF_ScreenClean 2.0.3 - (c) 2012 - Xavier Bourque - www.pixelfudger.com"}
}
Input {
inputs 0
name mask
xpos 419
ypos 274
number 2
}
Input {
inputs 0
name plate
xpos 203
ypos -448
}
Dot {
name Dot1
xpos 209
ypos -347
}
set N9ff7e000 [stack 0]
Dot {
name Dot2
xpos -64
ypos -202
}
Dot {
name Dot3
xpos -57
ypos 214
}
set N9ff7e800 [stack 0]
push $N9ff7e800
push $N9ff7e000
Shuffle {
red blue
green blue
alpha black
name Blue
xpos 203
ypos -187
}
set N9ff7ec00 [stack 0]
push $N9ff7e000
Shuffle {
red green
blue green
alpha black
name Green
xpos 112
ypos -179
}
set N9ff7f000 [stack 0]
push $N9ff7e000
Shuffle {
green red
blue red
alpha black
name Red
xpos 17
ypos -180
}
set N9ff7f400 [stack 0]
Switch {
inputs 3
which {{screen_type i x1 0}}
name High
xpos 17
ypos -99
}
push $N9ff7f000
push $N9ff7f400
Switch {
inputs 2
which {{"screen_type == 0 ? 1 : screen_type == 1 ? 0 : 0" i x1 0}}
name LowA
xpos 145
ypos -108
}
push $N9ff7ec00
push $N9ff7f000
push 0
Switch {
inputs 3
which {{"screen_type == 0 ? 2 : screen_type == 1 ? 2 : 1" i x1 1}}
name LowB
xpos 261
ypos -107
}
Merge2 {
inputs 2
operation max
name Merge1
xpos 217
ypos -59
}
Merge2 {
inputs 2
operation minus
name Merge2
xpos 116
ypos -20
}
Input {
inputs 0
name clean_plate
xpos 462
ypos -437
number 1
}
Dot {
name Dot4
xpos 530
ypos -235
}
set N9ffa9000 [stack 0]
Shuffle {
red blue
green blue
alpha black
name Blue1
xpos 570
ypos -194
}
set N9ffa9400 [stack 0]
push $N9ffa9000
Shuffle {
red green
blue green
alpha black
name Green1
xpos 481
ypos -195
}
set N9ffa9800 [stack 0]
push $N9ffa9000
Shuffle {
green red
blue red
alpha black
name Red1
xpos 382
ypos -194
}
set N9ffa9c00 [stack 0]
Switch {
inputs 3
which {{screen_type i x1 0}}
name High1
xpos 401
ypos -130
}
push $N9ffa9800
push $N9ffa9c00
Switch {
inputs 2
which {{"screen_type == 0 ? 1 : screen_type == 1 ? 0 : 0" i}}
name LowA1
xpos 498
ypos -131
}
push $N9ffa9400
push $N9ffa9800
push 0
Switch {
inputs 3
which {{"screen_type == 0 ? 2 : screen_type == 1 ? 2 : 1" i}}
name LowB1
xpos 592
ypos -128
}
Merge2 {
inputs 2
operation max
name Merge3
xpos 532
ypos -73
}
Merge2 {
inputs 2
operation minus
name Merge4
xpos 429
ypos -19
}
Merge2 {
inputs 2
operation divide
name Merge5
xpos 309
ypos 87
}
Clamp {
name Clamp1
xpos 309
ypos 114
}
push $N9ffa9000
Dot {
name Dot5
xpos 720
ypos -198
}
push $N9ff7e000
Dot {
name Dot7
xpos 845
ypos -231
}
ColorCorrect {
gain 0
offset {{screen_color.r i} {screen_color.g i} {screen_color.b i} {1 i}}
name ColorCorrect1
xpos 817
ypos -159
postage_stamp true
}
Merge2 {
inputs 2
operation minus
name Merge6
xpos 692
ypos -24
}
Dot {
name Dot6
xpos 688
ypos 165
}
Merge2 {
inputs 2
operation multiply
name Merge7
xpos 309
ypos 166
}
Merge2 {
inputs 2
operation minus
name Merge8
xpos 309
ypos 215
}
Keymix {
inputs 3
invertMask true
bbox B
name Keymix1
selected true
xpos 309
ypos 299
disable {{"\[exists parent.input2] ? 0 : 1" i x1 0}}
}
Output {
name Output1
xpos 309
ypos 348
}
end_group
push $cut_paste_input
NoOp {
name Plate
note_font_size 35
selected true
xpos -419
ypos 7719
}
Dot {
name Dot272
selected true
xpos -385
ypos 7804
}
set Na0046400 [stack 0]
OFXuk.co.thefoundry.keylight.keylight_v201 {
show "Final Result"
unPreMultiply false
screenColour {0 0 0}
screenGain 1
screenBalance 0.5
alphaBias {0.5 0.5 0.5}
despillBias {0.5 0.5 0.5}
gangBiases true
preBlur 0
"Screen Matte" 0
screenClipMin 0
screenClipMax 1
screenClipRollback 0
screenGrowShrink 0
screenSoftness 0
screenDespotBlack 0
screenDespotWhite 0
screenReplaceMethod "Soft Colour"
screenReplaceColour {0.5 0.5 0.5}
Tuning 0
midPoint 0.5
lowGain 1
midGain 1
highGain 1
"Inside Mask" 0
sourceAlphaHandling Ignore
insideReplaceMethod "Soft Colour"
insideReplaceColour {0.5 0.5 0.5}
Crops 0
SourceXMethod Colour
SourceYMethod Colour
SourceEdgeColour 0
SourceCropL 0
SourceCropR 1
SourceCropB 0
SourceCropT 1
balanceSet false
insideComponent None
outsideComponent None
cacheBreaker true
name Keylight26
selected true
xpos -419
ypos 7979
}
Shuffle {
red alpha
green alpha
blue alpha
name Shuffle15
selected true
xpos -419
ypos 8078
}
Invert {
name Invert8
selected true
xpos -419
ypos 8123
}
Dot {
name Dot273
selected true
xpos -385
ypos 8181
}
push $N9e317700
Dot {
name Dot270
selected true
xpos -510
ypos 7732
}
PostageStamp {
name Defect_Map
selected true
xpos -544
ypos 7787
postage_stamp true
}
set Na0047c00 [stack 0]
OFXuk.co.thefoundry.keylight.keylight_v201 {
show "Intermediate Result"
unPreMultiply false
screenColour {0 0 0}
screenGain 1
screenBalance 0.5
alphaBias {0.5 0.5 0.5}
despillBias {0.5 0.5 0.5}
gangBiases true
preBlur 0
"Screen Matte" 1
screenClipMin 0
screenClipMax 1
screenClipRollback 0
screenGrowShrink 0
screenSoftness 0
screenDespotBlack 0
screenDespotWhite 0
screenReplaceMethod "Soft Colour"
screenReplaceColour {0.5 0.5 0.5}
Tuning 1
midPoint 0.5
lowGain 1
midGain 1
highGain 1
"Inside Mask" 1
sourceAlphaHandling Ignore
insideReplaceMethod "Soft Colour"
insideReplaceColour {0.5 0.5 0.5}
Crops 0
SourceXMethod Colour
SourceYMethod Colour
SourceEdgeColour 0
SourceCropL 0
SourceCropR 1
SourceCropB 0
SourceCropT 1
balanceSet false
insideComponent None
outsideComponent None
cacheBreaker true
name Keylight25
selected true
xpos -544
ypos 7979
}
Shuffle {
red alpha
green alpha
blue alpha
name Shuffle14
selected true
xpos -544
ypos 8072
}
Invert {
name Invert7
selected true
xpos -544
ypos 8120
}
Merge2 {
inputs 2
operation divide
name Merge61
selected true
xpos -544
ypos 8178
}
Gamma {
value 0.52
name Gamma1
selected true
xpos -544
ypos 8227
}
PostageStamp {
name PostageStamp1
selected true
xpos -544
ypos 8294
postage_stamp true
}
Dot {
name Dot271
selected true
xpos -510
ypos 8404
}
Constant {
inputs 0
channels rgb
color {0 1 0 0}
name Ref_SampleColour
selected true
xpos -834
ypos 7642
}
push $Na0047c00
Merge2 {
inputs 2
operation minus
name Merge58
selected true
xpos -834
ypos 7811
}
Clamp {
name Clamp16
selected true
xpos -834
ypos 7987
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy25
selected true
xpos -834
ypos 8395
}
Premult {
name Premult24
selected true
xpos -834
ypos 8473
}
Dot {
name Dot274
selected true
xpos -800
ypos 8533
}
push $Na0046400
Dot {
name Dot275
selected true
xpos -186
ypos 7804
}
Merge2 {
inputs 2
operation plus
name Merge66
selected true
xpos -220
ypos 8530
}
StickyNote {
inputs 0
name StickyNote14
label "Exactly the same key\nFrom REF sample Colour"
note_font_size 15
selected true
xpos -542
ypos 7899
}
StickyNote {
inputs 0
name StickyNote15
label "necessary to stop negative \npixel values produced\nin the MINUS operation"
note_font_size 15
selected true
xpos -744
ypos 7973
}
StickyNote {
inputs 0
name StickyNote16
label "Remove inherent FG colour cast, \nbut keep a check on edge hardness"
note_font_size 15
selected true
xpos -434
ypos 8230
}
StickyNote {
inputs 0
name StickyNote17
label "Look at the pixel math above..\nthe dark pixels in alpha describe\nwhat most different between the\ndefect map and the gs plate"
note_font_size 15
selected true
xpos -456
ypos 8293
}
StickyNote {
inputs 0
name StickyNote11
label "Fill in the problems, so giving you a level screen"
note_font_size 15
selected true
xpos -536
ypos 8494
}
Roto {
inputs 0
output alpha
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 0}
    {t x44800000 x44428000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}}}}}
toolbox {createBezier {
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_brush_hardness 0.200000003
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {1024 778}
name Roto24
selected true
xpos 144
ypos 7801
addUserKnob {20 button +HIDDEN +INVISIBLE}
addUserKnob {22 createPowerRelative -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerRelative()"}
addUserKnob {22 createPowerAbsolute -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerAbsolute()"}
addUserKnob {22 createPowerStabilize -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerStabilize()"}
}
Blur {
name Blur24
selected true
xpos 144
ypos 7860
}
Dot {
name Dot279
selected true
xpos 178
ypos 7933
}
NoOp {
inputs 0
name FinalKey
note_font "Verdana Bold"
note_font_size 35
selected true
xpos 353
ypos 7336
}
Dot {
name Dot276
selected true
xpos 387
ypos 7429
}
set Na0122000 [stack 0]
Dot {
name Dot278
selected true
xpos 520
ypos 7453
}
NoOp {
name Inner_Edge
label "Spread Control"
note_font "Verdana Bold"
note_font_size 15
selected true
xpos 486
ypos 7487
}
Blur {
name Blur21
selected true
xpos 486
ypos 7564
}
Grade {
name Grade26
selected true
xpos 486
ypos 7642
}
Blur {
name Blur23
selected true
xpos 486
ypos 7708
}
push $Na0122000
Dot {
name Dot277
selected true
xpos 252
ypos 7453
}
NoOp {
name Outer_Edge
label "Spread Control"
note_font "Verdana Bold"
note_font_size 15
selected true
xpos 218
ypos 7495
}
Blur {
name Blur20
selected true
xpos 218
ypos 7564
}
Grade {
name Grade25
selected true
xpos 218
ypos 7642
}
Blur {
name Blur22
selected true
xpos 218
ypos 7708
}
Merge2 {
inputs 2
operation stencil
bbox B
Achannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
Bchannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
output {-rgba.red -rgba.green -rgba.blue rgba.alpha}
name Merge67
selected true
xpos 353
ypos 7810
}
Merge2 {
inputs 2
operation mask
name Merge68
selected true
xpos 353
ypos 7930
}
Invert {
name Invert9
selected true
xpos 353
ypos 8044
}
Dot {
name Dot280
label "Reveals Outside Edges\nBuilds up a core matte based on \nthe primary matte for despill"
note_font "Verdana Bold"
note_font_size 30
note_font_color 0xff
selected true
xpos 387
ypos 8269
}
StickyNote {
inputs 0
name StickyNote18
label "<left>Use this for Core and Edge Despill,\nto despill around the edges"
note_font_size 15
note_font_color 0x40404ff
selected true
xpos 162
ypos 8191
}
NoOp {
inputs 0
name CoreDespill
note_font "Verdana Bold"
note_font_size 35
selected true
xpos 1005
ypos 7345
}
Dot {
name Dot281
selected true
xpos 1039
ypos 7496
}
set Na0182400 [stack 0]
Dot {
name Dot282
selected true
xpos 817
ypos 7496
}
Dot {
name Dot283
selected true
xpos 817
ypos 7590
}
NoOp {
inputs 0
name Plate2
note_font "Verdana Bold"
note_font_size 35
selected true
xpos 719
ypos 7369
}
Dot {
name Dot284
selected true
xpos 753
ypos 7527
}
Dot {
name Dot285
selected true
xpos 899
ypos 7527
}
Merge2 {
inputs 2
operation from
name Merge69
selected true
xpos 865
ypos 7587
}
Clamp {
name Clamp17
selected true
xpos 865
ypos 7657
}
Saturation {
saturation 0
mode Average
name Saturation7
selected true
xpos 865
ypos 7693
}
Dot {
name Dot308
selected true
xpos 899
ypos 7760
}
push $Na0182400
Merge2 {
inputs 2
operation plus
name Merge70
selected true
xpos 1005
ypos 7757
}
NoOp {
inputs 0
name BG7
tile_color 0xff
note_font "Verdana Bold"
note_font_size 35
selected true
xpos 1559
ypos 7477
}
Keyer {
operation "luminance key"
name Keyer4
selected true
xpos 1559
ypos 7590
}
Dot {
name Dot312
selected true
xpos 1593
ypos 7661
}
NoOp {
inputs 0
name Plate3
note_font "Verdana Bold"
note_font_size 35
selected true
xpos 1330
ypos 7360
}
Dot {
name Dot309
selected true
xpos 1364
ypos 7469
}
set Na01ce000 [stack 0]
Dot {
name Dot311
selected true
xpos 1449
ypos 7492
}
DespillMadness {
name DespillMadness14
label Dark
note_font "MS Shell Dlg 2 Bold"
selected true
xpos 1415
ypos 7559
offset -0.12
maskChannel -rgba.alpha
}
push $Na01ce000
Dot {
name Dot310
selected true
xpos 1279
ypos 7492
}
DespillMadness {
name DespillMadness
label Bright
note_font "MS Shell Dlg 2 Bold"
selected true
xpos 1245
ypos 7559
maskChannel -rgba.alpha
}
Keymix {
inputs 3
name Keymix7
selected true
xpos 1327
ypos 7652
}
Roto {
inputs 0
output alpha
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 0}
    {t x44800000 x44428000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}}}}}
toolbox {createBezier {
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_brush_hardness 0.200000003
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {1024 778}
name Roto25
selected true
xpos 1791
ypos 7655
addUserKnob {20 button +HIDDEN +INVISIBLE}
addUserKnob {22 createPowerRelative -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerRelative()"}
addUserKnob {22 createPowerAbsolute -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerAbsolute()"}
addUserKnob {22 createPowerStabilize -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerStabilize()"}
}
Blur {
name Blur26
selected true
xpos 1791
ypos 7691
}
Dot {
name Dot316
selected true
xpos 1825
ypos 7772
}
NoOp {
inputs 0
name FinalKey1
note_font "Verdana Bold"
note_font_size 35
selected true
xpos 1920
ypos 7348
}
Erode {
name Erode9
selected true
xpos 1920
ypos 7451
}
Blur {
name Blur25
selected true
xpos 1920
ypos 7523
}
Invert {
name Invert10
selected true
xpos 1920
ypos 7604
}
Grade {
channels alpha
name Grade27
selected true
xpos 1920
ypos 7673
}
Merge2 {
inputs 2
operation matte
name Merge71
selected true
xpos 1920
ypos 7769
}
Grade {
name Grade28
selected true
xpos 1920
ypos 7841
}
NoOp {
name After_Despill
note_font "Verdana Bold"
note_font_size 35
selected true
xpos 1920
ypos 7924
}
StickyNote {
inputs 0
name StickyNote12
label "Reference what to fill to.\nThis is in effect, the sample box\nwithin the PxF Screen Clean Controls"
note_font_size 15
selected true
xpos -738
ypos 7645
}
StickyNote {
inputs 0
name StickyNote13
label "Gives you just the pixels needed to \"fill in\" \nthe problems"
note_font_size 15
selected true
xpos -761
ypos 7747
}
