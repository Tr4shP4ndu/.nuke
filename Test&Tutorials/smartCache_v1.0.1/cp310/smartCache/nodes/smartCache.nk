Group {
 name smartCache
 label "<center><span style='color: #ffffff; font-weight: bold;'>LIVE</span>"
 selected true
 xpos 37
 ypos 20
 icon smartCache_live
 addUserKnob {20 smartCache}
 addUserKnob {22 mode_live l "<span style='color: #555555; font-weight: bold; font-size: 14pt;'>live</span>" t "Click to read from live node connection" -STARTLINE T "from smartCache import cache; cache.switch_to_live(nuke.thisNode())"}
 addUserKnob {22 mode_cached l "<span style='color: #009600; font-weight: bold; font-size: 14pt;'>cached</span>" t "Click to read from cache" -STARTLINE T "from smartCache import cache; cache.switch_to_cached(nuke.thisNode())"}
 addUserKnob {26 ""}
 addUserKnob {22 check_cache l "<img src='check_grey_icon.png' /><span style=\"color: #cccccc;\">check cache validity</span>" t "Click to check if the cache is still valid for each frame. A cache is valid when nothing has changed upstream, so that live node connection and rendered cache produce an identical image." -STARTLINE T "from smartCache import check; check.check_cache_still_valid()"}
 addUserKnob {22 open_cache_manager l "<img src='render_manager_icon.png' /><span style=\"color: #cccccc;\">open cache manager</span>" t "Click to open the cache manager" -STARTLINE T "from smartCache import osl; osl.show_main()"}
 addUserKnob {22 render l "<img src='render_icon.png' /><span style=\"color: #cccccc;\">render</span>" t "Click to choose from rendering the cache locally in the foreground or multi threaded in the background" -STARTLINE T "from smartCache import osl; osl.show_render_dialog()"}
 addUserKnob {20 cache_file l "cache file"}
 addUserKnob {22 reveal_cache l "<img src='reveal_icon.png' /><span style=\"color: #cccccc;\">reveal cache</span>" t "Click to reveal the cache in your explorer" T "from smartCache import cache; cache.reveal_cache(nuke.thisNode())" +STARTLINE}
 addUserKnob {22 delete_cache l "<img src='remove_icon.png' /><span style=\"color: #cc0000;\">delete cache</span>" t "Click to delete the cache node as well as the cache on disk. \nWARNING: This step cannot be undone!" -STARTLINE T "from smartCache import cache; cache.delete_cache(nuke.thisNode(), message=True)"}
 addUserKnob {1 cache_id l "cache id" t "This is the unique id of your cache" +DISABLED}
 addUserKnob {1 render_origin l origin t "Absolute path of the working file that the cache was rendered from" +DISABLED}
 addUserKnob {22 reveal_origin l reveal t "Click to reveal the original working file that this cache was rendered from" -STARTLINE T "from smartCache import cache; cache.reveal_render_origin()"}
 addUserKnob {26 class +INVISIBLE T smartCache}
 addUserKnob {26 mode +INVISIBLE T mode}
}
 Read {
  inputs 0
  origset true
  name READ
  xpos 6
  ypos -155
  raw true
  on_error black
 }
 Dot {
  name Dot1
  xpos 40
  ypos 48
 }
 Input {
  inputs 0
  name Input
  xpos -183
  ypos -143
 }
 Write {
  name WRITE
  channels all
  xpos -183
  ypos -53
  raw true
  create_directories true
  afterRender "from smartCache import callbacks; callbacks.on_cache_finished_rendering(nuke.thisNode())"
 }
 Switch {
  inputs 2
  name SWITCH
  xpos -183
  ypos 45
 }
 Output {
  name Output1
  xpos -183
  ypos 174
 }
end_group
