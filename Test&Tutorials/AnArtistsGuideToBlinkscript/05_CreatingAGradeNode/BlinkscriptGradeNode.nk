set cut_paste_input [stack 0]
version 12.2 v1
push $cut_paste_input
BlinkScript {
 recompileCount 1
 ProgramGroup 1
 KernelDescription "2 \"GradeKernel\" iterate pixelWise 012c4907ac113d0f70760704aa7fe5af919f4d8c06b36f1b5351e995efa14927 2 \"src\" Read Point \"dst\" Write Point 9 \"blackpoint\" Float 4 AAAAAAAAAAAAAAAAAAAAAA== \"whitepoint\" Float 4 AACAPwAAgD8AAIA/AACAPw== \"lift\" Float 4 AAAAAAAAAAAAAAAAAAAAAA== \"gain\" Float 4 AACAPwAAgD8AAIA/AACAPw== \"multiply\" Float 4 AACAPwAAgD8AAIA/AACAPw== \"offset\" Float 4 AAAAAAAAAAAAAAAAAAAAAA== \"gamma\" Float 4 AACAPwAAgD8AAIA/AACAPw== \"whiteclamp\" Bool 1 AA== \"blackclamp\" Bool 1 AQ== 9 \"blackpoint\" 4 1 \"whitepoint\" 4 1 \"lift\" 4 1 \"gain\" 4 1 \"multiply\" 4 1 \"offset\" 4 1 \"gamma\" 4 1 \"whiteclamp\" 1 1 \"blackclamp\" 1 1 1 \"output\" Float 4 1 AAAAAAAAAAAAAAAAAAAAAA=="
 kernelSource "\nkernel GradeKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> src; // the input image\n  Image<eWrite> dst; // the output image\n\n  param:\n    // This parameter is made available to the user.\n    float4 blackpoint;\n    float4 whitepoint;\n    float4 lift;\n    float4 gain;\n    float4 multiply;\n    float4 offset;\n    float4 gamma;\n    bool whiteclamp;\n    bool blackclamp;\n\n  local:\n    // This local variable is not exposed to the user.\n    float4 output;\n\n\n  // In define(), parameters can be given labels and default values.\n  void define() \{\n    \n    defineParam(blackpoint, \"blackpoint\", float4(0.0f));\n    defineParam(whitepoint, \"whitepoint\", float4(1.0f));\n    defineParam(lift, \"lift\", float4(0.0f));\n    defineParam(gain, \"gain\", float4(1.0f));\n    defineParam(multiply, \"multiply\", float4(1.0f));\n    defineParam(offset, \"offset\", float4(0.0f));\n    defineParam(gamma, \"gamma\", float4(1.0f));\n    defineParam(whiteclamp, \"whiteclamp\", bool(0));\n    defineParam(blackclamp, \"blackclamp\", bool(1));\n\n  \}\n\n  // The init() function is run before any calls to process().\n  // Local variables can be initialized here.\n  void init() \{\n    \n  \}\n\n  void process() \{\n    \n    // Write the result to the output image\n\n    output = src();\n\n    output =    (((((output-blackpoint) / (whitepoint-blackpoint) ) * ((gain*multiply)-lift)) +lift)+ offset) ;\n\n    if(output.x >= 0.0f)\{\n\n      output.x = pow(output.x,(1.0f/gamma.x));\n\n    \}\n\n    if(output.y >= 0.0f)\{\n\n        output.y = pow(output.y,(1.0f/gamma.y));\n\n    \}\n\n    if(output.z >= 0.0f)\{\n\n        output.z = pow(output.z,(1.0f/gamma.z));\n\n    \}\n\n    if(output.w >= 0.0f)\{\n\n        output.w = pow(output.w,(1.0f/gamma.w));\n\n    \}\n\n\n\n    if(whiteclamp == 1)\{\n\n      output = min( float4(1.0f), output   );\n\n    \}\n\n    if(blackclamp == 1)\{\n\n      output = max( float4(0.0f), output   );\n\n    \}\n\n\n\n    dst() = output;\n\n\n\n\n  \}\n\};\n"
 rebuild ""
 rebuild_finalise ""
 name BlinkScript4
 selected true
 xpos 202
 ypos 81
}
