set cut_paste_input [stack 0]
version 12.2 v1
push $cut_paste_input
BlinkScript {
 recompileCount 16
 ProgramGroup 1
 KernelDescription "2 \"ThreeByThreeColourMatrixKernel\" iterate pixelWise eaa409fa65928911db87e85f3a0484fdc14488942395910a2a27a15ed387bda5 2 \"src\" Read Point \"dst\" Write Point 2 \"matrixInput\" Float 9 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA \"invert\" Bool 1 AA== 2 \"matrixInput\" 9 1 \"invert\" 1 1 1 \"output\" Float 4 1 AAAAAAAAAAAAAAAAAAAAAA=="
 kernelSource "\nkernel ThreeByThreeColourMatrixKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> src; // the input image\n  Image<eWrite> dst; // the output image\n\n  param:\n    // This parameter is made available to the user.\n    float3x3 matrixInput;\n    bool invert;\n\n  local:\n    // This local variable is not exposed to the user.\n\n    float4 output;\n\n  // In define(), parameters can be given labels and default values.\n  void define() \{\n    \n  \}\n\n  // The init() function is run before any calls to process().\n  // Local variables can be initialized here.\n  void init() \{\n    \n  \}\n\n  void process() \{\n    \n    float3x3 matrix = matrixInput;\n    \n    matrix = invert ?  matrix.invert() : matrix;\n\n    output.x = src().x * matrix\[0]\[0] + src().y * matrix\[0]\[1] + src().z * matrix\[0]\[2];\n    output.y = src().x * matrix\[1]\[0] + src().y * matrix\[1]\[1] + src().z * matrix\[1]\[2];\n    output.z = src().x * matrix\[2]\[0] + src().y * matrix\[2]\[1] + src().z * matrix\[2]\[2];\n\n    // Write the result to the output image\n    dst() = output;\n  \}\n\};\n"
 rebuild ""
 ThreeByThreeColourMatrixKernel_matrixInput {
     {1 0 0}
     {0 1 0}
     {0 0 1}
   }
 rebuild_finalise ""
 name BlinkScript3
 selected true
 xpos 265
 ypos -214
}
